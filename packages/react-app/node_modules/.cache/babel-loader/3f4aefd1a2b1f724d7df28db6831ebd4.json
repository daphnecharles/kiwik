{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/Wallet.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport QR from \"qrcode.react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Text = Typography.Text,\n    Paragraph = Typography.Paragraph;\n/**\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n**/\n\nexport default function Wallet(props) {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      signerAddress = _useState2[0],\n      setSignerAddress = _useState2[1];\n\n  useEffect(function () {\n    function getAddress() {\n      return _getAddress.apply(this, arguments);\n    }\n\n    function _getAddress() {\n      _getAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var newAddress;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!props.signer) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return props.signer.getAddress();\n\n              case 3:\n                newAddress = _context.sent;\n                setSignerAddress(newAddress);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getAddress.apply(this, arguments);\n    }\n\n    getAddress();\n  }, [props.signer]);\n  var selectedAddress = props.address || signerAddress;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      qr = _useState6[0],\n      setQr = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      amount = _useState8[0],\n      setAmount = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toAddress = _useState10[0],\n      setToAddress = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      pk = _useState12[0],\n      setPK = _useState12[1];\n\n  var providerSend = props.provider ? /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Wallet\",\n    children: /*#__PURE__*/_jsxDEV(WalletOutlined, {\n      onClick: function onClick() {\n        setOpen(!open);\n      },\n      rotate: -90,\n      style: {\n        padding: 7,\n        color: props.color ? props.color : \"\",\n        cursor: \"pointer\",\n        fontSize: 28,\n        verticalAlign: \"middle\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this) : \"\";\n  var display;\n  var receiveButton;\n  var privateKeyButton;\n\n  if (qr) {\n    display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          copyable: true,\n          children: selectedAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QR, {\n        value: selectedAddress,\n        size: \"450\",\n        level: \"H\",\n        includeMargin: true,\n        renderAs: \"svg\",\n        imageSettings: {\n          excavate: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick() {\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), \" Hide\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick() {\n        setPK(selectedAddress);\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \" Private Key\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  } else if (pk) {\n    var _pk = localStorage.getItem(\"metaPrivateKey\");\n\n    var wallet = new ethers.Wallet(_pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"*injected account*, private key unknown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    } else {\n      var extraPkDisplayAdded = {};\n      var extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 16,\n          padding: 2,\n          backgroundStyle: \"#89e789\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/pk#\" + _pk,\n          children: [/*#__PURE__*/_jsxDEV(Address, {\n            minimized: true,\n            address: wallet.address,\n            ensProvider: props.ensProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), \" \", wallet.address.substr(0, 6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this));\n\n      for (var key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          var pastpk = localStorage.getItem(key);\n          var pastwallet = new ethers.Wallet(pastpk);\n\n          if (!extraPkDisplayAdded[pastwallet.address]\n          /* && selectedAddress!=pastwallet.address */\n          ) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/pk#\" + pastpk,\n                children: [/*#__PURE__*/_jsxDEV(Address, {\n                  minimized: true,\n                  address: pastwallet.address,\n                  ensProvider: props.ensProvider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), \" \", pastwallet.address.substr(0, 6)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this));\n          }\n        }\n      }\n\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Private Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            copyable: true,\n            children: _pk\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"Point your camera phone at qr code to open in\", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: \"https://xdai.io/\" + _pk,\n            rel: \"noopener noreferrer\",\n            children: \"burner wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QR, {\n          value: \"https://xdai.io/\" + _pk,\n          size: \"450\",\n          level: \"H\",\n          includeMargin: true,\n          renderAs: \"svg\",\n          imageSettings: {\n            excavate: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          style: {\n            fontSize: \"16\"\n          },\n          copyable: true,\n          children: \"https://xdai.io/\" + _pk\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), extraPkDisplay ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Known Private Keys:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), extraPkDisplay, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: function onClick() {\n              var currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n\n              if (currentPrivateKey) {\n                window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n              }\n\n              var randomWallet = ethers.Wallet.createRandom();\n\n              var privateKey = randomWallet._signingKey().privateKey;\n\n              window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n              window.location.reload();\n            },\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this);\n    }\n\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick() {\n        setQr(selectedAddress);\n        setPK(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), \" Receive\"]\n    }, \"receive\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick() {\n        setPK(\"\");\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), \" Hide\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  } else {\n    var inputStyle = {\n      padding: 10\n    };\n    display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputStyle,\n        children: /*#__PURE__*/_jsxDEV(AddressInput, {\n          autoFocus: true,\n          ensProvider: props.ensProvider,\n          placeholder: \"to address\",\n          address: toAddress,\n          onChange: setToAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputStyle,\n        children: /*#__PURE__*/_jsxDEV(EtherInput, {\n          price: props.price,\n          value: amount,\n          onChange: function onChange(value) {\n            setAmount(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick() {\n        setQr(selectedAddress);\n        setPK(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), \" Receive\"]\n    }, \"receive\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: function onClick() {\n        setPK(selectedAddress);\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), \" Private Key\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [providerSend, /*#__PURE__*/_jsxDEV(Modal, {\n      visible: open,\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [selectedAddress ? /*#__PURE__*/_jsxDEV(Address, {\n          address: selectedAddress,\n          ensProvider: props.ensProvider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 104\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\",\n            paddingRight: 25\n          },\n          children: /*#__PURE__*/_jsxDEV(Balance, {\n            address: selectedAddress,\n            provider: props.provider,\n            dollarMultiplier: props.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this),\n      onOk: function onOk() {\n        setQr();\n        setPK();\n        setOpen(!open);\n      },\n      onCancel: function onCancel() {\n        setQr();\n        setPK();\n        setOpen(!open);\n      },\n      footer: [privateKeyButton, receiveButton, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        disabled: !amount || !toAddress || qr,\n        loading: false,\n        onClick: function onClick() {\n          var tx = Transactor(props.signer || props.provider);\n          var value;\n\n          try {\n            value = ethers.utils.parseEther(\"\" + amount);\n          } catch (e) {\n            // failed to parseEther, try something else\n            value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n          }\n\n          tx({\n            to: toAddress,\n            value: value\n          });\n          setOpen(!open);\n          setQr();\n        },\n        children: [/*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), \" Send\"]\n      }, \"submit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)],\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wallet, \"RR8RrILVK4aiQPz9aSoOMtj+2GU=\");\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/Wallet.jsx"],"names":["Button","Modal","Spin","Tooltip","Typography","React","useState","useEffect","ethers","KeyOutlined","QrcodeOutlined","SendOutlined","WalletOutlined","QR","Transactor","Address","AddressInput","Balance","EtherInput","Text","Paragraph","Wallet","props","signerAddress","setSignerAddress","getAddress","signer","newAddress","selectedAddress","address","open","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","provider","padding","color","cursor","fontSize","verticalAlign","display","receiveButton","privateKeyButton","excavate","localStorage","getItem","wallet","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","ensProvider","substr","key","indexOf","console","log","pastpk","pastwallet","currentPrivateKey","window","setItem","Date","now","randomWallet","createRandom","privateKey","_signingKey","location","reload","inputStyle","price","value","float","paddingRight","tx","utils","parseEther","e","parseFloat","toFixed","to"],"mappings":";;;;;;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuCC,UAAvC,QAAyD,MAAzD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,EAAoDC,cAApD,QAA0E,mBAA1E;AACA,OAAOC,EAAP,MAAe,cAAf;AAEA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAQC,IAAR,GAA4Bf,UAA5B,CAAQe,IAAR;AAAA,IAAcC,SAAd,GAA4BhB,UAA5B,CAAcgB,SAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,kBAA0ChB,QAAQ,EAAlD;AAAA;AAAA,MAAOiB,aAAP;AAAA,MAAsBC,gBAAtB;;AACAjB,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCkB,UADD;AAAA;AAAA;;AAAA;AAAA,6EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMH,KAAK,CAACI,MADZ;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAE6BJ,KAAK,CAACI,MAAN,CAAaD,UAAb,EAF7B;;AAAA;AAEUE,gBAAAA,UAFV;AAGIH,gBAAAA,gBAAgB,CAACG,UAAD,CAAhB;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAOdF,IAAAA,UAAU;AACX,GARQ,EAQN,CAACH,KAAK,CAACI,MAAP,CARM,CAAT;AAUA,MAAME,eAAe,GAAGN,KAAK,CAACO,OAAN,IAAiBN,aAAzC;;AAEA,mBAAwBjB,QAAQ,EAAhC;AAAA;AAAA,MAAOwB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAoBzB,QAAQ,EAA5B;AAAA;AAAA,MAAO0B,EAAP;AAAA,MAAWC,KAAX;;AACA,mBAA4B3B,QAAQ,EAApC;AAAA;AAAA,MAAO4B,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAkC7B,QAAQ,EAA1C;AAAA;AAAA,MAAO8B,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAAoB/B,QAAQ,EAA5B;AAAA;AAAA,MAAOgC,EAAP;AAAA,MAAWC,KAAX;;AAEA,MAAMC,YAAY,GAAGlB,KAAK,CAACmB,QAAN,gBACnB,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbV,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,OAHH;AAIE,MAAA,MAAM,EAAE,CAAC,EAJX;AAKE,MAAA,KAAK,EAAE;AACLY,QAAAA,OAAO,EAAE,CADJ;AAELC,QAAAA,KAAK,EAAErB,KAAK,CAACqB,KAAN,GAAcrB,KAAK,CAACqB,KAApB,GAA4B,EAF9B;AAGLC,QAAAA,MAAM,EAAE,SAHH;AAILC,QAAAA,QAAQ,EAAE,EAJL;AAKLC,QAAAA,aAAa,EAAE;AALV;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADmB,GAiBnB,EAjBF;AAoBA,MAAIC,OAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,gBAAJ;;AACA,MAAIjB,EAAJ,EAAQ;AACNe,IAAAA,OAAO,gBACL;AAAA,8BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,QAAQ,MAAd;AAAA,oBAAgBnB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,EAAD;AACE,QAAA,KAAK,EAAEA,eADT;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,KAAK,EAAC,GAHR;AAIE,QAAA,aAAa,MAJf;AAKE,QAAA,QAAQ,EAAC,KALX;AAME,QAAA,aAAa,EAAE;AAAEsB,UAAAA,QAAQ,EAAE;AAAZ;AANjB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeAF,IAAAA,aAAa,gBACX,QAAC,MAAD;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbf,QAAAA,KAAK,CAAC,EAAD,CAAL;AACD,OAJH;AAAA,8BAME,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OACM,MADN;AAAA;AAAA;AAAA;AAAA,YADF;AAUAgB,IAAAA,gBAAgB,gBACd,QAAC,MAAD;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbV,QAAAA,KAAK,CAACX,eAAD,CAAL;AACAK,QAAAA,KAAK,CAAC,EAAD,CAAL;AACD,OALH;AAAA,8BAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OACM,MADN;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GArCD,MAqCO,IAAIK,EAAJ,EAAQ;AACb,QAAMA,GAAE,GAAGa,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX;;AACA,QAAMC,MAAM,GAAG,IAAI7C,MAAM,CAACa,MAAX,CAAkBiB,GAAlB,CAAf;;AAEA,QAAIe,MAAM,CAACxB,OAAP,KAAmBD,eAAvB,EAAwC;AACtCmB,MAAAA,OAAO,gBACL;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAMO;AACL,UAAMO,mBAAmB,GAAG,EAA5B;AACA,UAAMC,cAAc,GAAG,EAAvB;AACAD,MAAAA,mBAAmB,CAACD,MAAM,CAACxB,OAAR,CAAnB,GAAsC,IAAtC;AACA0B,MAAAA,cAAc,CAACC,IAAf,eACE;AAAK,QAAA,KAAK,EAAE;AAAEX,UAAAA,QAAQ,EAAE,EAAZ;AAAgBH,UAAAA,OAAO,EAAE,CAAzB;AAA4Be,UAAAA,eAAe,EAAE;AAA7C,SAAZ;AAAA,+BACE;AAAG,UAAA,IAAI,EAAE,SAASnB,GAAlB;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,SAAS,MAAlB;AAAmB,YAAA,OAAO,EAAEe,MAAM,CAACxB,OAAnC;AAA4C,YAAA,WAAW,EAAEP,KAAK,CAACoC;AAA/D;AAAA;AAAA;AAAA;AAAA,kBADF,OACkFL,MAAM,CAACxB,OAAP,CAAe8B,MAAf,CAAsB,CAAtB,EAAyB,CAAzB,CADlF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;;AAOA,WAAK,IAAMC,GAAX,IAAkBT,YAAlB,EAAgC;AAC9B,YAAIS,GAAG,CAACC,OAAJ,CAAY,uBAAZ,KAAwC,CAA5C,EAA+C;AAC7CC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,cAAMI,MAAM,GAAGb,YAAY,CAACC,OAAb,CAAqBQ,GAArB,CAAf;AACA,cAAMK,UAAU,GAAG,IAAIzD,MAAM,CAACa,MAAX,CAAkB2C,MAAlB,CAAnB;;AACA,cAAI,CAACV,mBAAmB,CAACW,UAAU,CAACpC,OAAZ;AAAqB;AAA7C,YAA2F;AACzFyB,YAAAA,mBAAmB,CAACW,UAAU,CAACpC,OAAZ,CAAnB,GAA0C,IAA1C;AACA0B,YAAAA,cAAc,CAACC,IAAf,eACE;AAAK,cAAA,KAAK,EAAE;AAAEX,gBAAAA,QAAQ,EAAE;AAAZ,eAAZ;AAAA,qCACE;AAAG,gBAAA,IAAI,EAAE,SAASmB,MAAlB;AAAA,wCACE,QAAC,OAAD;AAAS,kBAAA,SAAS,MAAlB;AAAmB,kBAAA,OAAO,EAAEC,UAAU,CAACpC,OAAvC;AAAgD,kBAAA,WAAW,EAAEP,KAAK,CAACoC;AAAnE;AAAA;AAAA;AAAA;AAAA,wBADF,EACqF,GADrF,EAEGO,UAAU,CAACpC,OAAX,CAAmB8B,MAAnB,CAA0B,CAA1B,EAA6B,CAA7B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD;AACF;AACF;;AAEDZ,MAAAA,OAAO,gBACL;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,MAAd;AAAA,sBAAgBT;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,eASE;AAAA,mFAEE;AAAG,YAAA,MAAM,EAAC,QAAV;AAAmB,YAAA,IAAI,EAAE,qBAAqBA,GAA9C;AAAkD,YAAA,GAAG,EAAC,qBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAgBE,QAAC,EAAD;AACE,UAAA,KAAK,EAAE,qBAAqBA,GAD9B;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,KAAK,EAAC,GAHR;AAIE,UAAA,aAAa,MAJf;AAKE,UAAA,QAAQ,EAAC,KALX;AAME,UAAA,aAAa,EAAE;AAAEY,YAAAA,QAAQ,EAAE;AAAZ;AANjB;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAyBE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEL,YAAAA,QAAQ,EAAE;AAAZ,WAAlB;AAAsC,UAAA,QAAQ,MAA9C;AAAA,oBACG,qBAAqBP;AADxB;AAAA;AAAA;AAAA;AAAA,gBAzBF,EA6BGiB,cAAc,gBACb;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGA,cAFH,eAGE,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACb,kBAAMW,iBAAiB,GAAGC,MAAM,CAAChB,YAAP,CAAoBC,OAApB,CAA4B,gBAA5B,CAA1B;;AACA,kBAAIc,iBAAJ,EAAuB;AACrBC,gBAAAA,MAAM,CAAChB,YAAP,CAAoBiB,OAApB,CAA4B,0BAA0BC,IAAI,CAACC,GAAL,EAAtD,EAAkEJ,iBAAlE;AACD;;AACD,kBAAMK,YAAY,GAAG/D,MAAM,CAACa,MAAP,CAAcmD,YAAd,EAArB;;AACA,kBAAMC,UAAU,GAAGF,YAAY,CAACG,WAAb,GAA2BD,UAA9C;;AACAN,cAAAA,MAAM,CAAChB,YAAP,CAAoBiB,OAApB,CAA4B,gBAA5B,EAA8CK,UAA9C;AACAN,cAAAA,MAAM,CAACQ,QAAP,CAAgBC,MAAhB;AACD,aAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADa,GAoBb,EAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAsDD;;AAED5B,IAAAA,aAAa,gBACX,QAAC,MAAD;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbf,QAAAA,KAAK,CAACL,eAAD,CAAL;AACAW,QAAAA,KAAK,CAAC,EAAD,CAAL;AACD,OALH;AAAA,8BAOE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OACM,SADN;AAAA;AAAA;AAAA;AAAA,YADF;AAWAU,IAAAA,gBAAgB,gBACd,QAAC,MAAD;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbV,QAAAA,KAAK,CAAC,EAAD,CAAL;AACAN,QAAAA,KAAK,CAAC,EAAD,CAAL;AACD,OALH;AAAA,8BAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OACM,MADN;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAtHM,MAsHA;AACL,QAAM4C,UAAU,GAAG;AACjBnC,MAAAA,OAAO,EAAE;AADQ,KAAnB;AAIAK,IAAAA,OAAO,gBACL;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE8B,UAAZ;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,WAAW,EAAEvD,KAAK,CAACoC,WAFrB;AAGE,UAAA,WAAW,EAAC,YAHd;AAIE,UAAA,OAAO,EAAEtB,SAJX;AAKE,UAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,KAAK,EAAEwC,UAAZ;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAEvD,KAAK,CAACwD,KADf;AAEE,UAAA,KAAK,EAAE5C,MAFT;AAGE,UAAA,QAAQ,EAAE,kBAAA6C,KAAK,EAAI;AACjB5C,YAAAA,SAAS,CAAC4C,KAAD,CAAT;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBA/B,IAAAA,aAAa,gBACX,QAAC,MAAD;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbf,QAAAA,KAAK,CAACL,eAAD,CAAL;AACAW,QAAAA,KAAK,CAAC,EAAD,CAAL;AACD,OALH;AAAA,8BAOE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OACM,SADN;AAAA;AAAA;AAAA;AAAA,YADF;AAWAU,IAAAA,gBAAgB,gBACd,QAAC,MAAD;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbV,QAAAA,KAAK,CAACX,eAAD,CAAL;AACAK,QAAAA,KAAK,CAAC,EAAD,CAAL;AACD,OALH;AAAA,8BAOE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OACM,MADN;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,sBACE;AAAA,eACGO,YADH,eAEE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEV,IADX;AAEE,MAAA,KAAK,eACH;AAAA,mBACGF,eAAe,gBAAG,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEA,eAAlB;AAAmC,UAAA,WAAW,EAAEN,KAAK,CAACoC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA2E,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAD7F,eAEE;AAAK,UAAA,KAAK,EAAE;AAAEsB,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,YAAY,EAAE;AAAhC,WAAZ;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAErD,eAAlB;AAAmC,YAAA,QAAQ,EAAEN,KAAK,CAACmB,QAAnD;AAA6D,YAAA,gBAAgB,EAAEnB,KAAK,CAACwD;AAArF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAUE,MAAA,IAAI,EAAE,gBAAM;AACV7C,QAAAA,KAAK;AACLM,QAAAA,KAAK;AACLR,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,OAdH;AAeE,MAAA,QAAQ,EAAE,oBAAM;AACdG,QAAAA,KAAK;AACLM,QAAAA,KAAK;AACLR,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,OAnBH;AAoBE,MAAA,MAAM,EAAE,CACNmB,gBADM,EAEND,aAFM,eAGN,QAAC,MAAD;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,QAAQ,EAAE,CAACd,MAAD,IAAW,CAACE,SAAZ,IAAyBJ,EAHrC;AAIE,QAAA,OAAO,EAAE,KAJX;AAKE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAMkD,EAAE,GAAGpE,UAAU,CAACQ,KAAK,CAACI,MAAN,IAAgBJ,KAAK,CAACmB,QAAvB,CAArB;AAEA,cAAIsC,KAAJ;;AACA,cAAI;AACFA,YAAAA,KAAK,GAAGvE,MAAM,CAAC2E,KAAP,CAAaC,UAAb,CAAwB,KAAKlD,MAA7B,CAAR;AACD,WAFD,CAEE,OAAOmD,CAAP,EAAU;AACV;AACAN,YAAAA,KAAK,GAAGvE,MAAM,CAAC2E,KAAP,CAAaC,UAAb,CAAwB,KAAKE,UAAU,CAACpD,MAAD,CAAV,CAAmBqD,OAAnB,CAA2B,CAA3B,CAA7B,CAAR;AACD;;AAEDL,UAAAA,EAAE,CAAC;AACDM,YAAAA,EAAE,EAAEpD,SADH;AAED2C,YAAAA,KAAK,EAALA;AAFC,WAAD,CAAF;AAIAhD,UAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAG,UAAAA,KAAK;AACN,SAtBH;AAAA,gCAwBE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA,SACM,QADN;AAAA;AAAA;AAAA;AAAA,cAHM,CApBV;AAAA,gBAmDGc;AAnDH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD;;GAnTuB1B,M;;KAAAA,M","sourcesContent":["import { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport QR from \"qrcode.react\";\n\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\n\nconst { Text, Paragraph } = Typography;\n\n/**\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n**/\n\nexport default function Wallet(props) {\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div>\n            <Text copyable>{pk}</Text>\n          </div>\n\n          <hr />\n\n          <i>\n            Point your camera phone at qr code to open in\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\n              burner wallet\n            </a>\n            :\n          </i>\n          <QR\n            value={\"https://xdai.io/\" + pk}\n            size=\"450\"\n            level=\"H\"\n            includeMargin\n            renderAs=\"svg\"\n            imageSettings={{ excavate: false }}\n          />\n\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\n            {\"https://xdai.io/\" + pk}\n          </Paragraph>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.signer || props.provider);\n\n              let value;\n              try {\n                value = ethers.utils.parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}