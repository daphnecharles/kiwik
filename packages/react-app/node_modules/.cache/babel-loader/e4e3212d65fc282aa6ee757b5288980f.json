{"ast":null,"code":"import { Kind } from 'graphql';\nexport var AdditionalRuleKinds = {\n  ALIASED_FIELD: 'AliasedField',\n  ARGUMENTS: 'Arguments',\n  SHORT_QUERY: 'ShortQuery',\n  QUERY: 'Query',\n  MUTATION: 'Mutation',\n  SUBSCRIPTION: 'Subscription',\n  TYPE_CONDITION: 'TypeCondition',\n  INVALID: 'Invalid',\n  COMMENT: 'Comment',\n  SCHEMA_DEF: 'SchemaDef',\n  SCALAR_DEF: 'ScalarDef',\n  OBJECT_TYPE_DEF: 'ObjectTypeDef',\n  OBJECT_VALUE: 'ObjectValue',\n  LIST_VALUE: 'ListValue',\n  INTERFACE_DEF: 'InterfaceDef',\n  UNION_DEF: 'UnionDef',\n  ENUM_DEF: 'EnumDef',\n  ENUM_VALUE: 'EnumValue',\n  FIELD_DEF: 'FieldDef',\n  INPUT_DEF: 'InputDef',\n  INPUT_VALUE_DEF: 'InputValueDef',\n  ARGUMENTS_DEF: 'ArgumentsDef',\n  EXTEND_DEF: 'ExtendDef',\n  DIRECTIVE_DEF: 'DirectiveDef',\n  IMPLEMENTS: 'Implements',\n  VARIABLE_DEFINITIONS: 'VariableDefinitions',\n  TYPE: 'Type'\n};\nexport var RuleKinds = Object.assign(Object.assign({}, Kind), AdditionalRuleKinds);","map":{"version":3,"sources":["../src/types.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,QAAqB,SAArB;AAyDA,OAAO,IAAM,mBAAmB,GAAyB;AACvD,EAAA,aAAa,EAAE,cADwC;AAEvD,EAAA,SAAS,EAAE,WAF4C;AAGvD,EAAA,WAAW,EAAE,YAH0C;AAIvD,EAAA,KAAK,EAAE,OAJgD;AAKvD,EAAA,QAAQ,EAAE,UAL6C;AAMvD,EAAA,YAAY,EAAE,cANyC;AAOvD,EAAA,cAAc,EAAE,eAPuC;AAQvD,EAAA,OAAO,EAAE,SAR8C;AASvD,EAAA,OAAO,EAAE,SAT8C;AAUvD,EAAA,UAAU,EAAE,WAV2C;AAWvD,EAAA,UAAU,EAAE,WAX2C;AAYvD,EAAA,eAAe,EAAE,eAZsC;AAavD,EAAA,YAAY,EAAE,aAbyC;AAcvD,EAAA,UAAU,EAAE,WAd2C;AAevD,EAAA,aAAa,EAAE,cAfwC;AAgBvD,EAAA,SAAS,EAAE,UAhB4C;AAiBvD,EAAA,QAAQ,EAAE,SAjB6C;AAkBvD,EAAA,UAAU,EAAE,WAlB2C;AAmBvD,EAAA,SAAS,EAAE,UAnB4C;AAoBvD,EAAA,SAAS,EAAE,UApB4C;AAqBvD,EAAA,eAAe,EAAE,eArBsC;AAsBvD,EAAA,aAAa,EAAE,cAtBwC;AAuBvD,EAAA,UAAU,EAAE,WAvB2C;AAwBvD,EAAA,aAAa,EAAE,cAxBwC;AAyBvD,EAAA,UAAU,EAAE,YAzB2C;AA0BvD,EAAA,oBAAoB,EAAE,qBA1BiC;AA2BvD,EAAA,IAAI,EAAE;AA3BiD,CAAlD;AA4DP,OAAO,IAAM,SAAS,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACjB,IADiB,CAAA,EAEjB,mBAFiB,CAAf","sourceRoot":"","sourcesContent":["import { Kind } from 'graphql';\nexport const AdditionalRuleKinds = {\n    ALIASED_FIELD: 'AliasedField',\n    ARGUMENTS: 'Arguments',\n    SHORT_QUERY: 'ShortQuery',\n    QUERY: 'Query',\n    MUTATION: 'Mutation',\n    SUBSCRIPTION: 'Subscription',\n    TYPE_CONDITION: 'TypeCondition',\n    INVALID: 'Invalid',\n    COMMENT: 'Comment',\n    SCHEMA_DEF: 'SchemaDef',\n    SCALAR_DEF: 'ScalarDef',\n    OBJECT_TYPE_DEF: 'ObjectTypeDef',\n    OBJECT_VALUE: 'ObjectValue',\n    LIST_VALUE: 'ListValue',\n    INTERFACE_DEF: 'InterfaceDef',\n    UNION_DEF: 'UnionDef',\n    ENUM_DEF: 'EnumDef',\n    ENUM_VALUE: 'EnumValue',\n    FIELD_DEF: 'FieldDef',\n    INPUT_DEF: 'InputDef',\n    INPUT_VALUE_DEF: 'InputValueDef',\n    ARGUMENTS_DEF: 'ArgumentsDef',\n    EXTEND_DEF: 'ExtendDef',\n    DIRECTIVE_DEF: 'DirectiveDef',\n    IMPLEMENTS: 'Implements',\n    VARIABLE_DEFINITIONS: 'VariableDefinitions',\n    TYPE: 'Type',\n};\nexport const RuleKinds = Object.assign(Object.assign({}, Kind), AdditionalRuleKinds);\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"module"}