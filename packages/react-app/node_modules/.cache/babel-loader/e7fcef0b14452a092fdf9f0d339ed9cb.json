{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar isOptionObject = require('is-plain-obj');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propertyIsEnumerable = Object.propertyIsEnumerable;\n\nvar defineProperty = function defineProperty(object, name, value) {\n  return Object.defineProperty(object, name, {\n    value: value,\n    writable: true,\n    enumerable: true,\n    configurable: true\n  });\n};\n\nvar globalThis = this;\nvar defaultMergeOptions = {\n  concatArrays: false,\n  ignoreUndefined: false\n};\n\nvar getEnumerableOwnPropertyKeys = function getEnumerableOwnPropertyKeys(value) {\n  var keys = [];\n\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      keys.push(key);\n    }\n  }\n  /* istanbul ignore else  */\n\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(value);\n\n    var _iterator = _createForOfIteratorHelper(symbols),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var symbol = _step.value;\n\n        if (propertyIsEnumerable.call(value, symbol)) {\n          keys.push(symbol);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return keys;\n};\n\nfunction clone(value) {\n  if (Array.isArray(value)) {\n    return cloneArray(value);\n  }\n\n  if (isOptionObject(value)) {\n    return cloneOptionObject(value);\n  }\n\n  return value;\n}\n\nfunction cloneArray(array) {\n  var result = array.slice(0, 0);\n  getEnumerableOwnPropertyKeys(array).forEach(function (key) {\n    defineProperty(result, key, clone(array[key]));\n  });\n  return result;\n}\n\nfunction cloneOptionObject(object) {\n  var result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n  getEnumerableOwnPropertyKeys(object).forEach(function (key) {\n    defineProperty(result, key, clone(object[key]));\n  });\n  return result;\n}\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\n\n\nvar mergeKeys = function mergeKeys(merged, source, keys, config) {\n  keys.forEach(function (key) {\n    if (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n      return;\n    } // Do not recurse into prototype chain of merged\n\n\n    if (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n      defineProperty(merged, key, merge(merged[key], source[key], config));\n    } else {\n      defineProperty(merged, key, clone(source[key]));\n    }\n  });\n  return merged;\n};\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\n\n\nvar concatArrays = function concatArrays(merged, source, config) {\n  var result = merged.slice(0, 0);\n  var resultIndex = 0;\n  [merged, source].forEach(function (array) {\n    var indices = []; // `result.concat(array)` with cloning\n\n    for (var k = 0; k < array.length; k++) {\n      if (!hasOwnProperty.call(array, k)) {\n        continue;\n      }\n\n      indices.push(String(k));\n\n      if (array === merged) {\n        // Already cloned\n        defineProperty(result, resultIndex++, array[k]);\n      } else {\n        defineProperty(result, resultIndex++, clone(array[k]));\n      }\n    } // Merge non-index keys\n\n\n    result = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(function (key) {\n      return !indices.includes(key);\n    }), config);\n  });\n  return result;\n};\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\n\n\nfunction merge(merged, source, config) {\n  if (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n    return concatArrays(merged, source, config);\n  }\n\n  if (!isOptionObject(source) || !isOptionObject(merged)) {\n    return clone(source);\n  }\n\n  return mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function () {\n  var config = merge(clone(defaultMergeOptions), this !== globalThis && this || {}, defaultMergeOptions);\n  var merged = {\n    _: {}\n  };\n\n  for (var _len = arguments.length, options = new Array(_len), _key = 0; _key < _len; _key++) {\n    options[_key] = arguments[_key];\n  }\n\n  for (var _i = 0, _options = options; _i < _options.length; _i++) {\n    var option = _options[_i];\n\n    if (option === undefined) {\n      continue;\n    }\n\n    if (!isOptionObject(option)) {\n      throw new TypeError('`' + option + '` is not an Option Object');\n    }\n\n    merged = merge(merged, {\n      _: option\n    }, config);\n  }\n\n  return merged._;\n};","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/merge-options/index.js"],"names":["isOptionObject","require","hasOwnProperty","Object","prototype","propertyIsEnumerable","defineProperty","object","name","value","writable","enumerable","configurable","globalThis","defaultMergeOptions","concatArrays","ignoreUndefined","getEnumerableOwnPropertyKeys","keys","key","call","push","getOwnPropertySymbols","symbols","symbol","clone","Array","isArray","cloneArray","cloneOptionObject","array","result","slice","forEach","getPrototypeOf","create","mergeKeys","merged","source","config","merge","resultIndex","indices","k","length","String","filter","includes","module","exports","_","options","option","undefined","TypeError"],"mappings":"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","sourcesContent":["'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n"]},"metadata":{},"sourceType":"script"}