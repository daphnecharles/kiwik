{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useBalance, useContractLoader, useContractReader, useGasPrice, useOnBlock, useUserProviderAndSigner } from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, NetworkDisplay, FaucetHint, NetworkSwitch, PricingTiers } from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\"; // contracts\n\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { Home, ExampleUI, Hints, Subgraph } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _require = require(\"ethers\"),\n    ethers = _require.ethers,\n    ContractFactory = _require.ContractFactory;\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nvar initialNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nvar DEBUG = true;\nvar NETWORKCHECK = true;\nvar USE_BURNER_WALLET = true; // toggle burner wallet feature\n\nvar USE_NETWORK_SELECTOR = true;\nvar web3Modal = Web3ModalSetup(); // üõ∞ providers\n\nvar providers = [\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\", \"https://eth-mainnet.alchemyapi.io/v2/\".concat(ALCHEMY_KEY), \"https://rpc.scaffoldeth.io:48544\"];\n\nfunction App(props) {\n  _s();\n\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  var networkOptions = [\"mumbai\", initialNetwork.name];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      injectedProvider = _useState2[0],\n      setInjectedProvider = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(networkOptions[0]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNetwork = _useState6[0],\n      setSelectedNetwork = _useState6[1];\n\n  var location = useLocation();\n  var targetNetwork = NETWORKS[selectedNetwork]; // üî≠ block explorer URL\n\n  var blockExplorer = targetNetwork.blockExplorer; // load all your providers\n\n  var localProvider = useStaticJsonRPC([process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl]);\n  var mainnetProvider = useStaticJsonRPC(providers);\n  if (DEBUG) console.log(\"Using \".concat(selectedNetwork, \" network\"));\n  if (DEBUG) console.log(\"Blockexplorer: \".concat(blockExplorer)); // üõ∞ providers\n\n  if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n\n  var logoutOfWeb3Modal = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3Modal.clearCachedProvider();\n\n            case 2:\n              if (!(injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\")) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return injectedProvider.provider.disconnect();\n\n            case 5:\n              setTimeout(function () {\n                window.location.reload();\n              }, 1);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function logoutOfWeb3Modal() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n\n  var price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  var gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  var userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  var userSigner = userProviderAndSigner.signer;\n  useEffect(function () {\n    function getAddress() {\n      return _getAddress.apply(this, arguments);\n    }\n\n    function _getAddress() {\n      _getAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var newAddress;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!userSigner) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return userSigner.getAddress();\n\n              case 3:\n                newAddress = _context2.sent;\n                setAddress(newAddress);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getAddress.apply(this, arguments);\n    }\n\n    getAddress();\n  }, [userSigner]);\n  var name = \"Example NFT\";\n  var uri = \"bafybeicqgpqwpf3kdpngkzc5modcswibvmxetwz6ttmf7cvgroipewpsbu\";\n  var cost = \"\";\n  var maxMintAmount = 0;\n  var mintCapped = false;\n  useEffect(function (userSigner) {\n    function mintNFT() {\n      return _mintNFT.apply(this, arguments);\n    }\n\n    function _mintNFT() {\n      _mintNFT = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var abi, bytecode, nftContractFactory, price, options, contract;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          // Read the contract artifact, which was generated by Remix\n                          abi = JSON.parse(fs.readFileSync('./contracts/data/NftShop.abi').toString());\n                          bytecode = JSON.parse(fs.readFileSync('./contracts/data/NftShop.bytecode').toString());\n                          nftContractFactory = new ContractFactory(abi, bytecode); // Set gas limit and gas price, using the default Ropsten provider\n\n                          _context3.t0 = ethers.utils;\n                          _context3.next = 6;\n                          return localProvider.getGasPrice();\n\n                        case 6:\n                          _context3.t1 = _context3.sent;\n                          price = _context3.t0.formatUnits.call(_context3.t0, _context3.t1, 'gwei');\n                          options = {\n                            gasLimit: 100000,\n                            gasPrice: ethers.utils.parseUnits(price, 'gwei')\n                          }; // Deploy the contract\n\n                          _context3.next = 11;\n                          return nftContractFactory.deploy(name, uri, cost, maxMintAmount, mintCapped, options);\n\n                        case 11:\n                          contract = _context3.sent;\n                          _context3.next = 14;\n                          return contract.deployed();\n\n                        case 14:\n                          console.log(\"Deployment successful! Contract Address: \".concat(contract.address));\n\n                        case 15:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }))();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      return _mintNFT.apply(this, arguments);\n    }\n  });\n\n  _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var provider, privateKey, wallet, metadata, price, options, factory, contract;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            // Deploy the contract to Polygon test network - Mumbai\n            provider = new ethers.providers.JsonRpcProvider(\"https://rpc-mumbai.maticvigil.com/\"); // Use your wallet's private key to deploy the contract\n\n            privateKey = 'YOUT_PRIVATE_KEY';\n            wallet = new ethers.Wallet(privateKey, provider); // Read the contract artifact, which was generated by Remix\n\n            metadata = JSON.parse(fs.readFileSync('contract.json').toString()); // Set gas limit and gas price, using the default Ropsten provider\n\n            _context5.t0 = ethers.utils;\n            _context5.next = 7;\n            return provider.getGasPrice();\n\n          case 7:\n            _context5.t1 = _context5.sent;\n            price = _context5.t0.formatUnits.call(_context5.t0, _context5.t1, 'gwei');\n            options = {\n              gasLimit: 100000,\n              gasPrice: ethers.utils.parseUnits(price, 'gwei')\n            }; // Deploy the contract\n\n            factory = new ethers.ContractFactory(metadata.abi, metadata.data.bytecode.object, wallet);\n            _context5.next = 13;\n            return factory.deploy(options);\n\n          case 13:\n            contract = _context5.sent;\n            _context5.next = 16;\n            return contract.deployed();\n\n          case 16:\n            console.log(\"Deployment successful! Contract Address: \".concat(contract.address));\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }))(); // You can warn the user if you would like them to be on a specific network\n\n\n  var localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  var selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  var tx = Transactor(userSigner, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  var yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  var yourMainnetBalance = useBalance(mainnetProvider, address); // const contractConfig = useContractConfig();\n\n  var contractConfig = {\n    deployedContracts: deployedContracts || {},\n    externalContracts: externalContracts || {}\n  }; // Load in your local üìù contract and read a value from it:\n\n  var readContracts = useContractLoader(localProvider, contractConfig); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  var writeContracts = useContractLoader(userSigner, contractConfig, localChainId); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  var mainnetContracts = useContractLoader(mainnetProvider, contractConfig); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, function () {\n    console.log(\"\\u26D3 A new mainnet block is here: \".concat(mainnetProvider._lastBlockNumber));\n  }); // Then read your DAI balance like:\n\n  var myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  var purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n\n  useEffect(function () {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts, localChainId, myMainnetDAIBalance]);\n  var loadWeb3Modal = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    var provider;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return web3Modal.connect();\n\n          case 2:\n            provider = _context6.sent;\n            setInjectedProvider(new ethers.providers.Web3Provider(provider));\n            provider.on(\"chainChanged\", function (chainId) {\n              console.log(\"chain changed to \".concat(chainId, \"! updating providers\"));\n              setInjectedProvider(new ethers.providers.Web3Provider(provider));\n            });\n            provider.on(\"accountsChanged\", function () {\n              console.log(\"account changed!\");\n              setInjectedProvider(new ethers.providers.Web3Provider(provider));\n            }); // Subscribe to session disconnection\n\n            provider.on(\"disconnect\", function (code, reason) {\n              console.log(code, reason);\n              logoutOfWeb3Modal();\n            }); // eslint-disable-next-line\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  })), [setInjectedProvider]);\n  useEffect(function () {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  var faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetworkDisplay, {\n      NETWORKCHECK: NETWORKCHECK,\n      localChainId: localChainId,\n      selectedChainId: selectedChainId,\n      targetNetwork: targetNetwork,\n      logoutOfWeb3Modal: logoutOfWeb3Modal,\n      USE_NETWORK_SELECTOR: USE_NETWORK_SELECTOR\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      style: {\n        textAlign: \"center\",\n        marginTop: 40\n      },\n      selectedKeys: [location.pathname],\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"App Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, \"/\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/exampleui\",\n          children: \"Lens ExampleUI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, \"/exampleui\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/debug\",\n          children: \"Debug Lens Contracts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, \"/debug\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/hints\",\n          children: \"Hints\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, \"/hints\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/subgraph\",\n          children: \"Subgraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, \"/subgraph\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          yourLocalBalance: yourLocalBalance,\n          readContracts: readContracts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/debug\",\n        children: [/*#__PURE__*/_jsxDEV(Contract, {\n          name: \"ProfileCreationProxy\",\n          price: price,\n          signer: userSigner,\n          provider: localProvider,\n          address: address,\n          blockExplorer: blockExplorer,\n          contractConfig: contractConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contract, {\n          name: \"LensHubProxy\",\n          price: price,\n          signer: userSigner,\n          provider: localProvider,\n          address: address,\n          blockExplorer: blockExplorer,\n          contractConfig: contractConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Contract, {\n          name: \"LensHubImplementation\",\n          price: price,\n          signer: userSigner,\n          provider: localProvider,\n          address: address,\n          blockExplorer: blockExplorer,\n          contractConfig: contractConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/hints\",\n        children: /*#__PURE__*/_jsxDEV(Hints, {\n          address: address,\n          yourLocalBalance: yourLocalBalance,\n          mainnetProvider: mainnetProvider,\n          price: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exampleui\",\n        children: /*#__PURE__*/_jsxDEV(ExampleUI, {\n          address: address,\n          userSigner: userSigner,\n          mainnetProvider: mainnetProvider,\n          localProvider: localProvider,\n          yourLocalBalance: yourLocalBalance,\n          price: price,\n          tx: tx,\n          writeContracts: writeContracts,\n          readContracts: readContracts,\n          purpose: purpose,\n          blockExplorer: blockExplorer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/subgraph\",\n        children: /*#__PURE__*/_jsxDEV(Subgraph, {\n          subgraphUri: props.subgraphUri,\n          tx: tx,\n          writeContracts: writeContracts,\n          mainnetProvider: mainnetProvider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\"\n        },\n        children: [USE_NETWORK_SELECTOR && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(NetworkSwitch, {\n            networkOptions: networkOptions,\n            selectedNetwork: selectedNetwork,\n            setSelectedNetwork: setSelectedNetwork\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Account, {\n          useBurner: USE_BURNER_WALLET,\n          address: address,\n          localProvider: localProvider,\n          userSigner: userSigner,\n          mainnetProvider: mainnetProvider,\n          price: price,\n          web3Modal: web3Modal,\n          loadWeb3Modal: loadWeb3Modal,\n          logoutOfWeb3Modal: logoutOfWeb3Modal,\n          blockExplorer: blockExplorer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && /*#__PURE__*/_jsxDEV(FaucetHint, {\n        localProvider: localProvider,\n        targetNetwork: targetNetwork,\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: function onClick() {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"o6OdawM1kKROvxzdZ+SD49ripDw=\", false, function () {\n  return [useLocation, useStaticJsonRPC, useStaticJsonRPC, useExchangeEthPrice, useGasPrice, useUserProviderAndSigner, useBalance, useBalance, useContractLoader, useContractLoader, useContractLoader, useOnBlock, useContractReader, useContractReader];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/App.jsx"],"names":["Button","Col","Menu","Row","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","React","useCallback","useEffect","useState","Link","Route","Switch","useLocation","Account","Contract","Faucet","GasGauge","Header","Ramp","NetworkDisplay","FaucetHint","NetworkSwitch","PricingTiers","NETWORKS","ALCHEMY_KEY","externalContracts","deployedContracts","Transactor","Web3ModalSetup","Home","ExampleUI","Hints","Subgraph","useStaticJsonRPC","require","ethers","ContractFactory","initialNetwork","localhost","DEBUG","NETWORKCHECK","USE_BURNER_WALLET","USE_NETWORK_SELECTOR","web3Modal","providers","App","props","networkOptions","name","injectedProvider","setInjectedProvider","address","setAddress","selectedNetwork","setSelectedNetwork","location","targetNetwork","blockExplorer","localProvider","process","env","REACT_APP_PROVIDER","rpcUrl","mainnetProvider","console","log","logoutOfWeb3Modal","clearCachedProvider","provider","disconnect","setTimeout","window","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","uri","cost","maxMintAmount","mintCapped","mintNFT","abi","JSON","parse","fs","readFileSync","toString","bytecode","nftContractFactory","utils","getGasPrice","formatUnits","options","gasLimit","parseUnits","deploy","contract","deployed","JsonRpcProvider","privateKey","wallet","Wallet","metadata","factory","data","object","localChainId","_network","chainId","selectedChainId","tx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","purpose","formatEther","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","faucetAvailable","connection","indexOf","textAlign","marginTop","pathname","subgraphUri","position","right","top","padding","display","flex","alignItems","marginRight","lte","BigNumber","from","left","bottom","opacity","open"],"mappings":"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","sourcesContent":["import { Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Account,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  NetworkDisplay,\n  FaucetHint,\n  NetworkSwitch,\n  PricingTiers\n} from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { Home, ExampleUI, Hints, Subgraph } from \"./views\";\nimport { useStaticJsonRPC } from \"./hooks\";\n\nconst { ethers, ContractFactory } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst initialNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_BURNER_WALLET = true; // toggle burner wallet feature\nconst USE_NETWORK_SELECTOR = true;\n\nconst web3Modal = Web3ModalSetup();\n\n// üõ∞ providers\nconst providers = [\n  \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n  `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n  \"https://rpc.scaffoldeth.io:48544\",\n];\n\nfunction App(props) {\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  const networkOptions = [\"mumbai\", initialNetwork.name];\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n  const location = useLocation();\n\n  const targetNetwork = NETWORKS[selectedNetwork];\n\n  // üî≠ block explorer URL\n  const blockExplorer = targetNetwork.blockExplorer;\n\n  // load all your providers\n  const localProvider = useStaticJsonRPC([\n    process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl,\n  ]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n\n  if (DEBUG) console.log(`Using ${selectedNetwork} network`);\n  if (DEBUG) console.log(`Blockexplorer: ${blockExplorer}`);\n\n  // üõ∞ providers\n  if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  const name = \"Example NFT\"\n  const uri = \"bafybeicqgpqwpf3kdpngkzc5modcswibvmxetwz6ttmf7cvgroipewpsbu\"\n  const cost = \"\";\n  const maxMintAmount = 0;\n  const mintCapped = false;\n\n  useEffect((userSigner) => {\n    async function mintNFT() {\n      (async () => {\n        // Read the contract artifact, which was generated by Remix\n        const abi = JSON.parse(fs.readFileSync('./contracts/data/NftShop.abi').toString())\n        const bytecode = JSON.parse(fs.readFileSync('./contracts/data/NftShop.bytecode').toString())\n\n        const nftContractFactory = new ContractFactory(abi, bytecode);\n      \n        // Set gas limit and gas price, using the default Ropsten provider\n        const price = ethers.utils.formatUnits(await localProvider.getGasPrice(), 'gwei')\n        const options = {\n          gasLimit: 100000,\n          gasPrice: ethers.utils.parseUnits(price, 'gwei'),\n        }\n        // Deploy the contract\n        const contract = await nftContractFactory.deploy(name, uri, cost, maxMintAmount, mintCapped ,options)\n        await contract.deployed()\n        console.log(`Deployment successful! Contract Address: ${contract.address}`)\n      })()\n    }\n  });\n\n  (async () => {\n  // Deploy the contract to Polygon test network - Mumbai\n  const provider = new ethers.providers.JsonRpcProvider(\"https://rpc-mumbai.maticvigil.com/\");\n\n  // Use your wallet's private key to deploy the contract\n  const privateKey = 'YOUT_PRIVATE_KEY'\n  const wallet = new ethers.Wallet(privateKey, provider)\n\n  // Read the contract artifact, which was generated by Remix\n  const metadata = JSON.parse(fs.readFileSync('contract.json').toString())\n\n  // Set gas limit and gas price, using the default Ropsten provider\n  const price = ethers.utils.formatUnits(await provider.getGasPrice(), 'gwei')\n  const options = {gasLimit: 100000, gasPrice: ethers.utils.parseUnits(price, 'gwei')}\n\n  // Deploy the contract\n  const factory = new ethers.ContractFactory(metadata.abi, metadata.data.bytecode.object, wallet)\n  const contract = await factory.deploy(options)\n  await contract.deployed()\n  console.log(`Deployment successful! Contract Address: ${contract.address}`)\n})()\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n    localChainId,\n    myMainnetDAIBalance,\n  ]);\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n    // eslint-disable-next-line\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      <NetworkDisplay\n        NETWORKCHECK={NETWORKCHECK}\n        localChainId={localChainId}\n        selectedChainId={selectedChainId}\n        targetNetwork={targetNetwork}\n        logoutOfWeb3Modal={logoutOfWeb3Modal}\n        USE_NETWORK_SELECTOR={USE_NETWORK_SELECTOR}\n      />\n      <Menu style={{ textAlign: \"center\", marginTop: 40 }} selectedKeys={[location.pathname]} mode=\"horizontal\">\n        <Menu.Item key=\"/\">\n          <Link to=\"/\">App Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/exampleui\">\n          <Link to=\"/exampleui\">Lens ExampleUI</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/debug\">\n          <Link to=\"/debug\">Debug Lens Contracts</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/hints\">\n          <Link to=\"/hints\">Hints</Link>\n        {/*</Menu.Item>\n        <Menu.Item key=\"/mainnetdai\">\n          <Link to=\"/mainnetdai\">Mainnet DAI</Link>*/}\n        </Menu.Item>\n        <Menu.Item key=\"/subgraph\">\n          <Link to=\"/subgraph\">Subgraph</Link>\n        </Menu.Item>\n      </Menu>\n\n      <Switch>\n        <Route exact path=\"/\">\n          {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n          <Home yourLocalBalance={yourLocalBalance} readContracts={readContracts} />\n        </Route>\n        <Route exact path=\"/debug\">\n          {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n          {/*<Contract\n            name=\"YourContract\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />*/}\n\n          <Contract\n            name=\"ProfileCreationProxy\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n          <Contract\n            name=\"LensHubProxy\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n          <Contract\n            name=\"LensHubImplementation\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n\n        </Route>\n        <Route path=\"/test\">\n        </Route>\n        <Route path=\"/hints\">\n          <Hints\n            address={address}\n            yourLocalBalance={yourLocalBalance}\n            mainnetProvider={mainnetProvider}\n            price={price}\n          />\n        </Route>\n        <Route path=\"/exampleui\">\n          <ExampleUI\n            address={address}\n            userSigner={userSigner}\n            mainnetProvider={mainnetProvider}\n            localProvider={localProvider}\n            yourLocalBalance={yourLocalBalance}\n            price={price}\n            tx={tx}\n            writeContracts={writeContracts}\n            readContracts={readContracts}\n            purpose={purpose}\n            blockExplorer={blockExplorer}\n          />\n        </Route>\n{/*        <Route path=\"/mainnetdai\">\n          <Contract\n            name=\"DAI\"\n            customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.DAI}\n            signer={userSigner}\n            provider={mainnetProvider}\n            address={address}\n            blockExplorer=\"https://etherscan.io/\"\n            contractConfig={contractConfig}\n            chainId={1}\n          />\n        </Route>*/}\n\n        <Route path=\"/subgraph\">\n          <Subgraph\n            subgraphUri={props.subgraphUri}\n            tx={tx}\n            writeContracts={writeContracts}\n            mainnetProvider={mainnetProvider}\n          />\n        </Route>\n      </Switch>\n\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <div style={{ display: \"flex\", flex: 1, alignItems: \"center\" }}>\n          {USE_NETWORK_SELECTOR && (\n            <div style={{ marginRight: 20 }}>\n              <NetworkSwitch\n                networkOptions={networkOptions}\n                selectedNetwork={selectedNetwork}\n                setSelectedNetwork={setSelectedNetwork}\n              />\n            </div>\n          )}\n          <Account\n            useBurner={USE_BURNER_WALLET}\n            address={address}\n            localProvider={localProvider}\n            userSigner={userSigner}\n            mainnetProvider={mainnetProvider}\n            price={price}\n            web3Modal={web3Modal}\n            loadWeb3Modal={loadWeb3Modal}\n            logoutOfWeb3Modal={logoutOfWeb3Modal}\n            blockExplorer={blockExplorer}\n          />\n        </div>\n        {yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && (\n          <FaucetHint localProvider={localProvider} targetNetwork={targetNetwork} address={address} />\n        )}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}