{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as env from \"@walletconnect/environment\";\nimport { ENCRYPT_OP, DECRYPT_OP, SIGN_OP, VERIFY_OP, AES_BROWSER_ALGO, AES_LENGTH, HMAC_BROWSER_ALGO, HMAC_BROWSER, HMAC_LENGTH, SHA256_BROWSER_ALGO, SHA512_BROWSER_ALGO, LENGTH_512 } from \"../constants\";\nexport function getAlgo(type) {\n  return type === AES_BROWSER_ALGO ? {\n    length: AES_LENGTH,\n    name: AES_BROWSER_ALGO\n  } : {\n    hash: {\n      name: HMAC_BROWSER_ALGO\n    },\n    name: HMAC_BROWSER\n  };\n}\nexport function getOps(type) {\n  return type === AES_BROWSER_ALGO ? [ENCRYPT_OP, DECRYPT_OP] : [SIGN_OP, VERIFY_OP];\n}\nexport function browserExportKey(_x) {\n  return _browserExportKey.apply(this, arguments);\n}\n\nfunction _browserExportKey() {\n  _browserExportKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cryptoKey) {\n    var type,\n        subtle,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            type = _args.length > 1 && _args[1] !== undefined ? _args[1] : AES_BROWSER_ALGO;\n            subtle = env.getSubtleCrypto();\n            _context.t0 = Uint8Array;\n            _context.next = 5;\n            return subtle.exportKey(\"raw\", cryptoKey);\n\n          case 5:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t0(_context.t1));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _browserExportKey.apply(this, arguments);\n}\n\nexport function browserImportKey(_x2) {\n  return _browserImportKey.apply(this, arguments);\n}\n\nfunction _browserImportKey() {\n  _browserImportKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(buffer) {\n    var type,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            type = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : AES_BROWSER_ALGO;\n            return _context2.abrupt(\"return\", env.getSubtleCrypto().importKey(\"raw\", buffer, getAlgo(type), true, getOps(type)));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _browserImportKey.apply(this, arguments);\n}\n\nexport function browserAesEncrypt(_x3, _x4, _x5) {\n  return _browserAesEncrypt.apply(this, arguments);\n}\n\nfunction _browserAesEncrypt() {\n  _browserAesEncrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(iv, key, data) {\n    var subtle, cryptoKey, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context3.next = 3;\n            return browserImportKey(key, AES_BROWSER_ALGO);\n\n          case 3:\n            cryptoKey = _context3.sent;\n            _context3.next = 6;\n            return subtle.encrypt({\n              iv: iv,\n              name: AES_BROWSER_ALGO\n            }, cryptoKey, data);\n\n          case 6:\n            result = _context3.sent;\n            return _context3.abrupt(\"return\", new Uint8Array(result));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _browserAesEncrypt.apply(this, arguments);\n}\n\nexport function browserAesDecrypt(_x6, _x7, _x8) {\n  return _browserAesDecrypt.apply(this, arguments);\n}\n\nfunction _browserAesDecrypt() {\n  _browserAesDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(iv, key, data) {\n    var subtle, cryptoKey, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context4.next = 3;\n            return browserImportKey(key, AES_BROWSER_ALGO);\n\n          case 3:\n            cryptoKey = _context4.sent;\n            _context4.next = 6;\n            return subtle.decrypt({\n              iv: iv,\n              name: AES_BROWSER_ALGO\n            }, cryptoKey, data);\n\n          case 6:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", new Uint8Array(result));\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _browserAesDecrypt.apply(this, arguments);\n}\n\nexport function browserHmacSha256Sign(_x9, _x10) {\n  return _browserHmacSha256Sign.apply(this, arguments);\n}\n\nfunction _browserHmacSha256Sign() {\n  _browserHmacSha256Sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key, data) {\n    var subtle, cryptoKey, signature;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context5.next = 3;\n            return browserImportKey(key, HMAC_BROWSER);\n\n          case 3:\n            cryptoKey = _context5.sent;\n            _context5.next = 6;\n            return subtle.sign({\n              length: HMAC_LENGTH,\n              name: HMAC_BROWSER\n            }, cryptoKey, data);\n\n          case 6:\n            signature = _context5.sent;\n            return _context5.abrupt(\"return\", new Uint8Array(signature));\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _browserHmacSha256Sign.apply(this, arguments);\n}\n\nexport function browserHmacSha512Sign(_x11, _x12) {\n  return _browserHmacSha512Sign.apply(this, arguments);\n}\n\nfunction _browserHmacSha512Sign() {\n  _browserHmacSha512Sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(key, data) {\n    var subtle, cryptoKey, signature;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context6.next = 3;\n            return browserImportKey(key, HMAC_BROWSER);\n\n          case 3:\n            cryptoKey = _context6.sent;\n            _context6.next = 6;\n            return subtle.sign({\n              length: LENGTH_512,\n              name: HMAC_BROWSER\n            }, cryptoKey, data);\n\n          case 6:\n            signature = _context6.sent;\n            return _context6.abrupt(\"return\", new Uint8Array(signature));\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _browserHmacSha512Sign.apply(this, arguments);\n}\n\nexport function browserSha256(_x13) {\n  return _browserSha.apply(this, arguments);\n}\n\nfunction _browserSha() {\n  _browserSha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n    var subtle, result;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context7.next = 3;\n            return subtle.digest({\n              name: SHA256_BROWSER_ALGO\n            }, data);\n\n          case 3:\n            result = _context7.sent;\n            return _context7.abrupt(\"return\", new Uint8Array(result));\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _browserSha.apply(this, arguments);\n}\n\nexport function browserSha512(_x14) {\n  return _browserSha2.apply(this, arguments);\n}\n\nfunction _browserSha2() {\n  _browserSha2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(data) {\n    var subtle, result;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context8.next = 3;\n            return subtle.digest({\n              name: SHA512_BROWSER_ALGO\n            }, data);\n\n          case 3:\n            result = _context8.sent;\n            return _context8.abrupt(\"return\", new Uint8Array(result));\n\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _browserSha2.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../src/lib/browser.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as env from \"@walletconnect/environment\";\nimport { ENCRYPT_OP, DECRYPT_OP, SIGN_OP, VERIFY_OP, AES_BROWSER_ALGO, AES_LENGTH, HMAC_BROWSER_ALGO, HMAC_BROWSER, HMAC_LENGTH, SHA256_BROWSER_ALGO, SHA512_BROWSER_ALGO, LENGTH_512, } from \"../constants\";\nexport function getAlgo(type) {\n    return type === AES_BROWSER_ALGO\n        ? { length: AES_LENGTH, name: AES_BROWSER_ALGO }\n        : {\n            hash: { name: HMAC_BROWSER_ALGO },\n            name: HMAC_BROWSER,\n        };\n}\nexport function getOps(type) {\n    return type === AES_BROWSER_ALGO\n        ? [ENCRYPT_OP, DECRYPT_OP]\n        : [SIGN_OP, VERIFY_OP];\n}\nexport async function browserExportKey(cryptoKey, type = AES_BROWSER_ALGO) {\n    const subtle = env.getSubtleCrypto();\n    return new Uint8Array(await subtle.exportKey(\"raw\", cryptoKey));\n}\nexport async function browserImportKey(buffer, type = AES_BROWSER_ALGO) {\n    return env.getSubtleCrypto().importKey(\"raw\", buffer, getAlgo(type), true, getOps(type));\n}\nexport async function browserAesEncrypt(iv, key, data) {\n    const subtle = env.getSubtleCrypto();\n    const cryptoKey = await browserImportKey(key, AES_BROWSER_ALGO);\n    const result = await subtle.encrypt({\n        iv,\n        name: AES_BROWSER_ALGO,\n    }, cryptoKey, data);\n    return new Uint8Array(result);\n}\nexport async function browserAesDecrypt(iv, key, data) {\n    const subtle = env.getSubtleCrypto();\n    const cryptoKey = await browserImportKey(key, AES_BROWSER_ALGO);\n    const result = await subtle.decrypt({\n        iv,\n        name: AES_BROWSER_ALGO,\n    }, cryptoKey, data);\n    return new Uint8Array(result);\n}\nexport async function browserHmacSha256Sign(key, data) {\n    const subtle = env.getSubtleCrypto();\n    const cryptoKey = await browserImportKey(key, HMAC_BROWSER);\n    const signature = await subtle.sign({\n        length: HMAC_LENGTH,\n        name: HMAC_BROWSER,\n    }, cryptoKey, data);\n    return new Uint8Array(signature);\n}\nexport async function browserHmacSha512Sign(key, data) {\n    const subtle = env.getSubtleCrypto();\n    const cryptoKey = await browserImportKey(key, HMAC_BROWSER);\n    const signature = await subtle.sign({\n        length: LENGTH_512,\n        name: HMAC_BROWSER,\n    }, cryptoKey, data);\n    return new Uint8Array(signature);\n}\nexport async function browserSha256(data) {\n    const subtle = env.getSubtleCrypto();\n    const result = await subtle.digest({\n        name: SHA256_BROWSER_ALGO,\n    }, data);\n    return new Uint8Array(result);\n}\nexport async function browserSha512(data) {\n    const subtle = env.getSubtleCrypto();\n    const result = await subtle.digest({\n        name: SHA512_BROWSER_ALGO,\n    }, data);\n    return new Uint8Array(result);\n}\n//# sourceMappingURL=browser.js.map"]},"metadata":{},"sourceType":"module"}