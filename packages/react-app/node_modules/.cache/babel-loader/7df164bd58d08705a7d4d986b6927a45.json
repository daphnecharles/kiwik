{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar token = require('./token.js');\n\nvar _0uint = require('./0uint.js');\n\nvar common = require('./common.js');\n\nfunction decodeNegint8(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint8(data, pos + 1, options), 2);\n}\n\nfunction decodeNegint16(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint16(data, pos + 1, options), 3);\n}\n\nfunction decodeNegint32(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint32(data, pos + 1, options), 5);\n}\n\nvar neg1b = BigInt(-1);\nvar pos1b = BigInt(1);\n\nfunction decodeNegint64(data, pos, _minor, options) {\n  var int = _0uint.readUint64(data, pos + 1, options);\n\n  if (typeof int !== 'bigint') {\n    var value = -1 - int;\n\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new token.Token(token.Type.negint, value, 9);\n    }\n  }\n\n  if (options.allowBigInt !== true) {\n    throw new Error(\"\".concat(common.decodeErrPrefix, \" integers outside of the safe integer range are not supported\"));\n  }\n\n  return new token.Token(token.Type.negint, neg1b - BigInt(int), 9);\n}\n\nfunction encodeNegint(buf, token) {\n  var negint = token.value;\n  var unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n\n  _0uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\n\nencodeNegint.encodedSize = function encodedSize(token) {\n  var negint = token.value;\n  var unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n\n  if (unsigned < _0uint.uintBoundaries[0]) {\n    return 1;\n  }\n\n  if (unsigned < _0uint.uintBoundaries[1]) {\n    return 2;\n  }\n\n  if (unsigned < _0uint.uintBoundaries[2]) {\n    return 3;\n  }\n\n  if (unsigned < _0uint.uintBoundaries[3]) {\n    return 5;\n  }\n\n  return 9;\n};\n\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};\n\nexports.decodeNegint16 = decodeNegint16;\nexports.decodeNegint32 = decodeNegint32;\nexports.decodeNegint64 = decodeNegint64;\nexports.decodeNegint8 = decodeNegint8;\nexports.encodeNegint = encodeNegint;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/cborg/cjs/lib/1negint.js"],"names":["Object","defineProperty","exports","value","token","require","_0uint","common","decodeNegint8","data","pos","_minor","options","Token","Type","negint","readUint8","decodeNegint16","readUint16","decodeNegint32","readUint32","neg1b","BigInt","pos1b","decodeNegint64","int","readUint64","Number","MIN_SAFE_INTEGER","allowBigInt","Error","decodeErrPrefix","encodeNegint","buf","unsigned","encodeUintValue","type","majorEncoded","encodedSize","uintBoundaries","compareTokens","tok1","tok2"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar token = require('./token.js');\nvar _0uint = require('./0uint.js');\nvar common = require('./common.js');\n\nfunction decodeNegint8(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint8(data, pos + 1, options), 2);\n}\nfunction decodeNegint16(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint16(data, pos + 1, options), 3);\n}\nfunction decodeNegint32(data, pos, _minor, options) {\n  return new token.Token(token.Type.negint, -1 - _0uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nfunction decodeNegint64(data, pos, _minor, options) {\n  const int = _0uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new token.Token(token.Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ common.decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new token.Token(token.Type.negint, neg1b - BigInt(int), 9);\n}\nfunction encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  _0uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < _0uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < _0uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < _0uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < _0uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};\n\nexports.decodeNegint16 = decodeNegint16;\nexports.decodeNegint32 = decodeNegint32;\nexports.decodeNegint64 = decodeNegint64;\nexports.decodeNegint8 = decodeNegint8;\nexports.encodeNegint = encodeNegint;\n"]},"metadata":{},"sourceType":"script"}