{"ast":null,"code":"'use strict';\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i,\n      ch,\n      cache = decodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n} // Decode percent-encoded string.\n//\n\n\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    var i,\n        l,\n        b1,\n        b2,\n        b3,\n        b4,\n        chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && i + 3 < l) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = b1 << 6 & 0x7C0 | b2 & 0x3F;\n\n          if (chr < 0x80) {\n            result += \"\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && i + 6 < l) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = b1 << 12 & 0xF000 | b2 << 6 & 0xFC0 | b3 & 0x3F;\n\n          if (chr < 0x800 || chr >= 0xD800 && chr <= 0xDFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && i + 9 < l) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = b1 << 18 & 0x1C0000 | b2 << 12 & 0x3F000 | b3 << 6 & 0xFC0 | b4 & 0x3F;\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += \"\\uFFFD\";\n    }\n\n    return result;\n  });\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\nmodule.exports = decode;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/mdurl/decode.js"],"names":["decodeCache","getDecodeCache","exclude","i","ch","cache","String","fromCharCode","push","length","charCodeAt","toString","toUpperCase","slice","decode","string","defaultChars","replace","seq","l","b1","b2","b3","b4","chr","result","parseInt","componentChars","module","exports"],"mappings":"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","sourcesContent":["\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n"]},"metadata":{},"sourceType":"script"}