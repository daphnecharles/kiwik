{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar token = require('./token.js');\n\nvar _0uint = require('./0uint.js');\n\nvar common = require('./common.js');\n\nfunction toToken(_data, _pos, prefix, length) {\n  return new token.Token(token.Type.map, length, prefix);\n}\n\nfunction decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\n\nfunction decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint.readUint8(data, pos + 1, options));\n}\n\nfunction decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint.readUint16(data, pos + 1, options));\n}\n\nfunction decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint.readUint32(data, pos + 1, options));\n}\n\nfunction decodeMap64(data, pos, _minor, options) {\n  var l = _0uint.readUint64(data, pos + 1, options);\n\n  if (typeof l === 'bigint') {\n    throw new Error(\"\".concat(common.decodeErrPrefix, \" 64-bit integer map lengths not supported\"));\n  }\n\n  return toToken(data, pos, 9, l);\n}\n\nfunction decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(\"\".concat(common.decodeErrPrefix, \" indefinite length items not allowed\"));\n  }\n\n  return toToken(data, pos, 1, Infinity);\n}\n\nfunction encodeMap(buf, token$1) {\n  _0uint.encodeUintValue(buf, token.Type.map.majorEncoded, token$1.value);\n}\n\nencodeMap.compareTokens = _0uint.encodeUint.compareTokens;\nexports.decodeMap16 = decodeMap16;\nexports.decodeMap32 = decodeMap32;\nexports.decodeMap64 = decodeMap64;\nexports.decodeMap8 = decodeMap8;\nexports.decodeMapCompact = decodeMapCompact;\nexports.decodeMapIndefinite = decodeMapIndefinite;\nexports.encodeMap = encodeMap;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/cborg/cjs/lib/5map.js"],"names":["Object","defineProperty","exports","value","token","require","_0uint","common","toToken","_data","_pos","prefix","length","Token","Type","map","decodeMapCompact","data","pos","minor","_options","decodeMap8","_minor","options","readUint8","decodeMap16","readUint16","decodeMap32","readUint32","decodeMap64","l","readUint64","Error","decodeErrPrefix","decodeMapIndefinite","allowIndefinite","Infinity","encodeMap","buf","token$1","encodeUintValue","majorEncoded","compareTokens","encodeUint"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar token = require('./token.js');\nvar _0uint = require('./0uint.js');\nvar common = require('./common.js');\n\nfunction toToken(_data, _pos, prefix, length) {\n  return new token.Token(token.Type.map, length, prefix);\n}\nfunction decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nfunction decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint.readUint8(data, pos + 1, options));\n}\nfunction decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint.readUint16(data, pos + 1, options));\n}\nfunction decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint.readUint32(data, pos + 1, options));\n}\nfunction decodeMap64(data, pos, _minor, options) {\n  const l = _0uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ common.decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ common.decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nfunction encodeMap(buf, token$1) {\n  _0uint.encodeUintValue(buf, token.Type.map.majorEncoded, token$1.value);\n}\nencodeMap.compareTokens = _0uint.encodeUint.compareTokens;\n\nexports.decodeMap16 = decodeMap16;\nexports.decodeMap32 = decodeMap32;\nexports.decodeMap64 = decodeMap64;\nexports.decodeMap8 = decodeMap8;\nexports.decodeMapCompact = decodeMapCompact;\nexports.decodeMapIndefinite = decodeMapIndefinite;\nexports.encodeMap = encodeMap;\n"]},"metadata":{},"sourceType":"script"}