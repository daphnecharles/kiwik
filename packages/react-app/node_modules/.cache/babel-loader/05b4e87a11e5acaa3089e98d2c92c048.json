{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction jsonParse(str) {\n  string = str;\n  strLen = str.length;\n  start = end = lastEnd = -1;\n  ch();\n  lex();\n  var ast = parseObj();\n  expect('EOF');\n  return ast;\n}\n\nexports.default = jsonParse;\nvar string;\nvar strLen;\nvar start;\nvar end;\nvar lastEnd;\nvar code;\nvar kind;\n\nfunction parseObj() {\n  var nodeStart = start;\n  var members = [];\n  expect('{');\n\n  if (!skip('}')) {\n    do {\n      members.push(parseMember());\n    } while (skip(','));\n\n    expect('}');\n  }\n\n  return {\n    kind: 'Object',\n    start: nodeStart,\n    end: lastEnd,\n    members: members\n  };\n}\n\nfunction parseMember() {\n  var nodeStart = start;\n  var key = kind === 'String' ? curToken() : null;\n  expect('String');\n  expect(':');\n  var value = parseVal();\n  return {\n    kind: 'Member',\n    start: nodeStart,\n    end: lastEnd,\n    key: key,\n    value: value\n  };\n}\n\nfunction parseArr() {\n  var nodeStart = start;\n  var values = [];\n  expect('[');\n\n  if (!skip(']')) {\n    do {\n      values.push(parseVal());\n    } while (skip(','));\n\n    expect(']');\n  }\n\n  return {\n    kind: 'Array',\n    start: nodeStart,\n    end: lastEnd,\n    values: values\n  };\n}\n\nfunction parseVal() {\n  switch (kind) {\n    case '[':\n      return parseArr();\n\n    case '{':\n      return parseObj();\n\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Null':\n      var token = curToken();\n      lex();\n      return token;\n  }\n\n  expect('Value');\n}\n\nfunction curToken() {\n  return {\n    kind: kind,\n    start: start,\n    end: end,\n    value: JSON.parse(string.slice(start, end))\n  };\n}\n\nfunction expect(str) {\n  if (kind === str) {\n    lex();\n    return;\n  }\n\n  var found;\n\n  if (kind === 'EOF') {\n    found = '[end of file]';\n  } else if (end - start > 1) {\n    found = '`' + string.slice(start, end) + '`';\n  } else {\n    var match = string.slice(start).match(/^.+?\\b/);\n    found = '`' + (match ? match[0] : string[start]) + '`';\n  }\n\n  throw syntaxError(\"Expected \" + str + \" but found \" + found + \".\");\n}\n\nfunction syntaxError(message) {\n  return {\n    message: message,\n    start: start,\n    end: end\n  };\n}\n\nfunction skip(k) {\n  if (kind === k) {\n    lex();\n    return true;\n  }\n}\n\nfunction ch() {\n  if (end < strLen) {\n    end++;\n    code = end === strLen ? 0 : string.charCodeAt(end);\n  }\n\n  return code;\n}\n\nfunction lex() {\n  lastEnd = end;\n\n  while (code === 9 || code === 10 || code === 13 || code === 32) {\n    ch();\n  }\n\n  if (code === 0) {\n    kind = 'EOF';\n    return;\n  }\n\n  start = end;\n\n  switch (code) {\n    case 34:\n      kind = 'String';\n      return readString();\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      kind = 'Number';\n      return readNumber();\n\n    case 102:\n      if (string.slice(start, start + 5) !== 'false') {\n        break;\n      }\n\n      end += 4;\n      ch();\n      kind = 'Boolean';\n      return;\n\n    case 110:\n      if (string.slice(start, start + 4) !== 'null') {\n        break;\n      }\n\n      end += 3;\n      ch();\n      kind = 'Null';\n      return;\n\n    case 116:\n      if (string.slice(start, start + 4) !== 'true') {\n        break;\n      }\n\n      end += 3;\n      ch();\n      kind = 'Boolean';\n      return;\n  }\n\n  kind = string[start];\n  ch();\n}\n\nfunction readString() {\n  ch();\n\n  while (code !== 34 && code > 31) {\n    if (code === 92) {\n      code = ch();\n\n      switch (code) {\n        case 34:\n        case 47:\n        case 92:\n        case 98:\n        case 102:\n        case 110:\n        case 114:\n        case 116:\n          ch();\n          break;\n\n        case 117:\n          ch();\n          readHex();\n          readHex();\n          readHex();\n          readHex();\n          break;\n\n        default:\n          throw syntaxError('Bad character escape sequence.');\n      }\n    } else if (end === strLen) {\n      throw syntaxError('Unterminated string.');\n    } else {\n      ch();\n    }\n  }\n\n  if (code === 34) {\n    ch();\n    return;\n  }\n\n  throw syntaxError('Unterminated string.');\n}\n\nfunction readHex() {\n  if (code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102) {\n    return ch();\n  }\n\n  throw syntaxError('Expected hexadecimal digit.');\n}\n\nfunction readNumber() {\n  if (code === 45) {\n    ch();\n  }\n\n  if (code === 48) {\n    ch();\n  } else {\n    readDigits();\n  }\n\n  if (code === 46) {\n    ch();\n    readDigits();\n  }\n\n  if (code === 69 || code === 101) {\n    code = ch();\n\n    if (code === 43 || code === 45) {\n      ch();\n    }\n\n    readDigits();\n  }\n}\n\nfunction readDigits() {\n  if (code < 48 || code > 57) {\n    throw syntaxError('Expected decimal digit.');\n  }\n\n  do {\n    ch();\n  } while (code >= 48 && code <= 57);\n}","map":{"version":3,"sources":["../src/utils/jsonParse.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction jsonParse(str) {\n    string = str;\n    strLen = str.length;\n    start = end = lastEnd = -1;\n    ch();\n    lex();\n    var ast = parseObj();\n    expect('EOF');\n    return ast;\n}\nexports.default = jsonParse;\nvar string;\nvar strLen;\nvar start;\nvar end;\nvar lastEnd;\nvar code;\nvar kind;\nfunction parseObj() {\n    var nodeStart = start;\n    var members = [];\n    expect('{');\n    if (!skip('}')) {\n        do {\n            members.push(parseMember());\n        } while (skip(','));\n        expect('}');\n    }\n    return {\n        kind: 'Object',\n        start: nodeStart,\n        end: lastEnd,\n        members: members,\n    };\n}\nfunction parseMember() {\n    var nodeStart = start;\n    var key = kind === 'String' ? curToken() : null;\n    expect('String');\n    expect(':');\n    var value = parseVal();\n    return {\n        kind: 'Member',\n        start: nodeStart,\n        end: lastEnd,\n        key: key,\n        value: value,\n    };\n}\nfunction parseArr() {\n    var nodeStart = start;\n    var values = [];\n    expect('[');\n    if (!skip(']')) {\n        do {\n            values.push(parseVal());\n        } while (skip(','));\n        expect(']');\n    }\n    return {\n        kind: 'Array',\n        start: nodeStart,\n        end: lastEnd,\n        values: values,\n    };\n}\nfunction parseVal() {\n    switch (kind) {\n        case '[':\n            return parseArr();\n        case '{':\n            return parseObj();\n        case 'String':\n        case 'Number':\n        case 'Boolean':\n        case 'Null':\n            var token = curToken();\n            lex();\n            return token;\n    }\n    expect('Value');\n}\nfunction curToken() {\n    return { kind: kind, start: start, end: end, value: JSON.parse(string.slice(start, end)) };\n}\nfunction expect(str) {\n    if (kind === str) {\n        lex();\n        return;\n    }\n    var found;\n    if (kind === 'EOF') {\n        found = '[end of file]';\n    }\n    else if (end - start > 1) {\n        found = '`' + string.slice(start, end) + '`';\n    }\n    else {\n        var match = string.slice(start).match(/^.+?\\b/);\n        found = '`' + (match ? match[0] : string[start]) + '`';\n    }\n    throw syntaxError(\"Expected \" + str + \" but found \" + found + \".\");\n}\nfunction syntaxError(message) {\n    return { message: message, start: start, end: end };\n}\nfunction skip(k) {\n    if (kind === k) {\n        lex();\n        return true;\n    }\n}\nfunction ch() {\n    if (end < strLen) {\n        end++;\n        code = end === strLen ? 0 : string.charCodeAt(end);\n    }\n    return code;\n}\nfunction lex() {\n    lastEnd = end;\n    while (code === 9 || code === 10 || code === 13 || code === 32) {\n        ch();\n    }\n    if (code === 0) {\n        kind = 'EOF';\n        return;\n    }\n    start = end;\n    switch (code) {\n        case 34:\n            kind = 'String';\n            return readString();\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            kind = 'Number';\n            return readNumber();\n        case 102:\n            if (string.slice(start, start + 5) !== 'false') {\n                break;\n            }\n            end += 4;\n            ch();\n            kind = 'Boolean';\n            return;\n        case 110:\n            if (string.slice(start, start + 4) !== 'null') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Null';\n            return;\n        case 116:\n            if (string.slice(start, start + 4) !== 'true') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Boolean';\n            return;\n    }\n    kind = string[start];\n    ch();\n}\nfunction readString() {\n    ch();\n    while (code !== 34 && code > 31) {\n        if (code === 92) {\n            code = ch();\n            switch (code) {\n                case 34:\n                case 47:\n                case 92:\n                case 98:\n                case 102:\n                case 110:\n                case 114:\n                case 116:\n                    ch();\n                    break;\n                case 117:\n                    ch();\n                    readHex();\n                    readHex();\n                    readHex();\n                    readHex();\n                    break;\n                default:\n                    throw syntaxError('Bad character escape sequence.');\n            }\n        }\n        else if (end === strLen) {\n            throw syntaxError('Unterminated string.');\n        }\n        else {\n            ch();\n        }\n    }\n    if (code === 34) {\n        ch();\n        return;\n    }\n    throw syntaxError('Unterminated string.');\n}\nfunction readHex() {\n    if ((code >= 48 && code <= 57) ||\n        (code >= 65 && code <= 70) ||\n        (code >= 97 && code <= 102)) {\n        return ch();\n    }\n    throw syntaxError('Expected hexadecimal digit.');\n}\nfunction readNumber() {\n    if (code === 45) {\n        ch();\n    }\n    if (code === 48) {\n        ch();\n    }\n    else {\n        readDigits();\n    }\n    if (code === 46) {\n        ch();\n        readDigits();\n    }\n    if (code === 69 || code === 101) {\n        code = ch();\n        if (code === 43 || code === 45) {\n            ch();\n        }\n        readDigits();\n    }\n}\nfunction readDigits() {\n    if (code < 48 || code > 57) {\n        throw syntaxError('Expected decimal digit.');\n    }\n    do {\n        ch();\n    } while (code >= 48 && code <= 57);\n}\n//# sourceMappingURL=jsonParse.js.map"]},"metadata":{},"sourceType":"script"}