{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar token = require('./token.js');\n\nvar common = require('./common.js');\n\nvar _0uint = require('./0uint.js');\n\nvar _2bytes = require('./2bytes.js');\n\nvar byteUtils = require('./byte-utils.js');\n\nfunction toToken(data, pos, prefix, length) {\n  var totLength = prefix + length;\n  common.assertEnoughData(data, pos, totLength);\n  return new token.Token(token.Type.string, byteUtils.toString(data, pos + prefix, pos + totLength), totLength);\n}\n\nfunction decodeStringCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\n\nfunction decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint.readUint8(data, pos + 1, options));\n}\n\nfunction decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint.readUint16(data, pos + 1, options));\n}\n\nfunction decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint.readUint32(data, pos + 1, options));\n}\n\nfunction decodeString64(data, pos, _minor, options) {\n  var l = _0uint.readUint64(data, pos + 1, options);\n\n  if (typeof l === 'bigint') {\n    throw new Error(\"\".concat(common.decodeErrPrefix, \" 64-bit integer string lengths not supported\"));\n  }\n\n  return toToken(data, pos, 9, l);\n}\n\nvar encodeString = _2bytes.encodeBytes;\nexports.decodeString16 = decodeString16;\nexports.decodeString32 = decodeString32;\nexports.decodeString64 = decodeString64;\nexports.decodeString8 = decodeString8;\nexports.decodeStringCompact = decodeStringCompact;\nexports.encodeString = encodeString;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/cborg/cjs/lib/3string.js"],"names":["Object","defineProperty","exports","value","token","require","common","_0uint","_2bytes","byteUtils","toToken","data","pos","prefix","length","totLength","assertEnoughData","Token","Type","string","toString","decodeStringCompact","minor","_options","decodeString8","_minor","options","readUint8","decodeString16","readUint16","decodeString32","readUint32","decodeString64","l","readUint64","Error","decodeErrPrefix","encodeString","encodeBytes"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar token = require('./token.js');\nvar common = require('./common.js');\nvar _0uint = require('./0uint.js');\nvar _2bytes = require('./2bytes.js');\nvar byteUtils = require('./byte-utils.js');\n\nfunction toToken(data, pos, prefix, length) {\n  const totLength = prefix + length;\n  common.assertEnoughData(data, pos, totLength);\n  return new token.Token(token.Type.string, byteUtils.toString(data, pos + prefix, pos + totLength), totLength);\n}\nfunction decodeStringCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nfunction decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint.readUint8(data, pos + 1, options));\n}\nfunction decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint.readUint16(data, pos + 1, options));\n}\nfunction decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint.readUint32(data, pos + 1, options));\n}\nfunction decodeString64(data, pos, _minor, options) {\n  const l = _0uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ common.decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nconst encodeString = _2bytes.encodeBytes;\n\nexports.decodeString16 = decodeString16;\nexports.decodeString32 = decodeString32;\nexports.decodeString64 = decodeString64;\nexports.decodeString8 = decodeString8;\nexports.decodeStringCompact = decodeStringCompact;\nexports.encodeString = encodeString;\n"]},"metadata":{},"sourceType":"script"}