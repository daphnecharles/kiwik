{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar httpRpcWireFormat = require('../lib/http-rpc-wire-format.js');\n\nvar createPeers = configure.configure(function (api) {\n  function peers(_x) {\n    return _peers.apply(this, arguments);\n  }\n\n  function _peers() {\n    _peers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(topic) {\n      var options,\n          res,\n          _yield$res$json,\n          Strings,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('pubsub/peers', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: httpRpcWireFormat.textToUrlSafeRpc(topic)\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              Strings = _yield$res$json.Strings;\n              return _context.abrupt(\"return\", Strings || []);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _peers.apply(this, arguments);\n  }\n\n  return peers;\n});\nexports.createPeers = createPeers;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/pubsub/peers.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","httpRpcWireFormat","createPeers","api","peers","topic","options","post","signal","searchParams","arg","textToUrlSafeRpc","headers","res","json","Strings"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAA/B;;AAEA,IAAMG,WAAW,GAAGJ,SAAS,CAACA,SAAV,CAAoB,UAAAK,GAAG,EAAI;AAAA,WAC9BC,KAD8B;AAAA;AAAA;;AAAA;AAAA,sEAC7C,iBAAqBC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA4BC,cAAAA,OAA5B,2DAAsC,EAAtC;AAAA;AAAA,qBACoBH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;AACzCC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MADyB;AAEzCC,gBAAAA,YAAY,EAAET,iBAAiB,CAACA,iBAAlB;AACZU,kBAAAA,GAAG,EAAET,iBAAiB,CAACU,gBAAlB,CAAmCN,KAAnC;AADO,mBAETC,OAFS,EAF2B;AAMzCM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AANwB,eAAzB,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA,qBAS0BA,GAAG,CAACC,IAAJ,EAT1B;;AAAA;AAAA;AASSC,cAAAA,OATT,mBASSA,OATT;AAAA,+CAUSA,OAAO,IAAI,EAVpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD6C;AAAA;AAAA;;AAa7C,SAAOX,KAAP;AACD,CAdmB,CAApB;AAgBAR,OAAO,CAACM,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar httpRpcWireFormat = require('../lib/http-rpc-wire-format.js');\n\nconst createPeers = configure.configure(api => {\n  async function peers(topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: httpRpcWireFormat.textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return peers;\n});\n\nexports.createPeers = createPeers;\n"]},"metadata":{},"sourceType":"script"}