{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport HttpConnection from \"@walletconnect/http-connection\";\nimport { payloadId, signingMethods, parsePersonalSign, getRpcUrl } from \"@walletconnect/utils\";\n\nvar ProviderEngine = require(\"web3-provider-engine\");\n\nvar CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\n\nvar FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\n\nvar FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\n\nvar HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\n\nvar NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\n\nvar SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\n\nvar WalletConnectProvider = /*#__PURE__*/function (_ProviderEngine) {\n  _inherits(WalletConnectProvider, _ProviderEngine);\n\n  var _super = _createSuper(WalletConnectProvider);\n\n  function WalletConnectProvider(opts) {\n    var _this;\n\n    _classCallCheck(this, WalletConnectProvider);\n\n    _this = _super.call(this, {\n      pollingInterval: opts.pollingInterval || 8000\n    });\n    _this.bridge = \"https://bridge.walletconnect.org\";\n    _this.qrcode = true;\n    _this.qrcodeModal = QRCodeModal;\n    _this.qrcodeModalOptions = undefined;\n    _this.rpc = null;\n    _this.infuraId = \"\";\n    _this.http = null;\n    _this.isConnecting = false;\n    _this.connected = false;\n    _this.connectCallbacks = [];\n    _this.accounts = [];\n    _this.chainId = 1;\n    _this.rpcUrl = \"\";\n    _this.enable = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var wc;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getWalletConnector();\n\n            case 2:\n              wc = _context.sent;\n\n              if (!wc) {\n                _context.next = 9;\n                break;\n              }\n\n              _this.start();\n\n              _this.subscribeWalletConnector();\n\n              return _context.abrupt(\"return\", wc.accounts);\n\n            case 9:\n              throw new Error(\"Failed to connect to WalleConnect\");\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.request = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", _this.send(payload));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.send = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(payload, callback) {\n        var method, params;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(typeof payload === \"string\")) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                method = payload;\n                params = callback;\n\n                if (method === \"personal_sign\") {\n                  params = parsePersonalSign(params);\n                }\n\n                return _context3.abrupt(\"return\", _this.sendAsyncPromise(method, params));\n\n              case 5:\n                payload = Object.assign({\n                  id: payloadId(),\n                  jsonrpc: \"2.0\"\n                }, payload);\n\n                if (payload.method === \"personal_sign\") {\n                  payload.params = parsePersonalSign(payload.params);\n                }\n\n                if (!callback) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _this.sendAsync(payload, callback);\n\n                return _context3.abrupt(\"return\");\n\n              case 10:\n                return _context3.abrupt(\"return\", _this.sendAsyncPromise(payload.method, payload.params));\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.onConnect = function (callback) {\n      _this.connectCallbacks.push(callback);\n    };\n\n    _this.triggerConnect = function (result) {\n      if (_this.connectCallbacks && _this.connectCallbacks.length) {\n        _this.connectCallbacks.forEach(function (callback) {\n          return callback(result);\n        });\n      }\n    };\n\n    _this.bridge = opts.connector ? opts.connector.bridge : opts.bridge || \"https://bridge.walletconnect.org\";\n    _this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\n    _this.qrcodeModal = opts.qrcodeModal || _this.qrcodeModal;\n    _this.qrcodeModalOptions = opts.qrcodeModalOptions;\n    _this.wc = opts.connector || new WalletConnect({\n      bridge: _this.bridge,\n      qrcodeModal: _this.qrcode ? _this.qrcodeModal : undefined,\n      qrcodeModalOptions: _this.qrcodeModalOptions,\n      storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n      signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n      clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n    });\n    _this.rpc = opts.rpc || null;\n\n    if (!_this.rpc && (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\n      throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\n    }\n\n    _this.infuraId = opts.infuraId || \"\";\n    _this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || _this.chainId;\n\n    _this.initialize();\n\n    return _this;\n  }\n\n  _createClass(WalletConnectProvider, [{\n    key: \"isWalletConnect\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"connector\",\n    get: function get() {\n      return this.wc;\n    }\n  }, {\n    key: \"walletMeta\",\n    get: function get() {\n      return this.wc.peerMeta;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.close();\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var wc;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.getWalletConnector({\n                  disableSessionCreation: true\n                });\n\n              case 2:\n                wc = _context5.sent;\n                _context5.next = 5;\n                return wc.killSession();\n\n              case 5:\n                _context5.next = 7;\n                return this.onDisconnect();\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: \"handleRequest\",\n    value: function () {\n      var _handleRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(payload) {\n        var response, result, wc;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                result = null;\n                _context6.next = 4;\n                return this.getWalletConnector();\n\n              case 4:\n                wc = _context6.sent;\n                _context6.t0 = payload.method;\n                _context6.next = _context6.t0 === \"wc_killSession\" ? 8 : _context6.t0 === \"eth_accounts\" ? 12 : _context6.t0 === \"eth_coinbase\" ? 14 : _context6.t0 === \"eth_chainId\" ? 16 : _context6.t0 === \"net_version\" ? 18 : _context6.t0 === \"eth_uninstallFilter\" ? 20 : 23;\n                break;\n\n              case 8:\n                _context6.next = 10;\n                return this.close();\n\n              case 10:\n                result = null;\n                return _context6.abrupt(\"break\", 26);\n\n              case 12:\n                result = wc.accounts;\n                return _context6.abrupt(\"break\", 26);\n\n              case 14:\n                result = wc.accounts[0];\n                return _context6.abrupt(\"break\", 26);\n\n              case 16:\n                result = wc.chainId;\n                return _context6.abrupt(\"break\", 26);\n\n              case 18:\n                result = wc.chainId;\n                return _context6.abrupt(\"break\", 26);\n\n              case 20:\n                this.sendAsync(payload, function (_) {\n                  return _;\n                });\n                result = true;\n                return _context6.abrupt(\"break\", 26);\n\n              case 23:\n                _context6.next = 25;\n                return this.handleOtherRequests(payload);\n\n              case 25:\n                response = _context6.sent;\n\n              case 26:\n                if (!response) {\n                  _context6.next = 28;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", response);\n\n              case 28:\n                return _context6.abrupt(\"return\", this.formatResponse(payload, result));\n\n              case 31:\n                _context6.prev = 31;\n                _context6.t1 = _context6[\"catch\"](0);\n                this.emit(\"error\", _context6.t1);\n                throw _context6.t1;\n\n              case 35:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 31]]);\n      }));\n\n      function handleRequest(_x4) {\n        return _handleRequest.apply(this, arguments);\n      }\n\n      return handleRequest;\n    }()\n  }, {\n    key: \"handleOtherRequests\",\n    value: function () {\n      var _handleOtherRequests = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(payload) {\n        var wc, result;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(!signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\"))) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", this.handleReadRequests(payload));\n\n              case 2:\n                _context7.next = 4;\n                return this.getWalletConnector();\n\n              case 4:\n                wc = _context7.sent;\n                _context7.next = 7;\n                return wc.sendCustomRequest(payload);\n\n              case 7:\n                result = _context7.sent;\n                return _context7.abrupt(\"return\", this.formatResponse(payload, result));\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function handleOtherRequests(_x5) {\n        return _handleOtherRequests.apply(this, arguments);\n      }\n\n      return handleOtherRequests;\n    }()\n  }, {\n    key: \"handleReadRequests\",\n    value: function () {\n      var _handleReadRequests = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(payload) {\n        var error;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (this.http) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                error = new Error(\"HTTP Connection not available\");\n                this.emit(\"error\", error);\n                throw error;\n\n              case 4:\n                return _context8.abrupt(\"return\", this.http.send(payload));\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function handleReadRequests(_x6) {\n        return _handleReadRequests.apply(this, arguments);\n      }\n\n      return handleReadRequests;\n    }()\n  }, {\n    key: \"formatResponse\",\n    value: function formatResponse(payload, result) {\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      };\n    }\n  }, {\n    key: \"getWalletConnector\",\n    value: function getWalletConnector() {\n      var _this2 = this;\n\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _opts$disableSessionC = opts.disableSessionCreation,\n          disableSessionCreation = _opts$disableSessionC === void 0 ? false : _opts$disableSessionC;\n      return new Promise(function (resolve, reject) {\n        var wc = _this2.wc;\n\n        if (_this2.isConnecting) {\n          _this2.onConnect(function (x) {\n            return resolve(x);\n          });\n        } else if (!wc.connected && !disableSessionCreation) {\n          _this2.isConnecting = true;\n          wc.on(\"modal_closed\", function () {\n            reject(new Error(\"User closed modal\"));\n          });\n          wc.createSession({\n            chainId: _this2.chainId\n          }).then(function () {\n            wc.on(\"connect\", function (error, payload) {\n              if (error) {\n                _this2.isConnecting = false;\n                return reject(error);\n              }\n\n              _this2.isConnecting = false;\n              _this2.connected = true;\n\n              if (payload) {\n                _this2.updateState(payload.params[0]);\n              }\n\n              _this2.emit(\"connect\");\n\n              _this2.triggerConnect(wc);\n\n              resolve(wc);\n            });\n          }).catch(function (error) {\n            _this2.isConnecting = false;\n            reject(error);\n          });\n        } else {\n          if (!_this2.connected) {\n            _this2.connected = true;\n\n            _this2.updateState(wc.session);\n          }\n\n          resolve(wc);\n        }\n      });\n    }\n  }, {\n    key: \"subscribeWalletConnector\",\n    value: function () {\n      var _subscribeWalletConnector = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _this3 = this;\n\n        var wc;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.getWalletConnector();\n\n              case 2:\n                wc = _context9.sent;\n                wc.on(\"disconnect\", function (error) {\n                  if (error) {\n                    _this3.emit(\"error\", error);\n\n                    return;\n                  }\n\n                  _this3.onDisconnect();\n                });\n                wc.on(\"session_update\", function (error, payload) {\n                  if (error) {\n                    _this3.emit(\"error\", error);\n\n                    return;\n                  }\n\n                  _this3.updateState(payload.params[0]);\n                });\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function subscribeWalletConnector() {\n        return _subscribeWalletConnector.apply(this, arguments);\n      }\n\n      return subscribeWalletConnector;\n    }()\n  }, {\n    key: \"onDisconnect\",\n    value: function () {\n      var _onDisconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.stop();\n\n              case 2:\n                this.emit(\"close\", 1000, \"Connection closed\");\n                this.emit(\"disconnect\", 1000, \"Connection disconnected\");\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function onDisconnect() {\n        return _onDisconnect.apply(this, arguments);\n      }\n\n      return onDisconnect;\n    }()\n  }, {\n    key: \"updateState\",\n    value: function () {\n      var _updateState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(sessionParams) {\n        var accounts, chainId, networkId, rpcUrl;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                accounts = sessionParams.accounts, chainId = sessionParams.chainId, networkId = sessionParams.networkId, rpcUrl = sessionParams.rpcUrl;\n\n                if (!this.accounts || accounts && this.accounts !== accounts) {\n                  this.accounts = accounts;\n                  this.emit(\"accountsChanged\", accounts);\n                }\n\n                if (!this.chainId || chainId && this.chainId !== chainId) {\n                  this.chainId = chainId;\n                  this.emit(\"chainChanged\", chainId);\n                }\n\n                if (!this.networkId || networkId && this.networkId !== networkId) {\n                  this.networkId = networkId;\n                  this.emit(\"networkChanged\", networkId);\n                }\n\n                this.updateRpcUrl(this.chainId, rpcUrl || \"\");\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function updateState(_x7) {\n        return _updateState.apply(this, arguments);\n      }\n\n      return updateState;\n    }()\n  }, {\n    key: \"updateRpcUrl\",\n    value: function updateRpcUrl(chainId) {\n      var rpcUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      var rpc = {\n        infuraId: this.infuraId,\n        custom: this.rpc || undefined\n      };\n      rpcUrl = rpcUrl || getRpcUrl(chainId, rpc);\n\n      if (rpcUrl) {\n        this.rpcUrl = rpcUrl;\n        this.updateHttpConnection();\n      } else {\n        this.emit(\"error\", new Error(\"No RPC Url available for chainId: \".concat(chainId)));\n      }\n    }\n  }, {\n    key: \"updateHttpConnection\",\n    value: function updateHttpConnection() {\n      var _this4 = this;\n\n      if (this.rpcUrl) {\n        this.http = new HttpConnection(this.rpcUrl);\n        this.http.on(\"payload\", function (payload) {\n          return _this4.emit(\"payload\", payload);\n        });\n        this.http.on(\"error\", function (error) {\n          return _this4.emit(\"error\", error);\n        });\n      }\n    }\n  }, {\n    key: \"sendAsyncPromise\",\n    value: function sendAsyncPromise(method, params) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this5.sendAsync({\n          id: payloadId(),\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || []\n        }, function (error, response) {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve(response.result);\n        });\n      });\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var _this6 = this;\n\n      this.updateRpcUrl(this.chainId);\n      this.addProvider(new FixtureSubprovider({\n        eth_hashrate: \"0x00\",\n        eth_mining: false,\n        eth_syncing: true,\n        net_listening: true,\n        web3_clientVersion: \"WalletConnect/v1.x.x/javascript\"\n      }));\n      this.addProvider(new CacheSubprovider());\n      this.addProvider(new SubscriptionsSubprovider());\n      this.addProvider(new FilterSubprovider());\n      this.addProvider(new NonceSubprovider());\n      this.addProvider(new HookedWalletSubprovider(this.configWallet()));\n      this.addProvider({\n        handleRequest: function () {\n          var _handleRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(payload, next, end) {\n            var _yield$_this6$handleR, error, result;\n\n            return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n              while (1) {\n                switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.prev = 0;\n                    _context12.next = 3;\n                    return _this6.handleRequest(payload);\n\n                  case 3:\n                    _yield$_this6$handleR = _context12.sent;\n                    error = _yield$_this6$handleR.error;\n                    result = _yield$_this6$handleR.result;\n                    end(error, result);\n                    _context12.next = 12;\n                    break;\n\n                  case 9:\n                    _context12.prev = 9;\n                    _context12.t0 = _context12[\"catch\"](0);\n                    end(_context12.t0);\n\n                  case 12:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }\n            }, _callee12, null, [[0, 9]]);\n          }));\n\n          function handleRequest(_x8, _x9, _x10) {\n            return _handleRequest2.apply(this, arguments);\n          }\n\n          return handleRequest;\n        }(),\n        setEngine: function setEngine(_) {\n          return _;\n        }\n      });\n    }\n  }, {\n    key: \"configWallet\",\n    value: function configWallet() {\n      var _this7 = this;\n\n      return {\n        getAccounts: function () {\n          var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(cb) {\n            var wc, accounts;\n            return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n              while (1) {\n                switch (_context13.prev = _context13.next) {\n                  case 0:\n                    _context13.prev = 0;\n                    _context13.next = 3;\n                    return _this7.getWalletConnector();\n\n                  case 3:\n                    wc = _context13.sent;\n                    accounts = wc.accounts;\n\n                    if (accounts && accounts.length) {\n                      cb(null, accounts);\n                    } else {\n                      cb(new Error(\"Failed to get accounts\"));\n                    }\n\n                    _context13.next = 11;\n                    break;\n\n                  case 8:\n                    _context13.prev = 8;\n                    _context13.t0 = _context13[\"catch\"](0);\n                    cb(_context13.t0);\n\n                  case 11:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }\n            }, _callee13, null, [[0, 8]]);\n          }));\n\n          function getAccounts(_x11) {\n            return _getAccounts.apply(this, arguments);\n          }\n\n          return getAccounts;\n        }(),\n        processMessage: function () {\n          var _processMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(msgParams, cb) {\n            var wc, result;\n            return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n              while (1) {\n                switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.prev = 0;\n                    _context14.next = 3;\n                    return _this7.getWalletConnector();\n\n                  case 3:\n                    wc = _context14.sent;\n                    _context14.next = 6;\n                    return wc.signMessage([msgParams.from, msgParams.data]);\n\n                  case 6:\n                    result = _context14.sent;\n                    cb(null, result);\n                    _context14.next = 13;\n                    break;\n\n                  case 10:\n                    _context14.prev = 10;\n                    _context14.t0 = _context14[\"catch\"](0);\n                    cb(_context14.t0);\n\n                  case 13:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }\n            }, _callee14, null, [[0, 10]]);\n          }));\n\n          function processMessage(_x12, _x13) {\n            return _processMessage.apply(this, arguments);\n          }\n\n          return processMessage;\n        }(),\n        processPersonalMessage: function () {\n          var _processPersonalMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(msgParams, cb) {\n            var wc, result;\n            return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n              while (1) {\n                switch (_context15.prev = _context15.next) {\n                  case 0:\n                    _context15.prev = 0;\n                    _context15.next = 3;\n                    return _this7.getWalletConnector();\n\n                  case 3:\n                    wc = _context15.sent;\n                    _context15.next = 6;\n                    return wc.signPersonalMessage([msgParams.data, msgParams.from]);\n\n                  case 6:\n                    result = _context15.sent;\n                    cb(null, result);\n                    _context15.next = 13;\n                    break;\n\n                  case 10:\n                    _context15.prev = 10;\n                    _context15.t0 = _context15[\"catch\"](0);\n                    cb(_context15.t0);\n\n                  case 13:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }\n            }, _callee15, null, [[0, 10]]);\n          }));\n\n          function processPersonalMessage(_x14, _x15) {\n            return _processPersonalMessage.apply(this, arguments);\n          }\n\n          return processPersonalMessage;\n        }(),\n        processSignTransaction: function () {\n          var _processSignTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(txParams, cb) {\n            var wc, result;\n            return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n              while (1) {\n                switch (_context16.prev = _context16.next) {\n                  case 0:\n                    _context16.prev = 0;\n                    _context16.next = 3;\n                    return _this7.getWalletConnector();\n\n                  case 3:\n                    wc = _context16.sent;\n                    _context16.next = 6;\n                    return wc.signTransaction(txParams);\n\n                  case 6:\n                    result = _context16.sent;\n                    cb(null, result);\n                    _context16.next = 13;\n                    break;\n\n                  case 10:\n                    _context16.prev = 10;\n                    _context16.t0 = _context16[\"catch\"](0);\n                    cb(_context16.t0);\n\n                  case 13:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }\n            }, _callee16, null, [[0, 10]]);\n          }));\n\n          function processSignTransaction(_x16, _x17) {\n            return _processSignTransaction.apply(this, arguments);\n          }\n\n          return processSignTransaction;\n        }(),\n        processTransaction: function () {\n          var _processTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(txParams, cb) {\n            var wc, result;\n            return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n              while (1) {\n                switch (_context17.prev = _context17.next) {\n                  case 0:\n                    _context17.prev = 0;\n                    _context17.next = 3;\n                    return _this7.getWalletConnector();\n\n                  case 3:\n                    wc = _context17.sent;\n                    _context17.next = 6;\n                    return wc.sendTransaction(txParams);\n\n                  case 6:\n                    result = _context17.sent;\n                    cb(null, result);\n                    _context17.next = 13;\n                    break;\n\n                  case 10:\n                    _context17.prev = 10;\n                    _context17.t0 = _context17[\"catch\"](0);\n                    cb(_context17.t0);\n\n                  case 13:\n                  case \"end\":\n                    return _context17.stop();\n                }\n              }\n            }, _callee17, null, [[0, 10]]);\n          }));\n\n          function processTransaction(_x18, _x19) {\n            return _processTransaction.apply(this, arguments);\n          }\n\n          return processTransaction;\n        }(),\n        processTypedMessage: function () {\n          var _processTypedMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(msgParams, cb) {\n            var wc, result;\n            return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n              while (1) {\n                switch (_context18.prev = _context18.next) {\n                  case 0:\n                    _context18.prev = 0;\n                    _context18.next = 3;\n                    return _this7.getWalletConnector();\n\n                  case 3:\n                    wc = _context18.sent;\n                    _context18.next = 6;\n                    return wc.signTypedData([msgParams.from, msgParams.data]);\n\n                  case 6:\n                    result = _context18.sent;\n                    cb(null, result);\n                    _context18.next = 13;\n                    break;\n\n                  case 10:\n                    _context18.prev = 10;\n                    _context18.t0 = _context18[\"catch\"](0);\n                    cb(_context18.t0);\n\n                  case 13:\n                  case \"end\":\n                    return _context18.stop();\n                }\n              }\n            }, _callee18, null, [[0, 10]]);\n          }));\n\n          function processTypedMessage(_x20, _x21) {\n            return _processTypedMessage.apply(this, arguments);\n          }\n\n          return processTypedMessage;\n        }()\n      };\n    }\n  }]);\n\n  return WalletConnectProvider;\n}(ProviderEngine);\n\nexport default WalletConnectProvider;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport HttpConnection from \"@walletconnect/http-connection\";\nimport { payloadId, signingMethods, parsePersonalSign, getRpcUrl } from \"@walletconnect/utils\";\nconst ProviderEngine = require(\"web3-provider-engine\");\nconst CacheSubprovider = require(\"web3-provider-engine/subproviders/cache\");\nconst FixtureSubprovider = require(\"web3-provider-engine/subproviders/fixture\");\nconst FilterSubprovider = require(\"web3-provider-engine/subproviders/filters\");\nconst HookedWalletSubprovider = require(\"web3-provider-engine/subproviders/hooked-wallet\");\nconst NonceSubprovider = require(\"web3-provider-engine/subproviders/nonce-tracker\");\nconst SubscriptionsSubprovider = require(\"web3-provider-engine/subproviders/subscriptions\");\nclass WalletConnectProvider extends ProviderEngine {\n    constructor(opts) {\n        super({ pollingInterval: opts.pollingInterval || 8000 });\n        this.bridge = \"https://bridge.walletconnect.org\";\n        this.qrcode = true;\n        this.qrcodeModal = QRCodeModal;\n        this.qrcodeModalOptions = undefined;\n        this.rpc = null;\n        this.infuraId = \"\";\n        this.http = null;\n        this.isConnecting = false;\n        this.connected = false;\n        this.connectCallbacks = [];\n        this.accounts = [];\n        this.chainId = 1;\n        this.rpcUrl = \"\";\n        this.enable = async () => {\n            const wc = await this.getWalletConnector();\n            if (wc) {\n                this.start();\n                this.subscribeWalletConnector();\n                return wc.accounts;\n            }\n            else {\n                throw new Error(\"Failed to connect to WalleConnect\");\n            }\n        };\n        this.request = async (payload) => {\n            return this.send(payload);\n        };\n        this.send = async (payload, callback) => {\n            if (typeof payload === \"string\") {\n                const method = payload;\n                let params = callback;\n                if (method === \"personal_sign\") {\n                    params = parsePersonalSign(params);\n                }\n                return this.sendAsyncPromise(method, params);\n            }\n            payload = Object.assign({ id: payloadId(), jsonrpc: \"2.0\" }, payload);\n            if (payload.method === \"personal_sign\") {\n                payload.params = parsePersonalSign(payload.params);\n            }\n            if (callback) {\n                this.sendAsync(payload, callback);\n                return;\n            }\n            return this.sendAsyncPromise(payload.method, payload.params);\n        };\n        this.onConnect = (callback) => {\n            this.connectCallbacks.push(callback);\n        };\n        this.triggerConnect = (result) => {\n            if (this.connectCallbacks && this.connectCallbacks.length) {\n                this.connectCallbacks.forEach(callback => callback(result));\n            }\n        };\n        this.bridge = opts.connector\n            ? opts.connector.bridge\n            : opts.bridge || \"https://bridge.walletconnect.org\";\n        this.qrcode = typeof opts.qrcode === \"undefined\" || opts.qrcode !== false;\n        this.qrcodeModal = opts.qrcodeModal || this.qrcodeModal;\n        this.qrcodeModalOptions = opts.qrcodeModalOptions;\n        this.wc =\n            opts.connector ||\n                new WalletConnect({\n                    bridge: this.bridge,\n                    qrcodeModal: this.qrcode ? this.qrcodeModal : undefined,\n                    qrcodeModalOptions: this.qrcodeModalOptions,\n                    storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n                    signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n                    clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta,\n                });\n        this.rpc = opts.rpc || null;\n        if (!this.rpc &&\n            (!opts.infuraId || typeof opts.infuraId !== \"string\" || !opts.infuraId.trim())) {\n            throw new Error(\"Missing one of the required parameters: rpc or infuraId\");\n        }\n        this.infuraId = opts.infuraId || \"\";\n        this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n        this.initialize();\n    }\n    get isWalletConnect() {\n        return true;\n    }\n    get connector() {\n        return this.wc;\n    }\n    get walletMeta() {\n        return this.wc.peerMeta;\n    }\n    async disconnect() {\n        this.close();\n    }\n    async close() {\n        const wc = await this.getWalletConnector({ disableSessionCreation: true });\n        await wc.killSession();\n        await this.onDisconnect();\n    }\n    async handleRequest(payload) {\n        try {\n            let response;\n            let result = null;\n            const wc = await this.getWalletConnector();\n            switch (payload.method) {\n                case \"wc_killSession\":\n                    await this.close();\n                    result = null;\n                    break;\n                case \"eth_accounts\":\n                    result = wc.accounts;\n                    break;\n                case \"eth_coinbase\":\n                    result = wc.accounts[0];\n                    break;\n                case \"eth_chainId\":\n                    result = wc.chainId;\n                    break;\n                case \"net_version\":\n                    result = wc.chainId;\n                    break;\n                case \"eth_uninstallFilter\":\n                    this.sendAsync(payload, (_) => _);\n                    result = true;\n                    break;\n                default:\n                    response = await this.handleOtherRequests(payload);\n            }\n            if (response) {\n                return response;\n            }\n            return this.formatResponse(payload, result);\n        }\n        catch (error) {\n            this.emit(\"error\", error);\n            throw error;\n        }\n    }\n    async handleOtherRequests(payload) {\n        if (!signingMethods.includes(payload.method) && payload.method.startsWith(\"eth_\")) {\n            return this.handleReadRequests(payload);\n        }\n        const wc = await this.getWalletConnector();\n        const result = await wc.sendCustomRequest(payload);\n        return this.formatResponse(payload, result);\n    }\n    async handleReadRequests(payload) {\n        if (!this.http) {\n            const error = new Error(\"HTTP Connection not available\");\n            this.emit(\"error\", error);\n            throw error;\n        }\n        return this.http.send(payload);\n    }\n    formatResponse(payload, result) {\n        return {\n            id: payload.id,\n            jsonrpc: payload.jsonrpc,\n            result: result,\n        };\n    }\n    getWalletConnector(opts = {}) {\n        const { disableSessionCreation = false } = opts;\n        return new Promise((resolve, reject) => {\n            const wc = this.wc;\n            if (this.isConnecting) {\n                this.onConnect((x) => resolve(x));\n            }\n            else if (!wc.connected && !disableSessionCreation) {\n                this.isConnecting = true;\n                wc.on(\"modal_closed\", () => {\n                    reject(new Error(\"User closed modal\"));\n                });\n                wc.createSession({ chainId: this.chainId })\n                    .then(() => {\n                    wc.on(\"connect\", (error, payload) => {\n                        if (error) {\n                            this.isConnecting = false;\n                            return reject(error);\n                        }\n                        this.isConnecting = false;\n                        this.connected = true;\n                        if (payload) {\n                            this.updateState(payload.params[0]);\n                        }\n                        this.emit(\"connect\");\n                        this.triggerConnect(wc);\n                        resolve(wc);\n                    });\n                })\n                    .catch(error => {\n                    this.isConnecting = false;\n                    reject(error);\n                });\n            }\n            else {\n                if (!this.connected) {\n                    this.connected = true;\n                    this.updateState(wc.session);\n                }\n                resolve(wc);\n            }\n        });\n    }\n    async subscribeWalletConnector() {\n        const wc = await this.getWalletConnector();\n        wc.on(\"disconnect\", error => {\n            if (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this.onDisconnect();\n        });\n        wc.on(\"session_update\", (error, payload) => {\n            if (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this.updateState(payload.params[0]);\n        });\n    }\n    async onDisconnect() {\n        await this.stop();\n        this.emit(\"close\", 1000, \"Connection closed\");\n        this.emit(\"disconnect\", 1000, \"Connection disconnected\");\n    }\n    async updateState(sessionParams) {\n        const { accounts, chainId, networkId, rpcUrl } = sessionParams;\n        if (!this.accounts || (accounts && this.accounts !== accounts)) {\n            this.accounts = accounts;\n            this.emit(\"accountsChanged\", accounts);\n        }\n        if (!this.chainId || (chainId && this.chainId !== chainId)) {\n            this.chainId = chainId;\n            this.emit(\"chainChanged\", chainId);\n        }\n        if (!this.networkId || (networkId && this.networkId !== networkId)) {\n            this.networkId = networkId;\n            this.emit(\"networkChanged\", networkId);\n        }\n        this.updateRpcUrl(this.chainId, rpcUrl || \"\");\n    }\n    updateRpcUrl(chainId, rpcUrl = \"\") {\n        const rpc = { infuraId: this.infuraId, custom: this.rpc || undefined };\n        rpcUrl = rpcUrl || getRpcUrl(chainId, rpc);\n        if (rpcUrl) {\n            this.rpcUrl = rpcUrl;\n            this.updateHttpConnection();\n        }\n        else {\n            this.emit(\"error\", new Error(`No RPC Url available for chainId: ${chainId}`));\n        }\n    }\n    updateHttpConnection() {\n        if (this.rpcUrl) {\n            this.http = new HttpConnection(this.rpcUrl);\n            this.http.on(\"payload\", payload => this.emit(\"payload\", payload));\n            this.http.on(\"error\", error => this.emit(\"error\", error));\n        }\n    }\n    sendAsyncPromise(method, params) {\n        return new Promise((resolve, reject) => {\n            this.sendAsync({\n                id: payloadId(),\n                jsonrpc: \"2.0\",\n                method,\n                params: params || [],\n            }, (error, response) => {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                resolve(response.result);\n            });\n        });\n    }\n    initialize() {\n        this.updateRpcUrl(this.chainId);\n        this.addProvider(new FixtureSubprovider({\n            eth_hashrate: \"0x00\",\n            eth_mining: false,\n            eth_syncing: true,\n            net_listening: true,\n            web3_clientVersion: `WalletConnect/v1.x.x/javascript`,\n        }));\n        this.addProvider(new CacheSubprovider());\n        this.addProvider(new SubscriptionsSubprovider());\n        this.addProvider(new FilterSubprovider());\n        this.addProvider(new NonceSubprovider());\n        this.addProvider(new HookedWalletSubprovider(this.configWallet()));\n        this.addProvider({\n            handleRequest: async (payload, next, end) => {\n                try {\n                    const { error, result } = await this.handleRequest(payload);\n                    end(error, result);\n                }\n                catch (error) {\n                    end(error);\n                }\n            },\n            setEngine: (_) => _,\n        });\n    }\n    configWallet() {\n        return {\n            getAccounts: async (cb) => {\n                try {\n                    const wc = await this.getWalletConnector();\n                    const accounts = wc.accounts;\n                    if (accounts && accounts.length) {\n                        cb(null, accounts);\n                    }\n                    else {\n                        cb(new Error(\"Failed to get accounts\"));\n                    }\n                }\n                catch (error) {\n                    cb(error);\n                }\n            },\n            processMessage: async (msgParams, cb) => {\n                try {\n                    const wc = await this.getWalletConnector();\n                    const result = await wc.signMessage([msgParams.from, msgParams.data]);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            },\n            processPersonalMessage: async (msgParams, cb) => {\n                try {\n                    const wc = await this.getWalletConnector();\n                    const result = await wc.signPersonalMessage([msgParams.data, msgParams.from]);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            },\n            processSignTransaction: async (txParams, cb) => {\n                try {\n                    const wc = await this.getWalletConnector();\n                    const result = await wc.signTransaction(txParams);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            },\n            processTransaction: async (txParams, cb) => {\n                try {\n                    const wc = await this.getWalletConnector();\n                    const result = await wc.sendTransaction(txParams);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            },\n            processTypedMessage: async (msgParams, cb) => {\n                try {\n                    const wc = await this.getWalletConnector();\n                    const result = await wc.signTypedData([msgParams.from, msgParams.data]);\n                    cb(null, result);\n                }\n                catch (error) {\n                    cb(error);\n                }\n            },\n        };\n    }\n}\nexport default WalletConnectProvider;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}