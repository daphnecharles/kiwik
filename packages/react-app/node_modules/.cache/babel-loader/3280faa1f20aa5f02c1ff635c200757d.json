{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createGet = configure.configure(function (api) {\n  var get = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key) {\n      var options,\n          res,\n          data,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (key) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error('key argument is required');\n\n            case 3:\n              _context.next = 5;\n              return api.post('config', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: key\n                }, options)),\n                headers: options.headers\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.Value);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function get(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return get;\n});\nexports.createGet = createGet;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/config/get.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createGet","api","get","key","options","Error","post","signal","searchParams","arg","headers","res","json","data","Value"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AAEA,IAAME,SAAS,GAAGH,SAAS,CAACA,SAAV,CAAoB,UAAAI,GAAG,EAAI;AAC3C,MAAMC,GAAG;AAAA,wEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYC,cAAAA,OAAZ,2DAAsB,EAAtB;;AAAA,kBACLD,GADK;AAAA;AAAA;AAAA;;AAAA,oBAEF,IAAIE,KAAJ,CAAU,0BAAV,CAFE;;AAAA;AAAA;AAAA,qBAIQJ,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB;AACnCC,gBAAAA,MAAM,EAAEH,OAAO,CAACG,MADmB;AAEnCC,gBAAAA,YAAY,EAAET,iBAAiB,CAACA,iBAAlB;AACZU,kBAAAA,GAAG,EAAEN;AADO,mBAETC,OAFS,EAFqB;AAMnCM,gBAAAA,OAAO,EAAEN,OAAO,CAACM;AANkB,eAAnB,CAJR;;AAAA;AAIJC,cAAAA,GAJI;AAAA;AAAA,qBAYSA,GAAG,CAACC,IAAJ,EAZT;;AAAA;AAYJC,cAAAA,IAZI;AAAA,+CAaHA,IAAI,CAACC,KAbF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAHZ,GAAG;AAAA;AAAA;AAAA,KAAT;;AAeA,SAAOA,GAAP;AACD,CAjBiB,CAAlB;AAmBAP,OAAO,CAACK,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createGet = configure.configure(api => {\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required');\n    }\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Value;\n  };\n  return get;\n});\n\nexports.createGet = createGet;\n"]},"metadata":{},"sourceType":"script"}