{"ast":null,"code":"import { isCompositeType } from 'graphql';\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from 'graphql/type/introspection';\nexport function getDefinitionState(tokenState) {\n  var definitionState;\n  forEachState(tokenState, function (state) {\n    switch (state.kind) {\n      case 'Query':\n      case 'ShortQuery':\n      case 'Mutation':\n      case 'Subscription':\n      case 'FragmentDefinition':\n        definitionState = state;\n        break;\n    }\n  });\n  return definitionState;\n}\nexport function getFieldDef(schema, type, fieldName) {\n  if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n    return TypeMetaFieldDef;\n  }\n\n  if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if ('getFields' in type) {\n    return type.getFields()[fieldName];\n  }\n\n  return null;\n}\nexport function forEachState(stack, fn) {\n  var reverseStateStack = [];\n  var state = stack;\n\n  while (state && state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n\n  for (var i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\nexport function objectValues(object) {\n  var keys = Object.keys(object);\n  var len = keys.length;\n  var values = new Array(len);\n\n  for (var i = 0; i < len; ++i) {\n    values[i] = object[keys[i]];\n  }\n\n  return values;\n}\nexport function hintList(token, list) {\n  return filterAndSortList(list, normalizeText(token.string));\n}\n\nfunction filterAndSortList(list, text) {\n  if (!text) {\n    return filterNonEmpty(list, function (entry) {\n      return !entry.isDeprecated;\n    });\n  }\n\n  var byProximity = list.map(function (entry) {\n    return {\n      proximity: getProximity(normalizeText(entry.label), text),\n      entry: entry\n    };\n  });\n  return filterNonEmpty(filterNonEmpty(byProximity, function (pair) {\n    return pair.proximity <= 2;\n  }), function (pair) {\n    return !pair.entry.isDeprecated;\n  }).sort(function (a, b) {\n    return (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.label.length - b.entry.label.length;\n  }).map(function (pair) {\n    return pair.entry;\n  });\n}\n\nfunction filterNonEmpty(array, predicate) {\n  var filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n\nfunction normalizeText(text) {\n  return text.toLowerCase().replace(/\\W/g, '');\n}\n\nfunction getProximity(suggestion, text) {\n  var proximity = lexicalDistance(text, suggestion);\n\n  if (suggestion.length > text.length) {\n    proximity -= suggestion.length - text.length - 1;\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n\n  return proximity;\n}\n\nfunction lexicalDistance(a, b) {\n  var i;\n  var j;\n  var d = [];\n  var aLength = a.length;\n  var bLength = b.length;\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      var cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}","map":{"version":3,"sources":["../src/autocompleteUtils.ts"],"names":[],"mappings":"AAUA,SAAS,eAAT,QAAgC,SAAhC;AACA,SACE,kBADF,EAEE,gBAFF,EAGE,oBAHF,QAIO,4BAJP;AAcA,OAAM,SAAU,kBAAV,CACJ,UADI,EACa;AAEjB,MAAI,eAAJ;AAGA,EAAA,YAAY,CAAC,UAAD,EAAa,UAAC,KAAD,EAAuB;AAC9C,YAAQ,KAAK,CAAC,IAAd;AACE,WAAK,OAAL;AACA,WAAK,YAAL;AACA,WAAK,UAAL;AACA,WAAK,cAAL;AACA,WAAK,oBAAL;AACE,QAAA,eAAe,GAAG,KAAlB;AACA;AAPJ;AASD,GAVW,CAAZ;AAYA,SAAO,eAAP;AACD;AAGD,OAAM,SAAU,WAAV,CACJ,MADI,EAEJ,IAFI,EAGJ,SAHI,EAGa;AAEjB,MAAI,SAAS,KAAK,kBAAkB,CAAC,IAAjC,IAAyC,MAAM,CAAC,YAAP,OAA0B,IAAvE,EAA6E;AAC3E,WAAO,kBAAP;AACD;;AACD,MAAI,SAAS,KAAK,gBAAgB,CAAC,IAA/B,IAAuC,MAAM,CAAC,YAAP,OAA0B,IAArE,EAA2E;AACzE,WAAO,gBAAP;AACD;;AACD,MAAI,SAAS,KAAK,oBAAoB,CAAC,IAAnC,IAA2C,eAAe,CAAC,IAAD,CAA9D,EAAsE;AACpE,WAAO,oBAAP;AACD;;AACD,MAAI,eAAe,IAAnB,EAAyB;AACvB,WAAO,IAAI,CAAC,SAAL,GAAiB,SAAjB,CAAP;AACD;;AAED,SAAO,IAAP;AACD;AAGD,OAAM,SAAU,YAAV,CACJ,KADI,EAEJ,EAFI,EAE2C;AAE/C,MAAM,iBAAiB,GAAG,EAA1B;AACA,MAAI,KAAK,GAA6B,KAAtC;;AACA,SAAO,KAAK,IAAI,KAAK,CAAC,IAAtB,EAA4B;AAC1B,IAAA,iBAAiB,CAAC,IAAlB,CAAuB,KAAvB;AACA,IAAA,KAAK,GAAG,KAAK,CAAC,SAAd;AACD;;AACD,OAAK,IAAI,CAAC,GAAG,iBAAiB,CAAC,MAAlB,GAA2B,CAAxC,EAA2C,CAAC,IAAI,CAAhD,EAAmD,CAAC,EAApD,EAAwD;AACtD,IAAA,EAAE,CAAC,iBAAiB,CAAC,CAAD,CAAlB,CAAF;AACD;AACF;AAED,OAAM,SAAU,YAAV,CAA0B,MAA1B,EAAmD;AACvD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAb;AACA,MAAM,GAAG,GAAG,IAAI,CAAC,MAAjB;AACA,MAAM,MAAM,GAAG,IAAI,KAAJ,CAAU,GAAV,CAAf;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,EAAE,CAA3B,EAA8B;AAC5B,IAAA,MAAM,CAAC,CAAD,CAAN,GAAY,MAAM,CAAC,IAAI,CAAC,CAAD,CAAL,CAAlB;AACD;;AACD,SAAO,MAAP;AACD;AAGD,OAAM,SAAU,QAAV,CACJ,KADI,EAEJ,IAFI,EAEU;AAEd,SAAO,iBAAiB,CAAC,IAAD,EAAO,aAAa,CAAC,KAAK,CAAC,MAAP,CAApB,CAAxB;AACD;;AAID,SAAS,iBAAT,CACE,IADF,EAEE,IAFF,EAEc;AAEZ,MAAI,CAAC,IAAL,EAAW;AACT,WAAO,cAAc,CAAI,IAAJ,EAAU,UAAA,KAAK;AAAA,aAAI,CAAC,KAAK,CAAC,YAAX;AAAA,KAAf,CAArB;AACD;;AAED,MAAM,WAAW,GAAG,IAAI,CAAC,GAAL,CAAS,UAAA,KAAK;AAAA,WAAK;AACrC,MAAA,SAAS,EAAE,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,KAAP,CAAd,EAA6B,IAA7B,CADc;AAErC,MAAA,KAAK,EAAL;AAFqC,KAAL;AAAA,GAAd,CAApB;AAKA,SAAO,cAAc,CACnB,cAAc,CAAC,WAAD,EAAc,UAAA,IAAI;AAAA,WAAI,IAAI,CAAC,SAAL,IAAkB,CAAtB;AAAA,GAAlB,CADK,EAEnB,UAAA,IAAI;AAAA,WAAI,CAAC,IAAI,CAAC,KAAL,CAAW,YAAhB;AAAA,GAFe,CAAd,CAIJ,IAJI,CAKH,UAAC,CAAD,EAAI,CAAJ;AAAA,WACE,CAAC,CAAC,CAAC,KAAF,CAAQ,YAAR,GAAuB,CAAvB,GAA2B,CAA5B,KAAkC,CAAC,CAAC,KAAF,CAAQ,YAAR,GAAuB,CAAvB,GAA2B,CAA7D,KACA,CAAC,CAAC,SAAF,GAAc,CAAC,CAAC,SADhB,IAEA,CAAC,CAAC,KAAF,CAAQ,KAAR,CAAc,MAAd,GAAuB,CAAC,CAAC,KAAF,CAAQ,KAAR,CAAc,MAHvC;AAAA,GALG,EAUJ,GAVI,CAUA,UAAA,IAAI;AAAA,WAAI,IAAI,CAAC,KAAT;AAAA,GAVJ,CAAP;AAWD;;AAID,SAAS,cAAT,CACE,KADF,EAEE,SAFF,EAEkC;AAEhC,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAN,CAAa,SAAb,CAAjB;AACA,SAAO,QAAQ,CAAC,MAAT,KAAoB,CAApB,GAAwB,KAAxB,GAAgC,QAAvC;AACD;;AAED,SAAS,aAAT,CAAuB,IAAvB,EAAmC;AACjC,SAAO,IAAI,CAAC,WAAL,GAAmB,OAAnB,CAA2B,KAA3B,EAAkC,EAAlC,CAAP;AACD;;AAGD,SAAS,YAAT,CAAsB,UAAtB,EAA0C,IAA1C,EAAsD;AAEpD,MAAI,SAAS,GAAG,eAAe,CAAC,IAAD,EAAO,UAAP,CAA/B;;AACA,MAAI,UAAU,CAAC,MAAX,GAAoB,IAAI,CAAC,MAA7B,EAAqC;AAEnC,IAAA,SAAS,IAAI,UAAU,CAAC,MAAX,GAAoB,IAAI,CAAC,MAAzB,GAAkC,CAA/C;AAEA,IAAA,SAAS,IAAI,UAAU,CAAC,OAAX,CAAmB,IAAnB,MAA6B,CAA7B,GAAiC,CAAjC,GAAqC,GAAlD;AACD;;AACD,SAAO,SAAP;AACD;;AAgBD,SAAS,eAAT,CAAyB,CAAzB,EAAoC,CAApC,EAA6C;AAC3C,MAAI,CAAJ;AACA,MAAI,CAAJ;AACA,MAAM,CAAC,GAAG,EAAV;AACA,MAAM,OAAO,GAAG,CAAC,CAAC,MAAlB;AACA,MAAM,OAAO,GAAG,CAAC,CAAC,MAAlB;;AAEA,OAAK,CAAC,GAAG,CAAT,EAAY,CAAC,IAAI,OAAjB,EAA0B,CAAC,EAA3B,EAA+B;AAC7B,IAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAD,CAAP;AACD;;AAED,OAAK,CAAC,GAAG,CAAT,EAAY,CAAC,IAAI,OAAjB,EAA0B,CAAC,EAA3B,EAA+B;AAC7B,IAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAU,CAAV;AACD;;AAED,OAAK,CAAC,GAAG,CAAT,EAAY,CAAC,IAAI,OAAjB,EAA0B,CAAC,EAA3B,EAA+B;AAC7B,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,IAAI,OAAjB,EAA0B,CAAC,EAA3B,EAA+B;AAC7B,UAAM,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAL,CAAD,KAAa,CAAC,CAAC,CAAC,GAAG,CAAL,CAAd,GAAwB,CAAxB,GAA4B,CAAzC;AAEA,MAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAU,IAAI,CAAC,GAAL,CACR,CAAC,CAAC,CAAC,GAAG,CAAL,CAAD,CAAS,CAAT,IAAc,CADN,EAER,CAAC,CAAC,CAAD,CAAD,CAAK,CAAC,GAAG,CAAT,IAAc,CAFN,EAGR,CAAC,CAAC,CAAC,GAAG,CAAL,CAAD,CAAS,CAAC,GAAG,CAAb,IAAkB,IAHV,CAAV;;AAMA,UAAI,CAAC,GAAG,CAAJ,IAAS,CAAC,GAAG,CAAb,IAAkB,CAAC,CAAC,CAAC,GAAG,CAAL,CAAD,KAAa,CAAC,CAAC,CAAC,GAAG,CAAL,CAAhC,IAA2C,CAAC,CAAC,CAAC,GAAG,CAAL,CAAD,KAAa,CAAC,CAAC,CAAC,GAAG,CAAL,CAA7D,EAAsE;AACpE,QAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAU,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAT,EAAkB,CAAC,CAAC,CAAC,GAAG,CAAL,CAAD,CAAS,CAAC,GAAG,CAAb,IAAkB,IAApC,CAAV;AACD;AACF;AACF;;AAED,SAAO,CAAC,CAAC,OAAD,CAAD,CAAW,OAAX,CAAP;AACD","sourceRoot":"","sourcesContent":["import { isCompositeType } from 'graphql';\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, } from 'graphql/type/introspection';\nexport function getDefinitionState(tokenState) {\n    let definitionState;\n    forEachState(tokenState, (state) => {\n        switch (state.kind) {\n            case 'Query':\n            case 'ShortQuery':\n            case 'Mutation':\n            case 'Subscription':\n            case 'FragmentDefinition':\n                definitionState = state;\n                break;\n        }\n    });\n    return definitionState;\n}\nexport function getFieldDef(schema, type, fieldName) {\n    if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n        return SchemaMetaFieldDef;\n    }\n    if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n        return TypeMetaFieldDef;\n    }\n    if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n        return TypeNameMetaFieldDef;\n    }\n    if ('getFields' in type) {\n        return type.getFields()[fieldName];\n    }\n    return null;\n}\nexport function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state && state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\nexport function objectValues(object) {\n    const keys = Object.keys(object);\n    const len = keys.length;\n    const values = new Array(len);\n    for (let i = 0; i < len; ++i) {\n        values[i] = object[keys[i]];\n    }\n    return values;\n}\nexport function hintList(token, list) {\n    return filterAndSortList(list, normalizeText(token.string));\n}\nfunction filterAndSortList(list, text) {\n    if (!text) {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.label), text),\n        entry,\n    }));\n    return filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated)\n        .sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.label.length - b.entry.label.length)\n        .map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replace(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\n//# sourceMappingURL=autocompleteUtils.js.map"]},"metadata":{},"sourceType":"module"}