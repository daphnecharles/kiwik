{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/Navbar.jsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { ReactNode } from 'react';\nimport { Box, Flex, Avatar, HStack, Link, IconButton, Button, Menu, MenuButton, MenuList, MenuItem, MenuDivider, useDisclosure, useColorModeValue, Stack } from '@chakra-ui/react';\nimport { HamburgerIcon, CloseIcon, AddIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Links = ['Dashboard', 'Projects', 'Team'];\n\nvar NavLink = function NavLink(_ref) {\n  _s();\n\n  var children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    px: 2,\n    py: 1,\n    rounded: 'md',\n    _hover: {\n      textDecoration: 'none',\n      bg: useColorModeValue('gray.200', 'gray.700')\n    },\n    href: '#',\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(NavLink, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n  return [useColorModeValue];\n});\n\n_c = NavLink;\nexport default function Navbar() {\n  _s2();\n\n  var _this2 = this;\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      bg: useColorModeValue('gray.100', 'gray.900'),\n      px: 4,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        h: 16,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: 'md',\n          icon: isOpen ? /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(HamburgerIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 44\n          }, this),\n          \"aria-label\": 'Open Menu',\n          display: {\n            md: 'none'\n          },\n          onClick: isOpen ? onClose : onOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 8,\n          alignItems: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            as: 'nav',\n            spacing: 4,\n            display: {\n              base: 'none',\n              md: 'flex'\n            },\n            children: Links.map(function (link) {\n              return /*#__PURE__*/_jsxDEV(NavLink, {\n                children: link\n              }, link, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, _this2);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: 'solid',\n            colorScheme: 'teal',\n            size: 'sm',\n            mr: 4,\n            leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this),\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n              as: Button,\n              rounded: 'full',\n              variant: 'link',\n              cursor: 'pointer',\n              minW: 0,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                size: 'sm',\n                src: 'https://images.unsplash.com/photo-1493666438817-866a91353ca9?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(Box, {\n        pb: 4,\n        display: {\n          md: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          as: 'nav',\n          spacing: 4,\n          children: Links.map(function (link) {\n            return /*#__PURE__*/_jsxDEV(NavLink, {\n              children: link\n            }, link, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      children: \"Main Content Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Navbar, \"6awIlLqqqpzda2oInKHfZNU7DaE=\", false, function () {\n  return [useDisclosure, useColorModeValue];\n});\n\n_c2 = Navbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavLink\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/Navbar.jsx"],"names":["ReactNode","Box","Flex","Avatar","HStack","Link","IconButton","Button","Menu","MenuButton","MenuList","MenuItem","MenuDivider","useDisclosure","useColorModeValue","Stack","HamburgerIcon","CloseIcon","AddIcon","Links","NavLink","children","textDecoration","bg","Navbar","isOpen","onOpen","onClose","md","base","map","link"],"mappings":"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","sourcesContent":["import { ReactNode } from 'react';\nimport {\n  Box,\n  Flex,\n  Avatar,\n  HStack,\n  Link,\n  IconButton,\n  Button,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuDivider,\n  useDisclosure,\n  useColorModeValue,\n  Stack,\n} from '@chakra-ui/react';\nimport { HamburgerIcon, CloseIcon, AddIcon } from '@chakra-ui/icons';\n\nconst Links = ['Dashboard', 'Projects', 'Team'];\n\nconst NavLink = ({ children }) => (\n  <Link\n    px={2}\n    py={1}\n    rounded={'md'}\n    _hover={{\n      textDecoration: 'none',\n      bg: useColorModeValue('gray.200', 'gray.700'),\n    }}\n    href={'#'}>\n    {children}\n  </Link>\n);\n\nexport default function Navbar() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n          <IconButton\n            size={'md'}\n            icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n            aria-label={'Open Menu'}\n            display={{ md: 'none' }}\n            onClick={isOpen ? onClose : onOpen}\n          />\n          <HStack spacing={8} alignItems={'center'}>\n            <Box>Logo</Box>\n            <HStack\n              as={'nav'}\n              spacing={4}\n              display={{ base: 'none', md: 'flex' }}>\n              {Links.map((link) => (\n                <NavLink key={link}>{link}</NavLink>\n              ))}\n            </HStack>\n          </HStack>\n          <Flex alignItems={'center'}>\n            <Button\n              variant={'solid'}\n              colorScheme={'teal'}\n              size={'sm'}\n              mr={4}\n              leftIcon={<AddIcon />}>\n              Action\n            </Button>\n            <Menu>\n              <MenuButton\n                as={Button}\n                rounded={'full'}\n                variant={'link'}\n                cursor={'pointer'}\n                minW={0}>\n                <Avatar\n                  size={'sm'}\n                  src={\n                    'https://images.unsplash.com/photo-1493666438817-866a91353ca9?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\n                  }\n                />\n              </MenuButton>\n              <MenuList>\n                <MenuItem>Link 1</MenuItem>\n                <MenuItem>Link 2</MenuItem>\n                <MenuDivider />\n                <MenuItem>Link 3</MenuItem>\n              </MenuList>\n            </Menu>\n          </Flex>\n        </Flex>\n\n        {isOpen ? (\n          <Box pb={4} display={{ md: 'none' }}>\n            <Stack as={'nav'} spacing={4}>\n              {Links.map((link) => (\n                <NavLink key={link}>{link}</NavLink>\n              ))}\n            </Stack>\n          </Box>\n        ) : null}\n      </Box>\n\n      <Box p={4}>Main Content Here</Box>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}