{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWindowMetadata = void 0;\n\nvar window_getters_1 = require(\"@walletconnect/window-getters\");\n\nfunction getWindowMetadata() {\n  var doc;\n  var loc;\n\n  try {\n    doc = window_getters_1.getDocumentOrThrow();\n    loc = window_getters_1.getLocationOrThrow();\n  } catch (e) {\n    return null;\n  }\n\n  function getIcons() {\n    var links = doc.getElementsByTagName(\"link\");\n    var icons = [];\n\n    for (var i = 0; i < links.length; i++) {\n      var link = links[i];\n      var rel = link.getAttribute(\"rel\");\n\n      if (rel) {\n        if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n          var href = link.getAttribute(\"href\");\n\n          if (href) {\n            if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n              var absoluteHref = loc.protocol + \"//\" + loc.host;\n\n              if (href.indexOf(\"/\") === 0) {\n                absoluteHref += href;\n              } else {\n                var path = loc.pathname.split(\"/\");\n                path.pop();\n                var finalPath = path.join(\"/\");\n                absoluteHref += finalPath + \"/\" + href;\n              }\n\n              icons.push(absoluteHref);\n            } else if (href.indexOf(\"//\") === 0) {\n              var absoluteUrl = loc.protocol + href;\n              icons.push(absoluteUrl);\n            } else {\n              icons.push(href);\n            }\n          }\n        }\n      }\n    }\n\n    return icons;\n  }\n\n  function getWindowMetadataOfAny() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var metaTags = doc.getElementsByTagName(\"meta\");\n\n    var _loop = function _loop(i) {\n      var tag = metaTags[i];\n      var attributes = [\"itemprop\", \"property\", \"name\"].map(function (target) {\n        return tag.getAttribute(target);\n      }).filter(function (attr) {\n        if (attr) {\n          return args.includes(attr);\n        }\n\n        return false;\n      });\n\n      if (attributes.length && attributes) {\n        var content = tag.getAttribute(\"content\");\n\n        if (content) {\n          return {\n            v: content\n          };\n        }\n      }\n    };\n\n    for (var i = 0; i < metaTags.length; i++) {\n      var _ret = _loop(i);\n\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n\n    return \"\";\n  }\n\n  function getName() {\n    var name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n\n    if (!name) {\n      name = doc.title;\n    }\n\n    return name;\n  }\n\n  function getDescription() {\n    var description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n    return description;\n  }\n\n  var name = getName();\n  var description = getDescription();\n  var url = loc.origin;\n  var icons = getIcons();\n  var meta = {\n    description: description,\n    url: url,\n    icons: icons,\n    name: name\n  };\n  return meta;\n}\n\nexports.getWindowMetadata = getWindowMetadata;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWindowMetadata = void 0;\nconst window_getters_1 = require(\"@walletconnect/window-getters\");\nfunction getWindowMetadata() {\n    let doc;\n    let loc;\n    try {\n        doc = window_getters_1.getDocumentOrThrow();\n        loc = window_getters_1.getLocationOrThrow();\n    }\n    catch (e) {\n        return null;\n    }\n    function getIcons() {\n        const links = doc.getElementsByTagName(\"link\");\n        const icons = [];\n        for (let i = 0; i < links.length; i++) {\n            const link = links[i];\n            const rel = link.getAttribute(\"rel\");\n            if (rel) {\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n                    const href = link.getAttribute(\"href\");\n                    if (href) {\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 &&\n                            href.toLowerCase().indexOf(\"http:\") === -1 &&\n                            href.indexOf(\"//\") !== 0) {\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\n                            if (href.indexOf(\"/\") === 0) {\n                                absoluteHref += href;\n                            }\n                            else {\n                                const path = loc.pathname.split(\"/\");\n                                path.pop();\n                                const finalPath = path.join(\"/\");\n                                absoluteHref += finalPath + \"/\" + href;\n                            }\n                            icons.push(absoluteHref);\n                        }\n                        else if (href.indexOf(\"//\") === 0) {\n                            const absoluteUrl = loc.protocol + href;\n                            icons.push(absoluteUrl);\n                        }\n                        else {\n                            icons.push(href);\n                        }\n                    }\n                }\n            }\n        }\n        return icons;\n    }\n    function getWindowMetadataOfAny(...args) {\n        const metaTags = doc.getElementsByTagName(\"meta\");\n        for (let i = 0; i < metaTags.length; i++) {\n            const tag = metaTags[i];\n            const attributes = [\"itemprop\", \"property\", \"name\"]\n                .map((target) => tag.getAttribute(target))\n                .filter((attr) => {\n                if (attr) {\n                    return args.includes(attr);\n                }\n                return false;\n            });\n            if (attributes.length && attributes) {\n                const content = tag.getAttribute(\"content\");\n                if (content) {\n                    return content;\n                }\n            }\n        }\n        return \"\";\n    }\n    function getName() {\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n        if (!name) {\n            name = doc.title;\n        }\n        return name;\n    }\n    function getDescription() {\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n        return description;\n    }\n    const name = getName();\n    const description = getDescription();\n    const url = loc.origin;\n    const icons = getIcons();\n    const meta = {\n        description,\n        url,\n        icons,\n        name,\n    };\n    return meta;\n}\nexports.getWindowMetadata = getWindowMetadata;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}