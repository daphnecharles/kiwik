{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar token = require('../token.js');\n\nvar encode$1 = require('../encode.js');\n\nvar common = require('../common.js');\n\nvar byteUtils = require('../byte-utils.js');\n\nvar JSONEncoder = /*#__PURE__*/function (_Array) {\n  _inherits(JSONEncoder, _Array);\n\n  var _super = _createSuper(JSONEncoder);\n\n  function JSONEncoder() {\n    var _this;\n\n    _classCallCheck(this, JSONEncoder);\n\n    _this = _super.call(this);\n    _this.inRecursive = [];\n    return _this;\n  }\n\n  _createClass(JSONEncoder, [{\n    key: \"prefix\",\n    value: function prefix(buf) {\n      var recurs = this.inRecursive[this.inRecursive.length - 1];\n\n      if (recurs) {\n        if (recurs.type === token.Type.array) {\n          recurs.elements++;\n\n          if (recurs.elements !== 1) {\n            buf.push([44]);\n          }\n        }\n\n        if (recurs.type === token.Type.map) {\n          recurs.elements++;\n\n          if (recurs.elements !== 1) {\n            if (recurs.elements % 2 === 1) {\n              buf.push([44]);\n            } else {\n              buf.push([58]);\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: token.Type.uint.major,\n    value: function value(buf, token) {\n      this.prefix(buf);\n      var is = String(token.value);\n      var isa = [];\n\n      for (var i = 0; i < is.length; i++) {\n        isa[i] = is.charCodeAt(i);\n      }\n\n      buf.push(isa);\n    }\n  }, {\n    key: token.Type.negint.major,\n    value: function value(buf, token$1) {\n      this[token.Type.uint.major](buf, token$1);\n    }\n  }, {\n    key: token.Type.bytes.major,\n    value: function value(_buf, _token) {\n      throw new Error(\"\".concat(common.encodeErrPrefix, \" unsupported type: Uint8Array\"));\n    }\n  }, {\n    key: token.Type.string.major,\n    value: function value(buf, token) {\n      this.prefix(buf);\n      var byts = byteUtils.fromString(JSON.stringify(token.value));\n      buf.push(byts.length > 32 ? byteUtils.asU8A(byts) : byts);\n    }\n  }, {\n    key: token.Type.array.major,\n    value: function value(buf, _token) {\n      this.prefix(buf);\n      this.inRecursive.push({\n        type: token.Type.array,\n        elements: 0\n      });\n      buf.push([91]);\n    }\n  }, {\n    key: token.Type.map.major,\n    value: function value(buf, _token) {\n      this.prefix(buf);\n      this.inRecursive.push({\n        type: token.Type.map,\n        elements: 0\n      });\n      buf.push([123]);\n    }\n  }, {\n    key: token.Type.tag.major,\n    value: function value(_buf, _token) {}\n  }, {\n    key: token.Type.float.major,\n    value: function value(buf, token$1) {\n      if (token$1.type.name === 'break') {\n        var recurs = this.inRecursive.pop();\n\n        if (recurs) {\n          if (recurs.type === token.Type.array) {\n            buf.push([93]);\n          } else if (recurs.type === token.Type.map) {\n            buf.push([125]);\n          } else {\n            throw new Error('Unexpected recursive type; this should not happen!');\n          }\n\n          return;\n        }\n\n        throw new Error('Unexpected break; this should not happen!');\n      }\n\n      if (token$1.value === undefined) {\n        throw new Error(\"\".concat(common.encodeErrPrefix, \" unsupported type: undefined\"));\n      }\n\n      this.prefix(buf);\n\n      if (token$1.type.name === 'true') {\n        buf.push([116, 114, 117, 101]);\n        return;\n      } else if (token$1.type.name === 'false') {\n        buf.push([102, 97, 108, 115, 101]);\n        return;\n      } else if (token$1.type.name === 'null') {\n        buf.push([110, 117, 108, 108]);\n        return;\n      }\n\n      var is = String(token$1.value);\n      var isa = [];\n      var dp = false;\n\n      for (var i = 0; i < is.length; i++) {\n        isa[i] = is.charCodeAt(i);\n\n        if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n          dp = true;\n        }\n      }\n\n      if (!dp) {\n        isa.push(46);\n        isa.push(48);\n      }\n\n      buf.push(isa);\n    }\n  }]);\n\n  return JSONEncoder;\n}( /*#__PURE__*/_wrapNativeSuper(Array));\n\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(\"\".concat(common.encodeErrPrefix, \" complex map keys are not supported\"));\n  }\n\n  var keyToken1 = e1[0];\n  var keyToken2 = e2[0];\n\n  if (keyToken1.type !== token.Type.string || keyToken2.type !== token.Type.string) {\n    throw new Error(\"\".concat(common.encodeErrPrefix, \" non-string map keys are not supported\"));\n  }\n\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n\n  throw new Error(\"\".concat(common.encodeErrPrefix, \" unexpected duplicate map keys, this is not supported\"));\n}\n\nvar defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter: mapSorter\n};\n\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encode$1.encodeCustom(data, new JSONEncoder(), options);\n}\n\nexports.encode = encode;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/cborg/cjs/lib/json/encode.js"],"names":["Object","defineProperty","exports","value","token","require","encode$1","common","byteUtils","JSONEncoder","inRecursive","buf","recurs","length","type","Type","array","elements","push","map","uint","major","prefix","is","String","isa","i","charCodeAt","negint","token$1","bytes","_buf","_token","Error","encodeErrPrefix","string","byts","fromString","JSON","stringify","asU8A","tag","float","name","pop","undefined","dp","Array","mapSorter","e1","e2","isArray","keyToken1","keyToken2","defaultEncodeOptions","addBreakTokens","encode","data","options","assign","encodeCustom"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar token = require('../token.js');\nvar encode$1 = require('../encode.js');\nvar common = require('../common.js');\nvar byteUtils = require('../byte-utils.js');\n\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === token.Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === token.Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [token.Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [token.Type.negint.major](buf, token$1) {\n    this[token.Type.uint.major](buf, token$1);\n  }\n  [token.Type.bytes.major](_buf, _token) {\n    throw new Error(`${ common.encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [token.Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = byteUtils.fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? byteUtils.asU8A(byts) : byts);\n  }\n  [token.Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: token.Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [token.Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: token.Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [token.Type.tag.major](_buf, _token) {\n  }\n  [token.Type.float.major](buf, token$1) {\n    if (token$1.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === token.Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === token.Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token$1.value === undefined) {\n      throw new Error(`${ common.encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token$1.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token$1.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token$1.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token$1.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ common.encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== token.Type.string || keyToken2.type !== token.Type.string) {\n    throw new Error(`${ common.encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ common.encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encode$1.encodeCustom(data, new JSONEncoder(), options);\n}\n\nexports.encode = encode;\n"]},"metadata":{},"sourceType":"script"}