{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar token = require('./token.js');\n\nvar _0uint = require('./0uint.js');\n\nvar common = require('./common.js');\n\nfunction toToken(_data, _pos, prefix, length) {\n  return new token.Token(token.Type.array, length, prefix);\n}\n\nfunction decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\n\nfunction decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint.readUint8(data, pos + 1, options));\n}\n\nfunction decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint.readUint16(data, pos + 1, options));\n}\n\nfunction decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint.readUint32(data, pos + 1, options));\n}\n\nfunction decodeArray64(data, pos, _minor, options) {\n  var l = _0uint.readUint64(data, pos + 1, options);\n\n  if (typeof l === 'bigint') {\n    throw new Error(\"\".concat(common.decodeErrPrefix, \" 64-bit integer array lengths not supported\"));\n  }\n\n  return toToken(data, pos, 9, l);\n}\n\nfunction decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(\"\".concat(common.decodeErrPrefix, \" indefinite length items not allowed\"));\n  }\n\n  return toToken(data, pos, 1, Infinity);\n}\n\nfunction encodeArray(buf, token$1) {\n  _0uint.encodeUintValue(buf, token.Type.array.majorEncoded, token$1.value);\n}\n\nencodeArray.compareTokens = _0uint.encodeUint.compareTokens;\nexports.decodeArray16 = decodeArray16;\nexports.decodeArray32 = decodeArray32;\nexports.decodeArray64 = decodeArray64;\nexports.decodeArray8 = decodeArray8;\nexports.decodeArrayCompact = decodeArrayCompact;\nexports.decodeArrayIndefinite = decodeArrayIndefinite;\nexports.encodeArray = encodeArray;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/cborg/cjs/lib/4array.js"],"names":["Object","defineProperty","exports","value","token","require","_0uint","common","toToken","_data","_pos","prefix","length","Token","Type","array","decodeArrayCompact","data","pos","minor","_options","decodeArray8","_minor","options","readUint8","decodeArray16","readUint16","decodeArray32","readUint32","decodeArray64","l","readUint64","Error","decodeErrPrefix","decodeArrayIndefinite","allowIndefinite","Infinity","encodeArray","buf","token$1","encodeUintValue","majorEncoded","compareTokens","encodeUint"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar token = require('./token.js');\nvar _0uint = require('./0uint.js');\nvar common = require('./common.js');\n\nfunction toToken(_data, _pos, prefix, length) {\n  return new token.Token(token.Type.array, length, prefix);\n}\nfunction decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nfunction decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint.readUint8(data, pos + 1, options));\n}\nfunction decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint.readUint16(data, pos + 1, options));\n}\nfunction decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint.readUint32(data, pos + 1, options));\n}\nfunction decodeArray64(data, pos, _minor, options) {\n  const l = _0uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ common.decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ common.decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nfunction encodeArray(buf, token$1) {\n  _0uint.encodeUintValue(buf, token.Type.array.majorEncoded, token$1.value);\n}\nencodeArray.compareTokens = _0uint.encodeUint.compareTokens;\n\nexports.decodeArray16 = decodeArray16;\nexports.decodeArray32 = decodeArray32;\nexports.decodeArray64 = decodeArray64;\nexports.decodeArray8 = decodeArray8;\nexports.decodeArrayCompact = decodeArrayCompact;\nexports.decodeArrayIndefinite = decodeArrayIndefinite;\nexports.encodeArray = encodeArray;\n"]},"metadata":{},"sourceType":"script"}