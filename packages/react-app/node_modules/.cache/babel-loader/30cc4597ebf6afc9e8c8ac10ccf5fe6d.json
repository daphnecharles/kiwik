{"ast":null,"code":"import BN from \"bn.js\";\nimport * as encoding from \"@walletconnect/encoding\";\nexport function convertArrayBufferToBuffer(arrBuf) {\n  return encoding.arrayToBuffer(new Uint8Array(arrBuf));\n}\nexport function convertArrayBufferToUtf8(arrBuf) {\n  return encoding.arrayToUtf8(new Uint8Array(arrBuf));\n}\nexport function convertArrayBufferToHex(arrBuf, noPrefix) {\n  return encoding.arrayToHex(new Uint8Array(arrBuf), !noPrefix);\n}\nexport function convertArrayBufferToNumber(arrBuf) {\n  return encoding.arrayToNumber(new Uint8Array(arrBuf));\n}\nexport function concatArrayBuffers() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return encoding.hexToArray(args.map(function (b) {\n    return encoding.arrayToHex(new Uint8Array(b));\n  }).join(\"\")).buffer;\n}\nexport function convertBufferToArrayBuffer(buf) {\n  return encoding.bufferToArray(buf).buffer;\n}\nexport function convertBufferToUtf8(buf) {\n  return encoding.bufferToUtf8(buf);\n}\nexport function convertBufferToHex(buf, noPrefix) {\n  return encoding.bufferToHex(buf, !noPrefix);\n}\nexport function convertBufferToNumber(buf) {\n  return encoding.bufferToNumber(buf);\n}\nexport function concatBuffers() {\n  return encoding.concatBuffers.apply(encoding, arguments);\n}\nexport function convertUtf8ToArrayBuffer(utf8) {\n  return encoding.utf8ToArray(utf8).buffer;\n}\nexport function convertUtf8ToBuffer(utf8) {\n  return encoding.utf8ToBuffer(utf8);\n}\nexport function convertUtf8ToHex(utf8, noPrefix) {\n  return encoding.utf8ToHex(utf8, !noPrefix);\n}\nexport function convertUtf8ToNumber(utf8) {\n  return new BN(utf8, 10).toNumber();\n}\nexport function convertHexToBuffer(hex) {\n  return encoding.hexToBuffer(hex);\n}\nexport function convertHexToArrayBuffer(hex) {\n  return encoding.hexToArray(hex).buffer;\n}\nexport function convertHexToUtf8(hex) {\n  return encoding.hexToUtf8(hex);\n}\nexport function convertHexToNumber(hex) {\n  return new BN(encoding.removeHexPrefix(hex), \"hex\").toNumber();\n}\nexport function convertNumberToBuffer(num) {\n  return encoding.numberToBuffer(num);\n}\nexport function convertNumberToArrayBuffer(num) {\n  return encoding.numberToArray(num).buffer;\n}\nexport function convertNumberToUtf8(num) {\n  return new BN(num).toString();\n}\nexport function convertNumberToHex(num, noPrefix) {\n  var hex = encoding.removeHexPrefix(encoding.sanitizeHex(new BN(num).toString(16)));\n  return noPrefix ? hex : encoding.addHexPrefix(hex);\n}","map":{"version":3,"sources":["../../src/encoding.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import BN from \"bn.js\";\nimport * as encoding from \"@walletconnect/encoding\";\nexport function convertArrayBufferToBuffer(arrBuf) {\n    return encoding.arrayToBuffer(new Uint8Array(arrBuf));\n}\nexport function convertArrayBufferToUtf8(arrBuf) {\n    return encoding.arrayToUtf8(new Uint8Array(arrBuf));\n}\nexport function convertArrayBufferToHex(arrBuf, noPrefix) {\n    return encoding.arrayToHex(new Uint8Array(arrBuf), !noPrefix);\n}\nexport function convertArrayBufferToNumber(arrBuf) {\n    return encoding.arrayToNumber(new Uint8Array(arrBuf));\n}\nexport function concatArrayBuffers(...args) {\n    return encoding.hexToArray(args.map(b => encoding.arrayToHex(new Uint8Array(b))).join(\"\")).buffer;\n}\nexport function convertBufferToArrayBuffer(buf) {\n    return encoding.bufferToArray(buf).buffer;\n}\nexport function convertBufferToUtf8(buf) {\n    return encoding.bufferToUtf8(buf);\n}\nexport function convertBufferToHex(buf, noPrefix) {\n    return encoding.bufferToHex(buf, !noPrefix);\n}\nexport function convertBufferToNumber(buf) {\n    return encoding.bufferToNumber(buf);\n}\nexport function concatBuffers(...args) {\n    return encoding.concatBuffers(...args);\n}\nexport function convertUtf8ToArrayBuffer(utf8) {\n    return encoding.utf8ToArray(utf8).buffer;\n}\nexport function convertUtf8ToBuffer(utf8) {\n    return encoding.utf8ToBuffer(utf8);\n}\nexport function convertUtf8ToHex(utf8, noPrefix) {\n    return encoding.utf8ToHex(utf8, !noPrefix);\n}\nexport function convertUtf8ToNumber(utf8) {\n    return new BN(utf8, 10).toNumber();\n}\nexport function convertHexToBuffer(hex) {\n    return encoding.hexToBuffer(hex);\n}\nexport function convertHexToArrayBuffer(hex) {\n    return encoding.hexToArray(hex).buffer;\n}\nexport function convertHexToUtf8(hex) {\n    return encoding.hexToUtf8(hex);\n}\nexport function convertHexToNumber(hex) {\n    return new BN(encoding.removeHexPrefix(hex), \"hex\").toNumber();\n}\nexport function convertNumberToBuffer(num) {\n    return encoding.numberToBuffer(num);\n}\nexport function convertNumberToArrayBuffer(num) {\n    return encoding.numberToArray(num).buffer;\n}\nexport function convertNumberToUtf8(num) {\n    return new BN(num).toString();\n}\nexport function convertNumberToHex(num, noPrefix) {\n    const hex = encoding.removeHexPrefix(encoding.sanitizeHex(new BN(num).toString(16)));\n    return noPrefix ? hex : encoding.addHexPrefix(hex);\n}\n//# sourceMappingURL=encoding.js.map"]},"metadata":{},"sourceType":"module"}