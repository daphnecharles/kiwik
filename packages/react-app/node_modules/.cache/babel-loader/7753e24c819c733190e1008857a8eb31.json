{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport React from 'react';\nimport Argument from './Argument';\nimport TypeLink from './TypeLink';\n\nvar SearchResults = function (_super) {\n  __extends(SearchResults, _super);\n\n  function SearchResults() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SearchResults.prototype.shouldComponentUpdate = function (nextProps) {\n    return this.props.schema !== nextProps.schema || this.props.searchValue !== nextProps.searchValue;\n  };\n\n  SearchResults.prototype.render = function () {\n    var e_1, _a;\n\n    var searchValue = this.props.searchValue;\n    var withinType = this.props.withinType;\n    var schema = this.props.schema;\n    var onClickType = this.props.onClickType;\n    var onClickField = this.props.onClickField;\n    var matchedWithin = [];\n    var matchedTypes = [];\n    var matchedFields = [];\n    var typeMap = schema.getTypeMap();\n    var typeNames = Object.keys(typeMap);\n\n    if (withinType) {\n      typeNames = typeNames.filter(function (n) {\n        return n !== withinType.name;\n      });\n      typeNames.unshift(withinType.name);\n    }\n\n    var _loop_1 = function _loop_1(typeName) {\n      if (matchedWithin.length + matchedTypes.length + matchedFields.length >= 100) {\n        return \"break\";\n      }\n\n      var type = typeMap[typeName];\n\n      if (withinType !== type && isMatch(typeName, searchValue)) {\n        matchedTypes.push(React.createElement(\"div\", {\n          className: \"doc-category-item\",\n          key: typeName\n        }, React.createElement(TypeLink, {\n          type: type,\n          onClick: onClickType\n        })));\n      }\n\n      if (type && 'getFields' in type) {\n        var fields_1 = type.getFields();\n        Object.keys(fields_1).forEach(function (fieldName) {\n          var field = fields_1[fieldName];\n          var matchingArgs;\n\n          if (!isMatch(fieldName, searchValue)) {\n            if ('args' in field && field.args.length) {\n              matchingArgs = field.args.filter(function (arg) {\n                return isMatch(arg.name, searchValue);\n              });\n\n              if (matchingArgs.length === 0) {\n                return;\n              }\n            } else {\n              return;\n            }\n          }\n\n          var match = React.createElement(\"div\", {\n            className: \"doc-category-item\",\n            key: typeName + '.' + fieldName\n          }, withinType !== type && [React.createElement(TypeLink, {\n            key: \"type\",\n            type: type,\n            onClick: onClickType\n          }), '.'], React.createElement(\"a\", {\n            className: \"field-name\",\n            onClick: function onClick(event) {\n              return onClickField(field, type, event);\n            }\n          }, field.name), matchingArgs && ['(', React.createElement(\"span\", {\n            key: \"args\"\n          }, matchingArgs.map(function (arg) {\n            return React.createElement(Argument, {\n              key: arg.name,\n              arg: arg,\n              onClickType: onClickType,\n              showDefaultValue: false\n            });\n          })), ')']);\n\n          if (withinType === type) {\n            matchedWithin.push(match);\n          } else {\n            matchedFields.push(match);\n          }\n        });\n      }\n    };\n\n    try {\n      for (var typeNames_1 = __values(typeNames), typeNames_1_1 = typeNames_1.next(); !typeNames_1_1.done; typeNames_1_1 = typeNames_1.next()) {\n        var typeName = typeNames_1_1.value;\n\n        var state_1 = _loop_1(typeName);\n\n        if (state_1 === \"break\") break;\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (typeNames_1_1 && !typeNames_1_1.done && (_a = typeNames_1.return)) _a.call(typeNames_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    if (matchedWithin.length + matchedTypes.length + matchedFields.length === 0) {\n      return React.createElement(\"span\", {\n        className: \"doc-alert-text\"\n      }, 'No results found.');\n    }\n\n    if (withinType && matchedTypes.length + matchedFields.length > 0) {\n      return React.createElement(\"div\", null, matchedWithin, React.createElement(\"div\", {\n        className: \"doc-category\"\n      }, React.createElement(\"div\", {\n        className: \"doc-category-title\"\n      }, 'other results'), matchedTypes, matchedFields));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"doc-search-items\"\n    }, matchedWithin, matchedTypes, matchedFields);\n  };\n\n  return SearchResults;\n}(React.Component);\n\nexport default SearchResults;\n\nfunction isMatch(sourceText, searchValue) {\n  try {\n    var escaped = searchValue.replace(/[^_0-9A-Za-z]/g, function (ch) {\n      return '\\\\' + ch;\n    });\n    return sourceText.search(new RegExp(escaped, 'i')) !== -1;\n  } catch (e) {\n    return sourceText.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;\n  }\n}","map":{"version":3,"sources":["../../../src/components/DocExplorer/SearchResults.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nimport React from 'react';\nimport Argument from './Argument';\nimport TypeLink from './TypeLink';\nvar SearchResults = (function (_super) {\n    __extends(SearchResults, _super);\n    function SearchResults() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SearchResults.prototype.shouldComponentUpdate = function (nextProps) {\n        return (this.props.schema !== nextProps.schema ||\n            this.props.searchValue !== nextProps.searchValue);\n    };\n    SearchResults.prototype.render = function () {\n        var e_1, _a;\n        var searchValue = this.props.searchValue;\n        var withinType = this.props.withinType;\n        var schema = this.props.schema;\n        var onClickType = this.props.onClickType;\n        var onClickField = this.props.onClickField;\n        var matchedWithin = [];\n        var matchedTypes = [];\n        var matchedFields = [];\n        var typeMap = schema.getTypeMap();\n        var typeNames = Object.keys(typeMap);\n        if (withinType) {\n            typeNames = typeNames.filter(function (n) { return n !== withinType.name; });\n            typeNames.unshift(withinType.name);\n        }\n        var _loop_1 = function (typeName) {\n            if (matchedWithin.length + matchedTypes.length + matchedFields.length >=\n                100) {\n                return \"break\";\n            }\n            var type = typeMap[typeName];\n            if (withinType !== type && isMatch(typeName, searchValue)) {\n                matchedTypes.push(React.createElement(\"div\", { className: \"doc-category-item\", key: typeName },\n                    React.createElement(TypeLink, { type: type, onClick: onClickType })));\n            }\n            if (type && 'getFields' in type) {\n                var fields_1 = type.getFields();\n                Object.keys(fields_1).forEach(function (fieldName) {\n                    var field = fields_1[fieldName];\n                    var matchingArgs;\n                    if (!isMatch(fieldName, searchValue)) {\n                        if ('args' in field && field.args.length) {\n                            matchingArgs = field.args.filter(function (arg) {\n                                return isMatch(arg.name, searchValue);\n                            });\n                            if (matchingArgs.length === 0) {\n                                return;\n                            }\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    var match = (React.createElement(\"div\", { className: \"doc-category-item\", key: typeName + '.' + fieldName },\n                        withinType !== type && [\n                            React.createElement(TypeLink, { key: \"type\", type: type, onClick: onClickType }),\n                            '.',\n                        ],\n                        React.createElement(\"a\", { className: \"field-name\", onClick: function (event) { return onClickField(field, type, event); } }, field.name),\n                        matchingArgs && [\n                            '(',\n                            React.createElement(\"span\", { key: \"args\" }, matchingArgs.map(function (arg) { return (React.createElement(Argument, { key: arg.name, arg: arg, onClickType: onClickType, showDefaultValue: false })); })),\n                            ')',\n                        ]));\n                    if (withinType === type) {\n                        matchedWithin.push(match);\n                    }\n                    else {\n                        matchedFields.push(match);\n                    }\n                });\n            }\n        };\n        try {\n            for (var typeNames_1 = __values(typeNames), typeNames_1_1 = typeNames_1.next(); !typeNames_1_1.done; typeNames_1_1 = typeNames_1.next()) {\n                var typeName = typeNames_1_1.value;\n                var state_1 = _loop_1(typeName);\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (typeNames_1_1 && !typeNames_1_1.done && (_a = typeNames_1.return)) _a.call(typeNames_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (matchedWithin.length + matchedTypes.length + matchedFields.length ===\n            0) {\n            return React.createElement(\"span\", { className: \"doc-alert-text\" }, 'No results found.');\n        }\n        if (withinType && matchedTypes.length + matchedFields.length > 0) {\n            return (React.createElement(\"div\", null,\n                matchedWithin,\n                React.createElement(\"div\", { className: \"doc-category\" },\n                    React.createElement(\"div\", { className: \"doc-category-title\" }, 'other results'),\n                    matchedTypes,\n                    matchedFields)));\n        }\n        return (React.createElement(\"div\", { className: \"doc-search-items\" },\n            matchedWithin,\n            matchedTypes,\n            matchedFields));\n    };\n    return SearchResults;\n}(React.Component));\nexport default SearchResults;\nfunction isMatch(sourceText, searchValue) {\n    try {\n        var escaped = searchValue.replace(/[^_0-9A-Za-z]/g, function (ch) { return '\\\\' + ch; });\n        return sourceText.search(new RegExp(escaped, 'i')) !== -1;\n    }\n    catch (e) {\n        return sourceText.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;\n    }\n}\n//# sourceMappingURL=SearchResults.js.map"]},"metadata":{},"sourceType":"module"}