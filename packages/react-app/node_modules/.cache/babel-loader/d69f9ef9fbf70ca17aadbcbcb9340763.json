{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScopedLocalStorage = void 0;\n\nvar ScopedLocalStorage = /*#__PURE__*/function () {\n  function ScopedLocalStorage(scope) {\n    _classCallCheck(this, ScopedLocalStorage);\n\n    this.scope = scope;\n  }\n\n  _createClass(ScopedLocalStorage, [{\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      localStorage.setItem(this.scopedKey(key), value);\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      return localStorage.getItem(this.scopedKey(key));\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key) {\n      localStorage.removeItem(this.scopedKey(key));\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var prefix = this.scopedKey(\"\");\n      var keysToRemove = [];\n\n      for (var i = 0; i < localStorage.length; i++) {\n        var key = localStorage.key(i);\n\n        if (typeof key === \"string\" && key.startsWith(prefix)) {\n          keysToRemove.push(key);\n        }\n      }\n\n      keysToRemove.forEach(function (key) {\n        return localStorage.removeItem(key);\n      });\n    }\n  }, {\n    key: \"scopedKey\",\n    value: function scopedKey(key) {\n      return \"\".concat(this.scope, \":\").concat(key);\n    }\n  }]);\n\n  return ScopedLocalStorage;\n}();\n\nexports.ScopedLocalStorage = ScopedLocalStorage;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/walletlink/dist/lib/ScopedLocalStorage.js"],"names":["Object","defineProperty","exports","value","ScopedLocalStorage","scope","key","localStorage","setItem","scopedKey","getItem","removeItem","prefix","keysToRemove","i","length","startsWith","push","forEach"],"mappings":"AAAA,a,CACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;IACMA,kB;AACF,8BAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AACH;;;;WACD,iBAAQC,GAAR,EAAaH,KAAb,EAAoB;AAChBI,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAAKC,SAAL,CAAeH,GAAf,CAArB,EAA0CH,KAA1C;AACH;;;WACD,iBAAQG,GAAR,EAAa;AACT,aAAOC,YAAY,CAACG,OAAb,CAAqB,KAAKD,SAAL,CAAeH,GAAf,CAArB,CAAP;AACH;;;WACD,oBAAWA,GAAX,EAAgB;AACZC,MAAAA,YAAY,CAACI,UAAb,CAAwB,KAAKF,SAAL,CAAeH,GAAf,CAAxB;AACH;;;WACD,iBAAQ;AACJ,UAAMM,MAAM,GAAG,KAAKH,SAAL,CAAe,EAAf,CAAf;AACA,UAAMI,YAAY,GAAG,EAArB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,YAAY,CAACQ,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,YAAMR,GAAG,GAAGC,YAAY,CAACD,GAAb,CAAiBQ,CAAjB,CAAZ;;AACA,YAAI,OAAOR,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACU,UAAJ,CAAeJ,MAAf,CAA/B,EAAuD;AACnDC,UAAAA,YAAY,CAACI,IAAb,CAAkBX,GAAlB;AACH;AACJ;;AACDO,MAAAA,YAAY,CAACK,OAAb,CAAqB,UAAAZ,GAAG;AAAA,eAAIC,YAAY,CAACI,UAAb,CAAwBL,GAAxB,CAAJ;AAAA,OAAxB;AACH;;;WACD,mBAAUA,GAAV,EAAe;AACX,uBAAU,KAAKD,KAAf,cAAwBC,GAAxB;AACH;;;;;;AAELJ,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScopedLocalStorage = void 0;\nclass ScopedLocalStorage {\n    constructor(scope) {\n        this.scope = scope;\n    }\n    setItem(key, value) {\n        localStorage.setItem(this.scopedKey(key), value);\n    }\n    getItem(key) {\n        return localStorage.getItem(this.scopedKey(key));\n    }\n    removeItem(key) {\n        localStorage.removeItem(this.scopedKey(key));\n    }\n    clear() {\n        const prefix = this.scopedKey(\"\");\n        const keysToRemove = [];\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            if (typeof key === \"string\" && key.startsWith(prefix)) {\n                keysToRemove.push(key);\n            }\n        }\n        keysToRemove.forEach(key => localStorage.removeItem(key));\n    }\n    scopedKey(key) {\n        return `${this.scope}:${key}`;\n    }\n}\nexports.ScopedLocalStorage = ScopedLocalStorage;\n"]},"metadata":{},"sourceType":"script"}