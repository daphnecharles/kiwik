{"ast":null,"code":"import _classCallCheck from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isWalletConnectSession, getLocal, setLocal, removeLocal } from \"@walletconnect/utils\";\n\nvar SessionStorage = /*#__PURE__*/function () {\n  function SessionStorage() {\n    var storageId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"walletconnect\";\n\n    _classCallCheck(this, SessionStorage);\n\n    this.storageId = storageId;\n  }\n\n  _createClass(SessionStorage, [{\n    key: \"getSession\",\n    value: function getSession() {\n      var session = null;\n      var json = getLocal(this.storageId);\n\n      if (json && isWalletConnectSession(json)) {\n        session = json;\n      }\n\n      return session;\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(session) {\n      setLocal(this.storageId, session);\n      return session;\n    }\n  }, {\n    key: \"removeSession\",\n    value: function removeSession() {\n      removeLocal(this.storageId);\n    }\n  }]);\n\n  return SessionStorage;\n}();\n\nexport default SessionStorage;","map":{"version":3,"sources":["../../src/storage.ts"],"names":[],"mappings":";;AACA,SAAS,sBAAT,EAAiC,QAAjC,EAA2C,QAA3C,EAAqD,WAArD,QAAwE,sBAAxE;;IAEM,c;AACJ,4BAAsD;AAAA,QAAnC,SAAmC,uEAAf,eAAe;;AAAA;;AAAnC,SAAA,SAAA,GAAA,SAAA;AAAuC;;;;WAEnD,sBAAU;AACf,UAAI,OAAO,GAAiC,IAA5C;AACA,UAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,SAAN,CAArB;;AACA,UAAI,IAAI,IAAI,sBAAsB,CAAC,IAAD,CAAlC,EAA0C;AACxC,QAAA,OAAO,GAAG,IAAV;AACD;;AACD,aAAO,OAAP;AACD;;;WAEM,oBAAW,OAAX,EAAyC;AAC9C,MAAA,QAAQ,CAAC,KAAK,SAAN,EAAiB,OAAjB,CAAR;AACA,aAAO,OAAP;AACD;;;WAEM,yBAAa;AAClB,MAAA,WAAW,CAAC,KAAK,SAAN,CAAX;AACD;;;;;;AAGH,eAAe,cAAf","sourceRoot":"","sourcesContent":["import { isWalletConnectSession, getLocal, setLocal, removeLocal } from \"@walletconnect/utils\";\nclass SessionStorage {\n    constructor(storageId = \"walletconnect\") {\n        this.storageId = storageId;\n    }\n    getSession() {\n        let session = null;\n        const json = getLocal(this.storageId);\n        if (json && isWalletConnectSession(json)) {\n            session = json;\n        }\n        return session;\n    }\n    setSession(session) {\n        setLocal(this.storageId, session);\n        return session;\n    }\n    removeSession() {\n        removeLocal(this.storageId);\n    }\n}\nexport default SessionStorage;\n//# sourceMappingURL=storage.js.map"]},"metadata":{},"sourceType":"module"}