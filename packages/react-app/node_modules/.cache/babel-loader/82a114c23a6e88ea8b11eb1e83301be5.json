{"ast":null,"code":"import _classCallCheck from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { StreamCipher } from './cipher-core.js'; // Reusable objects\n\nvar S = [];\nvar C_ = [];\nvar G = [];\n\nfunction nextState() {\n  // Shortcuts\n  var X = this._X;\n  var C = this._C; // Save old counter values\n\n  for (var i = 0; i < 8; i += 1) {\n    C_[i] = C[i];\n  } // Calculate new counter values\n\n\n  C[0] = C[0] + 0x4d34d34d + this._b | 0;\n  C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;\n  C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;\n  C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;\n  C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;\n  C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;\n  C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;\n  C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;\n  this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0; // Calculate the g-values\n\n  for (var _i = 0; _i < 8; _i += 1) {\n    var gx = X[_i] + C[_i]; // Construct high and low argument for squaring\n\n    var ga = gx & 0xffff;\n    var gb = gx >>> 16; // Calculate high and low result of squaring\n\n    var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;\n    var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0); // High XOR low\n\n    G[_i] = gh ^ gl;\n  } // Calculate new state values\n\n\n  X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;\n  X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;\n  X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;\n  X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;\n  X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;\n  X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;\n  X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;\n  X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;\n}\n/**\n * Rabbit stream cipher algorithm.\n *\n * This is a legacy version that neglected to convert the key to little-endian.\n * This error doesn't affect the cipher's security,\n * but it does affect its compatibility with other implementations.\n */\n\n\nexport var RabbitLegacyAlgo = /*#__PURE__*/function (_StreamCipher) {\n  _inherits(RabbitLegacyAlgo, _StreamCipher);\n\n  var _super = _createSuper(RabbitLegacyAlgo);\n\n  function RabbitLegacyAlgo() {\n    var _this;\n\n    _classCallCheck(this, RabbitLegacyAlgo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.blockSize = 128 / 32;\n    _this.ivSize = 64 / 32;\n    return _this;\n  }\n\n  _createClass(RabbitLegacyAlgo, [{\n    key: \"_doReset\",\n    value: function _doReset() {\n      // Shortcuts\n      var K = this._key.words;\n      var iv = this.cfg.iv; // Generate initial state values\n\n      this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];\n      var X = this._X; // Generate initial counter values\n\n      this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];\n      var C = this._C; // Carry bit\n\n      this._b = 0; // Iterate the system four times\n\n      for (var i = 0; i < 4; i += 1) {\n        nextState.call(this);\n      } // Modify the counters\n\n\n      for (var _i2 = 0; _i2 < 8; _i2 += 1) {\n        C[_i2] ^= X[_i2 + 4 & 7];\n      } // IV setup\n\n\n      if (iv) {\n        // Shortcuts\n        var IV = iv.words;\n        var IV_0 = IV[0];\n        var IV_1 = IV[1]; // Generate four subvectors\n\n        var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;\n        var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;\n        var i1 = i0 >>> 16 | i2 & 0xffff0000;\n        var i3 = i2 << 16 | i0 & 0x0000ffff; // Modify counter values\n\n        C[0] ^= i0;\n        C[1] ^= i1;\n        C[2] ^= i2;\n        C[3] ^= i3;\n        C[4] ^= i0;\n        C[5] ^= i1;\n        C[6] ^= i2;\n        C[7] ^= i3; // Iterate the system four times\n\n        for (var _i3 = 0; _i3 < 4; _i3 += 1) {\n          nextState.call(this);\n        }\n      }\n    }\n  }, {\n    key: \"_doProcessBlock\",\n    value: function _doProcessBlock(M, offset) {\n      var _M = M; // Shortcut\n\n      var X = this._X; // Iterate the system\n\n      nextState.call(this); // Generate four keystream words\n\n      S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;\n      S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;\n      S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;\n      S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;\n\n      for (var i = 0; i < 4; i += 1) {\n        // Swap endian\n        S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00; // Encrypt\n\n        _M[offset + i] ^= S[i];\n      }\n    }\n  }]);\n\n  return RabbitLegacyAlgo;\n}(StreamCipher);\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n */\n\nexport var RabbitLegacy = StreamCipher._createHelper(RabbitLegacyAlgo);","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/crypto-es/lib/rabbit-legacy.js"],"names":["StreamCipher","S","C_","G","nextState","X","_X","C","_C","i","_b","gx","ga","gb","gh","gl","RabbitLegacyAlgo","args","blockSize","ivSize","K","_key","words","iv","cfg","call","IV","IV_0","IV_1","i0","i2","i1","i3","M","offset","_M","RabbitLegacy","_createHelper"],"mappings":"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","sourcesContent":["import {\n  StreamCipher,\n} from './cipher-core.js';\n\n// Reusable objects\nconst S = [];\nconst C_ = [];\nconst G = [];\n\nfunction nextState() {\n  // Shortcuts\n  const X = this._X;\n  const C = this._C;\n\n  // Save old counter values\n  for (let i = 0; i < 8; i += 1) {\n    C_[i] = C[i];\n  }\n\n  // Calculate new counter values\n  C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n  C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n  C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n  C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n  C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n  C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n  C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n  C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n  this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n  // Calculate the g-values\n  for (let i = 0; i < 8; i += 1) {\n    const gx = X[i] + C[i];\n\n    // Construct high and low argument for squaring\n    const ga = gx & 0xffff;\n    const gb = gx >>> 16;\n\n    // Calculate high and low result of squaring\n    const gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n    const gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n    // High XOR low\n    G[i] = gh ^ gl;\n  }\n\n  // Calculate new state values\n  X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n  X[1] = (G[1] + ((G[0] << 8) | (G[0] >>> 24)) + G[7]) | 0;\n  X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n  X[3] = (G[3] + ((G[2] << 8) | (G[2] >>> 24)) + G[1]) | 0;\n  X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n  X[5] = (G[5] + ((G[4] << 8) | (G[4] >>> 24)) + G[3]) | 0;\n  X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n  X[7] = (G[7] + ((G[6] << 8) | (G[6] >>> 24)) + G[5]) | 0;\n}\n\n/**\n * Rabbit stream cipher algorithm.\n *\n * This is a legacy version that neglected to convert the key to little-endian.\n * This error doesn't affect the cipher's security,\n * but it does affect its compatibility with other implementations.\n */\nexport class RabbitLegacyAlgo extends StreamCipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 128 / 32;\n    this.ivSize = 64 / 32;\n  }\n\n  _doReset() {\n    // Shortcuts\n    const K = this._key.words;\n    const { iv } = this.cfg;\n\n    // Generate initial state values\n    this._X = [\n      K[0], (K[3] << 16) | (K[2] >>> 16),\n      K[1], (K[0] << 16) | (K[3] >>> 16),\n      K[2], (K[1] << 16) | (K[0] >>> 16),\n      K[3], (K[2] << 16) | (K[1] >>> 16),\n    ];\n    const X = this._X;\n\n    // Generate initial counter values\n    this._C = [\n      (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n      (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n      (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n      (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff),\n    ];\n    const C = this._C;\n\n    // Carry bit\n    this._b = 0;\n\n    // Iterate the system four times\n    for (let i = 0; i < 4; i += 1) {\n      nextState.call(this);\n    }\n\n    // Modify the counters\n    for (let i = 0; i < 8; i += 1) {\n      C[i] ^= X[(i + 4) & 7];\n    }\n\n    // IV setup\n    if (iv) {\n      // Shortcuts\n      const IV = iv.words;\n      const IV_0 = IV[0];\n      const IV_1 = IV[1];\n\n      // Generate four subvectors\n      const i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff)\n        | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n      const i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff)\n        | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n      const i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n      const i3 = (i2 << 16) | (i0 & 0x0000ffff);\n\n      // Modify counter values\n      C[0] ^= i0;\n      C[1] ^= i1;\n      C[2] ^= i2;\n      C[3] ^= i3;\n      C[4] ^= i0;\n      C[5] ^= i1;\n      C[6] ^= i2;\n      C[7] ^= i3;\n\n      // Iterate the system four times\n      for (let i = 0; i < 4; i += 1) {\n        nextState.call(this);\n      }\n    }\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Shortcut\n    const X = this._X;\n\n    // Iterate the system\n    nextState.call(this);\n\n    // Generate four keystream words\n    S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n    S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n    S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n    S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n    for (let i = 0; i < 4; i += 1) {\n      // Swap endian\n      S[i] = (((S[i] << 8) | (S[i] >>> 24)) & 0x00ff00ff)\n        | (((S[i] << 24) | (S[i] >>> 8)) & 0xff00ff00);\n\n      // Encrypt\n      _M[offset + i] ^= S[i];\n    }\n  }\n}\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n */\nexport const RabbitLegacy = StreamCipher._createHelper(RabbitLegacyAlgo);\n"]},"metadata":{},"sourceType":"module"}