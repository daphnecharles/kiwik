{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function (cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n    }\n\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n    }\n  });\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line) return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options,\n        cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\"); // we can reuse the built-in indicator element if its className matches the new state\n\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function (line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  } // copied from CodeMirror/src/util/dom.js\n\n\n  function classTest(cls) {\n    return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\");\n  }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(),\n        state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function () {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from;\n    state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function () {\n      updateInViewport(cm);\n    }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function () {\n      var vp = cm.getViewport();\n\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function () {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to) updateFoldInfo(cm, line, line + 1);\n  }\n});","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/codemirror/addon/fold/foldgutter.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","Init","clearGutter","state","foldGutter","options","gutter","off","onGutterClick","onChange","onViewportChange","onFold","State","parseOptions","updateInViewport","on","Pos","from","to","opts","indicatorOpen","indicatorFolded","isFolded","line","marks","findMarks","i","length","__isFold","fromPos","find","marker","spec","elt","document","createElement","className","cloneNode","updateFoldInfo","cur","minSize","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","test","pos","range","setGutterMarker","cls","RegExp","vp","getViewport","operation","folded","clear","foldCode","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}