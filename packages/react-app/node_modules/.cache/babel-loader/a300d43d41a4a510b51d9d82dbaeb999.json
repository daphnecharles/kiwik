{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar DEFAULT_PORTS = {\n  'http:': '80',\n  'https:': '443'\n};\nvar URL_REGEX = /^(https?:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nvar opaqueOriginSchemes = ['file:', 'data:'];\n/**\n * Converts a src value into an origin.\n * @param {string} src\n * @return {string} The URL's origin\n */\n\nvar _default = function _default(src) {\n  if (src && opaqueOriginSchemes.find(function (scheme) {\n    return src.startsWith(scheme);\n  })) {\n    // The origin of the child document is an opaque origin and its\n    // serialization is \"null\"\n    // https://html.spec.whatwg.org/multipage/origin.html#origin\n    return 'null';\n  } // Note that if src is undefined, then srcdoc is being used instead of src\n  // and we can follow this same logic below to get the origin of the parent,\n  // which is the origin that we will need to use.\n\n\n  var location = document.location;\n  var regexResult = URL_REGEX.exec(src);\n  var protocol;\n  var hostname;\n  var port;\n\n  if (regexResult) {\n    // It's an absolute URL. Use the parsed info.\n    // regexResult[1] will be undefined if the URL starts with //\n    protocol = regexResult[1] ? regexResult[1] : location.protocol;\n    hostname = regexResult[2];\n    port = regexResult[4];\n  } else {\n    // It's a relative path. Use the current location's info.\n    protocol = location.protocol;\n    hostname = location.hostname;\n    port = location.port;\n  } // If the port is the default for the protocol, we don't want to add it to the origin string\n  // or it won't match the message's event.origin.\n\n\n  var portSuffix = port && port !== DEFAULT_PORTS[protocol] ? \":\".concat(port) : '';\n  return \"\".concat(protocol, \"//\").concat(hostname).concat(portSuffix);\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/authereum/node_modules/penpal/lib/getOriginFromSrc.js"],"names":["Object","defineProperty","exports","value","default","DEFAULT_PORTS","URL_REGEX","opaqueOriginSchemes","_default","src","find","scheme","startsWith","location","document","regexResult","exec","protocol","hostname","port","portSuffix","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,IAAMC,aAAa,GAAG;AACpB,WAAS,IADW;AAEpB,YAAU;AAFU,CAAtB;AAIA,IAAMC,SAAS,GAAG,mCAAlB;AACA,IAAMC,mBAAmB,GAAG,CAAC,OAAD,EAAU,OAAV,CAA5B;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG,EAAI;AACpB,MAAIA,GAAG,IAAIF,mBAAmB,CAACG,IAApB,CAAyB,UAAAC,MAAM;AAAA,WAAIF,GAAG,CAACG,UAAJ,CAAeD,MAAf,CAAJ;AAAA,GAA/B,CAAX,EAAuE;AACrE;AACA;AACA;AACA,WAAO,MAAP;AACD,GANmB,CAMlB;AACF;AACA;;;AAGA,MAAME,QAAQ,GAAGC,QAAQ,CAACD,QAA1B;AACA,MAAME,WAAW,GAAGT,SAAS,CAACU,IAAV,CAAeP,GAAf,CAApB;AACA,MAAIQ,QAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,IAAJ;;AAEA,MAAIJ,WAAJ,EAAiB;AACf;AACA;AACAE,IAAAA,QAAQ,GAAGF,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAAC,CAAD,CAA5B,GAAkCF,QAAQ,CAACI,QAAtD;AACAC,IAAAA,QAAQ,GAAGH,WAAW,CAAC,CAAD,CAAtB;AACAI,IAAAA,IAAI,GAAGJ,WAAW,CAAC,CAAD,CAAlB;AACD,GAND,MAMO;AACL;AACAE,IAAAA,QAAQ,GAAGJ,QAAQ,CAACI,QAApB;AACAC,IAAAA,QAAQ,GAAGL,QAAQ,CAACK,QAApB;AACAC,IAAAA,IAAI,GAAGN,QAAQ,CAACM,IAAhB;AACD,GA5BmB,CA4BlB;AACF;;;AAGA,MAAMC,UAAU,GAAGD,IAAI,IAAIA,IAAI,KAAKd,aAAa,CAACY,QAAD,CAA9B,cAA+CE,IAA/C,IAAwD,EAA3E;AACA,mBAAUF,QAAV,eAAuBC,QAAvB,SAAkCE,UAAlC;AACD,CAlCD;;AAoCAlB,OAAO,CAACE,OAAR,GAAkBI,QAAlB;AACAa,MAAM,CAACnB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst DEFAULT_PORTS = {\n  'http:': '80',\n  'https:': '443'\n};\nconst URL_REGEX = /^(https?:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nconst opaqueOriginSchemes = ['file:', 'data:'];\n/**\n * Converts a src value into an origin.\n * @param {string} src\n * @return {string} The URL's origin\n */\n\nvar _default = src => {\n  if (src && opaqueOriginSchemes.find(scheme => src.startsWith(scheme))) {\n    // The origin of the child document is an opaque origin and its\n    // serialization is \"null\"\n    // https://html.spec.whatwg.org/multipage/origin.html#origin\n    return 'null';\n  } // Note that if src is undefined, then srcdoc is being used instead of src\n  // and we can follow this same logic below to get the origin of the parent,\n  // which is the origin that we will need to use.\n\n\n  const location = document.location;\n  const regexResult = URL_REGEX.exec(src);\n  let protocol;\n  let hostname;\n  let port;\n\n  if (regexResult) {\n    // It's an absolute URL. Use the parsed info.\n    // regexResult[1] will be undefined if the URL starts with //\n    protocol = regexResult[1] ? regexResult[1] : location.protocol;\n    hostname = regexResult[2];\n    port = regexResult[4];\n  } else {\n    // It's a relative path. Use the current location's info.\n    protocol = location.protocol;\n    hostname = location.hostname;\n    port = location.port;\n  } // If the port is the default for the protocol, we don't want to add it to the origin string\n  // or it won't match the message's event.origin.\n\n\n  const portSuffix = port && port !== DEFAULT_PORTS[protocol] ? `:${port}` : '';\n  return `${protocol}//${hostname}${portSuffix}`;\n};\n\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}