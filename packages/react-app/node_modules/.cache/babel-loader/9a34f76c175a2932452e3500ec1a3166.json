{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce(function (acc, curr) {\n      return acc + curr.length;\n    }, 0);\n  }\n\n  var output = new Uint8Array(length);\n  var offset = 0;\n\n  var _iterator = _createForOfIteratorHelper(arrays),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var arr = _step.value;\n      output.set(arr, offset);\n      offset += arr.length;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return output;\n}\n\nexports.concat = concat;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/uint8arrays/cjs/src/concat.js"],"names":["Object","defineProperty","exports","value","concat","arrays","length","reduce","acc","curr","output","Uint8Array","offset","arr","set"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;AAC9B,MAAI,CAACA,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAGD,MAAM,CAACE,MAAP,CAAc,UAACC,GAAD,EAAMC,IAAN;AAAA,aAAeD,GAAG,GAAGC,IAAI,CAACH,MAA1B;AAAA,KAAd,EAAgD,CAAhD,CAAT;AACD;;AACD,MAAMI,MAAM,GAAG,IAAIC,UAAJ,CAAeL,MAAf,CAAf;AACA,MAAIM,MAAM,GAAG,CAAb;;AAL8B,6CAMZP,MANY;AAAA;;AAAA;AAM9B,wDAA0B;AAAA,UAAfQ,GAAe;AACxBH,MAAAA,MAAM,CAACI,GAAP,CAAWD,GAAX,EAAgBD,MAAhB;AACAA,MAAAA,MAAM,IAAIC,GAAG,CAACP,MAAd;AACD;AAT6B;AAAA;AAAA;AAAA;AAAA;;AAU9B,SAAOI,MAAP;AACD;;AAEDR,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}\n\nexports.concat = concat;\n"]},"metadata":{},"sourceType":"script"}