{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar pbNodeProperties = ['Data', 'Links'];\nvar pbLinkProperties = ['Hash', 'Name', 'Tsize'];\nvar textEncoder = new TextEncoder();\n\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  var bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  var x = abuf.length;\n  var y = bbuf.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0;\n}\n\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(function (p) {\n    return !properties.includes(p);\n  });\n}\n\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    var Hash = cid.CID.asCID(link);\n\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n\n    return {\n      Hash: Hash\n    };\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n\n  var pbl = {};\n\n  if (link.Hash) {\n    var cid$1 = cid.CID.asCID(link.Hash);\n\n    try {\n      if (!cid$1) {\n        if (typeof link.Hash === 'string') {\n          cid$1 = cid.CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid$1 = cid.CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(\"Invalid DAG-PB form: \".concat(e.message));\n    }\n\n    if (cid$1) {\n      pbl.Hash = cid$1;\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n\n  return pbl;\n}\n\nfunction prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = {\n      Data: node\n    };\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n\n  var pbn = {};\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n\n  return pbn;\n}\n\nfunction validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n\n  for (var i = 0; i < node.Links.length; i++) {\n    var link = node.Links[i];\n\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\n\nfunction createNode(data) {\n  var links = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\n\nfunction createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}\n\nexports.createLink = createLink;\nexports.createNode = createNode;\nexports.prepare = prepare;\nexports.validate = validate;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/@ipld/dag-pb/cjs/src/util.js"],"names":["Object","defineProperty","exports","value","cid","require","pbNodeProperties","pbLinkProperties","textEncoder","TextEncoder","linkComparator","a","b","abuf","Name","encode","bbuf","x","length","y","i","len","Math","min","hasOnlyProperties","node","properties","keys","some","p","includes","asLink","link","asCID","Hash","CID","TypeError","Array","isArray","pbl","cid$1","parse","Uint8Array","decode","e","message","Tsize","prepare","Data","pbn","undefined","Links","map","sort","validate","createNode","data","links","createLink","name","size"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\n\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = cid.CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid$1 = cid.CID.asCID(link.Hash);\n    try {\n      if (!cid$1) {\n        if (typeof link.Hash === 'string') {\n          cid$1 = cid.CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid$1 = cid.CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid$1) {\n      pbl.Hash = cid$1;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nfunction prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nfunction validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nfunction createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nfunction createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}\n\nexports.createLink = createLink;\nexports.createNode = createNode;\nexports.prepare = prepare;\nexports.validate = validate;\n"]},"metadata":{},"sourceType":"script"}