{"ast":null,"code":"// Parse link destination\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code,\n      level,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (str.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n    pos++;\n\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n\n      if (code === 0x0A\n      /* \\n */\n      ) {\n        return result;\n      }\n\n      if (code === 0x3C\n      /* < */\n      ) {\n        return result;\n      }\n\n      if (code === 0x3E\n      /* > */\n      ) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n\n      if (code === 0x5C\n      /* \\ */\n      && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    } // no closing '>'\n\n\n    return result;\n  } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control characters\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) {\n        break;\n      }\n\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n      level++;\n\n      if (level > 32) {\n        return result;\n      }\n    }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n      if (level === 0) {\n        break;\n      }\n\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return result;\n  }\n\n  if (level !== 0) {\n    return result;\n  }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/markdown-it/lib/helpers/parse_link_destination.js"],"names":["unescapeAll","require","module","exports","parseLinkDestination","str","pos","max","code","level","lines","start","result","ok","charCodeAt","slice"],"mappings":"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","sourcesContent":["// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n"]},"metadata":{},"sourceType":"script"}