{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/Events.jsx\",\n    _s = $RefreshSig$();\n\nimport { List } from \"antd\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Address from \"./Address\";\n/**\n  ~ What it does? ~\n\n  Displays a lists of events\n\n  ~ How can I use? ~\n\n  <Events\n    contracts={readContracts}\n    contractName=\"YourContract\"\n    eventName=\"SetPurpose\"\n    localProvider={localProvider}\n    mainnetProvider={mainnetProvider}\n    startBlock={1}\n  />\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Events(_ref) {\n  _s();\n\n  var _this = this;\n\n  var contracts = _ref.contracts,\n      contractName = _ref.contractName,\n      eventName = _ref.eventName,\n      localProvider = _ref.localProvider,\n      mainnetProvider = _ref.mainnetProvider,\n      startBlock = _ref.startBlock;\n  // ðŸ“Ÿ Listen for broadcast events\n  var events = useEventListener(contracts, contractName, eventName, localProvider, startBlock);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 600,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Events:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      bordered: true,\n      dataSource: events,\n      renderItem: function renderItem(item) {\n        return /*#__PURE__*/_jsxDEV(List.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Address, {\n            address: item.args[0],\n            ensProvider: mainnetProvider,\n            fontSize: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, _this), item.args[1]]\n        }, item.blockNumber + \"_\" + item.args.sender + \"_\" + item.args.purpose, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Events, \"vzXMvB5+DzetsqPXOYcmT/6Q2JY=\", false, function () {\n  return [useEventListener];\n});\n\n_c = Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/Events.jsx"],"names":["List","useEventListener","Address","Events","contracts","contractName","eventName","localProvider","mainnetProvider","startBlock","events","width","margin","marginTop","paddingBottom","item","args","blockNumber","sender","purpose"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,MAAT,OAAoG;AAAA;;AAAA;;AAAA,MAAlFC,SAAkF,QAAlFA,SAAkF;AAAA,MAAvEC,YAAuE,QAAvEA,YAAuE;AAAA,MAAzDC,SAAyD,QAAzDA,SAAyD;AAAA,MAA9CC,aAA8C,QAA9CA,aAA8C;AAAA,MAA/BC,eAA+B,QAA/BA,eAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACjH;AACA,MAAMC,MAAM,GAAGT,gBAAgB,CAACG,SAAD,EAAYC,YAAZ,EAA0BC,SAA1B,EAAqCC,aAArC,EAAoDE,UAApD,CAA/B;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE,MAAtB;AAA8BC,MAAAA,SAAS,EAAE,EAAzC;AAA6CC,MAAAA,aAAa,EAAE;AAA5D,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,UAAU,EAAEJ,MAFd;AAGE,MAAA,UAAU,EAAE,oBAAAK,IAAI,EAAI;AAClB,4BACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEA,IAAI,CAACC,IAAL,CAAU,CAAV,CAAlB;AAAgC,YAAA,WAAW,EAAER,eAA7C;AAA8D,YAAA,QAAQ,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGO,IAAI,CAACC,IAAL,CAAU,CAAV,CAFH;AAAA,WAAgBD,IAAI,CAACE,WAAL,GAAmB,GAAnB,GAAyBF,IAAI,CAACC,IAAL,CAAUE,MAAnC,GAA4C,GAA5C,GAAkDH,IAAI,CAACC,IAAL,CAAUG,OAA5E;AAAA;AAAA;AAAA;AAAA,iBADF;AAMD;AAVH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GArBuBhB,M;UAEPF,gB;;;KAFOE,M","sourcesContent":["import { List } from \"antd\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Address from \"./Address\";\n\n/**\n  ~ What it does? ~\n\n  Displays a lists of events\n\n  ~ How can I use? ~\n\n  <Events\n    contracts={readContracts}\n    contractName=\"YourContract\"\n    eventName=\"SetPurpose\"\n    localProvider={localProvider}\n    mainnetProvider={mainnetProvider}\n    startBlock={1}\n  />\n**/\n\nexport default function Events({ contracts, contractName, eventName, localProvider, mainnetProvider, startBlock }) {\n  // ðŸ“Ÿ Listen for broadcast events\n  const events = useEventListener(contracts, contractName, eventName, localProvider, startBlock);\n\n  return (\n    <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n      <h2>Events:</h2>\n      <List\n        bordered\n        dataSource={events}\n        renderItem={item => {\n          return (\n            <List.Item key={item.blockNumber + \"_\" + item.args.sender + \"_\" + item.args.purpose}>\n              <Address address={item.args[0]} ensProvider={mainnetProvider} fontSize={16} />\n              {item.args[1]}\n            </List.Item>\n          );\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}