{"ast":null,"code":"import { getError, getErrorByCode, isReservedErrorCode } from \"./error\";\nimport { INTERNAL_ERROR, SERVER_ERROR } from \"./constants\";\nexport function payloadId() {\n  var date = Date.now() * Math.pow(10, 3);\n  var extra = Math.floor(Math.random() * Math.pow(10, 3));\n  return date + extra;\n}\nexport function formatJsonRpcRequest(method, params, id) {\n  return {\n    id: id || payloadId(),\n    jsonrpc: \"2.0\",\n    method: method,\n    params: params\n  };\n}\nexport function formatJsonRpcResult(id, result) {\n  return {\n    id: id,\n    jsonrpc: \"2.0\",\n    result: result\n  };\n}\nexport function formatJsonRpcError(id, error) {\n  return {\n    id: id,\n    jsonrpc: \"2.0\",\n    error: formatErrorMessage(error)\n  };\n}\nexport function formatErrorMessage(error) {\n  if (typeof error === \"undefined\") {\n    return getError(INTERNAL_ERROR);\n  }\n\n  if (typeof error === \"string\") {\n    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), {\n      message: error\n    });\n  }\n\n  if (isReservedErrorCode(error.code)) {\n    error = getErrorByCode(error.code);\n  }\n\n  return error;\n}","map":{"version":3,"sources":["../../src/format.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,EAAmB,cAAnB,EAAmC,mBAAnC,QAAiF,SAAjF;AACA,SAAS,cAAT,EAAyB,YAAzB,QAA6C,aAA7C;AAGA,OAAM,SAAU,SAAV,GAAmB;AACvB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAL,KAAa,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,CAAb,CAA1B;AACA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,CAAb,CAA3B,CAAd;AACA,SAAO,IAAI,GAAG,KAAd;AACD;AAED,OAAM,SAAU,oBAAV,CACJ,MADI,EAEJ,MAFI,EAGJ,EAHI,EAGO;AAEX,SAAO;AACL,IAAA,EAAE,EAAE,EAAE,IAAI,SAAS,EADd;AAEL,IAAA,OAAO,EAAE,KAFJ;AAGL,IAAA,MAAM,EAAN,MAHK;AAIL,IAAA,MAAM,EAAN;AAJK,GAAP;AAMD;AAED,OAAM,SAAU,mBAAV,CAAuC,EAAvC,EAAmD,MAAnD,EAA4D;AAChE,SAAO;AACL,IAAA,EAAE,EAAF,EADK;AAEL,IAAA,OAAO,EAAE,KAFJ;AAGL,IAAA,MAAM,EAAN;AAHK,GAAP;AAKD;AAED,OAAM,SAAU,kBAAV,CAA6B,EAA7B,EAAyC,KAAzC,EAAuE;AAC3E,SAAO;AACL,IAAA,EAAE,EAAF,EADK;AAEL,IAAA,OAAO,EAAE,KAFJ;AAGL,IAAA,KAAK,EAAE,kBAAkB,CAAC,KAAD;AAHpB,GAAP;AAKD;AAED,OAAM,SAAU,kBAAV,CAA6B,KAA7B,EAA2D;AAC/D,MAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC;AAChC,WAAO,QAAQ,CAAC,cAAD,CAAf;AACD;;AACD,MAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,IAAA,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACA,QAAQ,CAAC,YAAD,CADR,CAAA,EACsB;AACzB,MAAA,OAAO,EAAE;AADgB,KADtB,CAAL;AAID;;AACD,MAAI,mBAAmB,CAAC,KAAK,CAAC,IAAP,CAAvB,EAAqC;AACnC,IAAA,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,IAAP,CAAtB;AACD;;AACD,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { getError, getErrorByCode, isReservedErrorCode } from \"./error\";\nimport { INTERNAL_ERROR, SERVER_ERROR } from \"./constants\";\nexport function payloadId() {\n    const date = Date.now() * Math.pow(10, 3);\n    const extra = Math.floor(Math.random() * Math.pow(10, 3));\n    return date + extra;\n}\nexport function formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nexport function formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nexport function formatJsonRpcError(id, error) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error),\n    };\n}\nexport function formatErrorMessage(error) {\n    if (typeof error === \"undefined\") {\n        return getError(INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\n//# sourceMappingURL=format.js.map"]},"metadata":{},"sourceType":"module"}