{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar configure = require('../lib/configure.js');\n\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createAddAll = configure.configure(function (api) {\n  function addAll(_x) {\n    return _addAll.apply(this, arguments);\n  }\n\n  function _addAll() {\n    _addAll = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      var options,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _value3,\n          path,\n          recursive,\n          metadata,\n          res,\n          _iteratorNormalCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          _value2,\n          pin,\n          _iterator3,\n          _step3,\n          cid$1,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 3;\n              _iterator = _asyncIterator(normaliseInput.normaliseInput(source));\n\n            case 5:\n              _context.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 7:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 11;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 11:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 73;\n                break;\n              }\n\n              _value3 = _value, path = _value3.path, recursive = _value3.recursive, metadata = _value3.metadata;\n              _context.next = 16;\n              return _awaitAsyncGenerator(api.post('pin/add', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: path,\n                  recursive: recursive,\n                  metadata: metadata ? JSON.stringify(metadata) : undefined,\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n\n            case 16:\n              res = _context.sent;\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _context.prev = 19;\n              _iterator2 = _asyncIterator(res.ndjson());\n\n            case 21:\n              _context.next = 23;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 23:\n              _step2 = _context.sent;\n              _iteratorNormalCompletion2 = _step2.done;\n              _context.next = 27;\n              return _awaitAsyncGenerator(_step2.value);\n\n            case 27:\n              _value2 = _context.sent;\n\n              if (_iteratorNormalCompletion2) {\n                _context.next = 54;\n                break;\n              }\n\n              pin = _value2;\n\n              if (!pin.Pins) {\n                _context.next = 49;\n                break;\n              }\n\n              _iterator3 = _createForOfIteratorHelper(pin.Pins);\n              _context.prev = 32;\n\n              _iterator3.s();\n\n            case 34:\n              if ((_step3 = _iterator3.n()).done) {\n                _context.next = 40;\n                break;\n              }\n\n              cid$1 = _step3.value;\n              _context.next = 38;\n              return cid.CID.parse(cid$1);\n\n            case 38:\n              _context.next = 34;\n              break;\n\n            case 40:\n              _context.next = 45;\n              break;\n\n            case 42:\n              _context.prev = 42;\n              _context.t0 = _context[\"catch\"](32);\n\n              _iterator3.e(_context.t0);\n\n            case 45:\n              _context.prev = 45;\n\n              _iterator3.f();\n\n              return _context.finish(45);\n\n            case 48:\n              return _context.abrupt(\"continue\", 51);\n\n            case 49:\n              _context.next = 51;\n              return cid.CID.parse(pin);\n\n            case 51:\n              _iteratorNormalCompletion2 = true;\n              _context.next = 21;\n              break;\n\n            case 54:\n              _context.next = 60;\n              break;\n\n            case 56:\n              _context.prev = 56;\n              _context.t1 = _context[\"catch\"](19);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n\n            case 60:\n              _context.prev = 60;\n              _context.prev = 61;\n\n              if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n                _context.next = 65;\n                break;\n              }\n\n              _context.next = 65;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 65:\n              _context.prev = 65;\n\n              if (!_didIteratorError2) {\n                _context.next = 68;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 68:\n              return _context.finish(65);\n\n            case 69:\n              return _context.finish(60);\n\n            case 70:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 73:\n              _context.next = 79;\n              break;\n\n            case 75:\n              _context.prev = 75;\n              _context.t2 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n\n            case 79:\n              _context.prev = 79;\n              _context.prev = 80;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 84;\n                break;\n              }\n\n              _context.next = 84;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 84:\n              _context.prev = 84;\n\n              if (!_didIteratorError) {\n                _context.next = 87;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 87:\n              return _context.finish(84);\n\n            case 88:\n              return _context.finish(79);\n\n            case 89:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 75, 79, 89], [19, 56, 60, 70], [32, 42, 45, 48], [61,, 65, 69], [80,, 84, 88]]);\n    }));\n    return _addAll.apply(this, arguments);\n  }\n\n  return addAll;\n});\nexports.createAddAll = createAddAll;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/pin/add-all.js"],"names":["Object","defineProperty","exports","value","cid","require","configure","normaliseInput","toUrlSearchParams","createAddAll","api","addAll","source","options","path","recursive","metadata","post","signal","searchParams","arg","JSON","stringify","undefined","stream","headers","res","ndjson","pin","Pins","cid$1","CID","parse"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar configure = require('../lib/configure.js');\nvar normaliseInput = require('ipfs-core-utils/pins/normalise-input');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createAddAll = configure.configure(api => {\n  async function* addAll(source, options = {}) {\n    for await (const {path, recursive, metadata} of normaliseInput.normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) {\n          for (const cid$1 of pin.Pins) {\n            yield cid.CID.parse(cid$1);\n          }\n          continue;\n        }\n        yield cid.CID.parse(pin);\n      }\n    }\n  }\n  return addAll;\n});\n\nexports.createAddAll = createAddAll;\n"]},"metadata":{},"sourceType":"script"}