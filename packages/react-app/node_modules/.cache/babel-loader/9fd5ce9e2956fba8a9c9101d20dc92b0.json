{"ast":null,"code":"import _get from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { StreamCipher } from './cipher-core.js';\n\nfunction generateKeystreamWord() {\n  // Shortcuts\n  var S = this._S;\n  var i = this._i;\n  var j = this._j; // Generate keystream word\n\n  var keystreamWord = 0;\n\n  for (var n = 0; n < 4; n += 1) {\n    i = (i + 1) % 256;\n    j = (j + S[i]) % 256; // Swap\n\n    var t = S[i];\n    S[i] = S[j];\n    S[j] = t;\n    keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;\n  } // Update counters\n\n\n  this._i = i;\n  this._j = j;\n  return keystreamWord;\n}\n/**\n * RC4 stream cipher algorithm.\n */\n\n\nexport var RC4Algo = /*#__PURE__*/function (_StreamCipher) {\n  _inherits(RC4Algo, _StreamCipher);\n\n  var _super = _createSuper(RC4Algo);\n\n  function RC4Algo() {\n    _classCallCheck(this, RC4Algo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RC4Algo, [{\n    key: \"_doReset\",\n    value: function _doReset() {\n      // Shortcuts\n      var key = this._key;\n      var keyWords = key.words;\n      var keySigBytes = key.sigBytes; // Init sbox\n\n      this._S = [];\n      var S = this._S;\n\n      for (var i = 0; i < 256; i += 1) {\n        S[i] = i;\n      } // Key setup\n\n\n      for (var _i = 0, j = 0; _i < 256; _i += 1) {\n        var keyByteIndex = _i % keySigBytes;\n        var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;\n        j = (j + S[_i] + keyByte) % 256; // Swap\n\n        var t = S[_i];\n        S[_i] = S[j];\n        S[j] = t;\n      } // Counters\n\n\n      this._j = 0;\n      this._i = this._j;\n    }\n  }, {\n    key: \"_doProcessBlock\",\n    value: function _doProcessBlock(M, offset) {\n      var _M = M;\n      _M[offset] ^= generateKeystreamWord.call(this);\n    }\n  }]);\n\n  return RC4Algo;\n}(StreamCipher);\nRC4Algo.keySize = 256 / 32;\nRC4Algo.ivSize = 0;\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n */\n\nexport var RC4 = StreamCipher._createHelper(RC4Algo);\n/**\n * Modified RC4 stream cipher algorithm.\n */\n\nexport var RC4DropAlgo = /*#__PURE__*/function (_RC4Algo) {\n  _inherits(RC4DropAlgo, _RC4Algo);\n\n  var _super2 = _createSuper(RC4DropAlgo);\n\n  function RC4DropAlgo() {\n    var _this;\n\n    _classCallCheck(this, RC4DropAlgo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    /**\n     * Configuration options.\n     *\n     * @property {number} drop The number of keystream words to drop. Default 192\n     */\n\n    Object.assign(_this.cfg, {\n      drop: 192\n    });\n    return _this;\n  }\n\n  _createClass(RC4DropAlgo, [{\n    key: \"_doReset\",\n    value: function _doReset() {\n      _get(_getPrototypeOf(RC4DropAlgo.prototype), \"_doReset\", this).call(this); // Drop\n\n\n      for (var i = this.cfg.drop; i > 0; i -= 1) {\n        generateKeystreamWord.call(this);\n      }\n    }\n  }]);\n\n  return RC4DropAlgo;\n}(RC4Algo);\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n */\n\nexport var RC4Drop = StreamCipher._createHelper(RC4DropAlgo);","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/crypto-es/lib/rc4.js"],"names":["StreamCipher","generateKeystreamWord","S","_S","i","_i","j","_j","keystreamWord","n","t","RC4Algo","key","_key","keyWords","words","keySigBytes","sigBytes","keyByteIndex","keyByte","M","offset","_M","call","keySize","ivSize","RC4","_createHelper","RC4DropAlgo","args","Object","assign","cfg","drop","RC4Drop"],"mappings":"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","sourcesContent":["import {\n  StreamCipher,\n} from './cipher-core.js';\n\nfunction generateKeystreamWord() {\n  // Shortcuts\n  const S = this._S;\n  let i = this._i;\n  let j = this._j;\n\n  // Generate keystream word\n  let keystreamWord = 0;\n  for (let n = 0; n < 4; n += 1) {\n    i = (i + 1) % 256;\n    j = (j + S[i]) % 256;\n\n    // Swap\n    const t = S[i];\n    S[i] = S[j];\n    S[j] = t;\n\n    keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n  }\n\n  // Update counters\n  this._i = i;\n  this._j = j;\n\n  return keystreamWord;\n}\n\n/**\n * RC4 stream cipher algorithm.\n */\nexport class RC4Algo extends StreamCipher {\n  _doReset() {\n    // Shortcuts\n    const key = this._key;\n    const keyWords = key.words;\n    const keySigBytes = key.sigBytes;\n\n    // Init sbox\n    this._S = [];\n    const S = this._S;\n    for (let i = 0; i < 256; i += 1) {\n      S[i] = i;\n    }\n\n    // Key setup\n    for (let i = 0, j = 0; i < 256; i += 1) {\n      const keyByteIndex = i % keySigBytes;\n      const keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n      j = (j + S[i] + keyByte) % 256;\n\n      // Swap\n      const t = S[i];\n      S[i] = S[j];\n      S[j] = t;\n    }\n\n    // Counters\n    this._j = 0;\n    this._i = this._j;\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    _M[offset] ^= generateKeystreamWord.call(this);\n  }\n}\nRC4Algo.keySize = 256 / 32;\nRC4Algo.ivSize = 0;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n */\nexport const RC4 = StreamCipher._createHelper(RC4Algo);\n\n/**\n * Modified RC4 stream cipher algorithm.\n */\nexport class RC4DropAlgo extends RC4Algo {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} drop The number of keystream words to drop. Default 192\n     */\n    Object.assign(this.cfg, { drop: 192 });\n  }\n\n  _doReset() {\n    super._doReset.call(this);\n\n    // Drop\n    for (let i = this.cfg.drop; i > 0; i -= 1) {\n      generateKeystreamWord.call(this);\n    }\n  }\n}\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n */\nexport const RC4Drop = StreamCipher._createHelper(RC4DropAlgo);\n"]},"metadata":{},"sourceType":"module"}