{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/GasGauge.jsx\";\nimport React from \"react\";\nimport { Button } from \"antd\"; // added display of 0 instead of NaN if gas price is not provided\n\n/**\n  ~ What it does? ~\n\n  Displays gas gauge\n\n  ~ How can I use? ~\n\n  <GasGauge\n    gasPrice={gasPrice}\n  />\n\n  ~ Features ~\n\n  - Provide gasPrice={gasPrice} and get current gas gauge\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GasGauge(props) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: function onClick() {\n      window.open(\"https://ethgasstation.info/\");\n    },\n    size: \"large\",\n    shape: \"round\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginRight: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"fuelpump\",\n        children: \"\\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), typeof props.gasPrice === \"undefined\" ? 0 : parseInt(props.gasPrice, 10) / Math.pow(10, 9), \"g\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = GasGauge;\n\nvar _c;\n\n$RefreshReg$(_c, \"GasGauge\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/GasGauge.jsx"],"names":["React","Button","GasGauge","props","window","open","marginRight","gasPrice","parseInt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,MAAM,CAACC,IAAP,CAAY,6BAAZ;AACD,KAHH;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAC,OALR;AAAA,4BAOE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAb;AAAA,6BACE;AAAM,QAAA,IAAI,EAAC,KAAX;AAAiB,sBAAW,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,EAYG,OAAOH,KAAK,CAACI,QAAb,KAA0B,WAA1B,GAAwC,CAAxC,GAA4CC,QAAQ,CAACL,KAAK,CAACI,QAAP,EAAiB,EAAjB,CAAR,YAA+B,EAA/B,EAAqC,CAArC,CAZ/C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KAjBuBL,Q","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\n\n// added display of 0 instead of NaN if gas price is not provided\n\n/**\n  ~ What it does? ~\n\n  Displays gas gauge\n\n  ~ How can I use? ~\n\n  <GasGauge\n    gasPrice={gasPrice}\n  />\n\n  ~ Features ~\n\n  - Provide gasPrice={gasPrice} and get current gas gauge\n**/\n\nexport default function GasGauge(props) {\n  return (\n    <Button\n      onClick={() => {\n        window.open(\"https://ethgasstation.info/\");\n      }}\n      size=\"large\"\n      shape=\"round\"\n    >\n      <span style={{ marginRight: 8 }}>\n        <span role=\"img\" aria-label=\"fuelpump\">\n          ⛽️\n        </span>\n      </span>\n      {typeof props.gasPrice === \"undefined\" ? 0 : parseInt(props.gasPrice, 10) / 10 ** 9}g\n    </Button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}