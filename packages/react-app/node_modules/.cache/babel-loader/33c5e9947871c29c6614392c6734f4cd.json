{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar multiaddr = require('multiaddr');\n\nvar createList = configure.configure(function (api) {\n  function list() {\n    return _list.apply(this, arguments);\n  }\n\n  function _list() {\n    _list = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options,\n          res,\n          _yield$res$json,\n          Peers,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.next = 3;\n              return api.post('bootstrap/list', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(options),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              Peers = _yield$res$json.Peers;\n              return _context.abrupt(\"return\", {\n                Peers: Peers.map(function (ma) {\n                  return new multiaddr.Multiaddr(ma);\n                })\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _list.apply(this, arguments);\n  }\n\n  return list;\n});\nexports.createList = createList;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/bootstrap/list.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","multiaddr","createList","api","list","options","post","signal","searchParams","headers","res","json","Peers","map","ma","Multiaddr"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AAEA,IAAMG,UAAU,GAAGJ,SAAS,CAACA,SAAV,CAAoB,UAAAK,GAAG,EAAI;AAAA,WAC7BC,IAD6B;AAAA;AAAA;;AAAA;AAAA,qEAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAoBC,cAAAA,OAApB,2DAA8B,EAA9B;AAAA;AAAA,qBACoBF,GAAG,CAACG,IAAJ,CAAS,gBAAT,EAA2B;AAC3CC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MAD2B;AAE3CC,gBAAAA,YAAY,EAAER,iBAAiB,CAACA,iBAAlB,CAAoCK,OAApC,CAF6B;AAG3CI,gBAAAA,OAAO,EAAEJ,OAAO,CAACI;AAH0B,eAA3B,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA,qBAMwBA,GAAG,CAACC,IAAJ,EANxB;;AAAA;AAAA;AAMSC,cAAAA,KANT,mBAMSA,KANT;AAAA,+CAOS;AAAEA,gBAAAA,KAAK,EAAEA,KAAK,CAACC,GAAN,CAAU,UAAAC,EAAE;AAAA,yBAAI,IAAIb,SAAS,CAACc,SAAd,CAAwBD,EAAxB,CAAJ;AAAA,iBAAZ;AAAT,eAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD4C;AAAA;AAAA;;AAU5C,SAAOV,IAAP;AACD,CAXkB,CAAnB;AAaAR,OAAO,CAACM,UAAR,GAAqBA,UAArB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar multiaddr = require('multiaddr');\n\nconst createList = configure.configure(api => {\n  async function list(options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {Peers} = await res.json();\n    return { Peers: Peers.map(ma => new multiaddr.Multiaddr(ma)) };\n  }\n  return list;\n});\n\nexports.createList = createList;\n"]},"metadata":{},"sourceType":"script"}