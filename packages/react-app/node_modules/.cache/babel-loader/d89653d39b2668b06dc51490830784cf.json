{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nimport QueryStore from './QueryStore';\nimport { parse } from 'graphql';\nvar MAX_QUERY_SIZE = 100000;\n\nvar HistoryStore = function () {\n  function HistoryStore(storage, maxHistoryLength) {\n    var _this = this;\n\n    this.storage = storage;\n    this.maxHistoryLength = maxHistoryLength;\n\n    this.shouldSaveQuery = function (query, variables, headers, lastQuerySaved) {\n      if (!query) {\n        return false;\n      }\n\n      try {\n        parse(query);\n      } catch (e) {\n        return false;\n      }\n\n      if (query.length > MAX_QUERY_SIZE) {\n        return false;\n      }\n\n      if (!lastQuerySaved) {\n        return true;\n      }\n\n      if (JSON.stringify(query) === JSON.stringify(lastQuerySaved.query)) {\n        if (JSON.stringify(variables) === JSON.stringify(lastQuerySaved.variables)) {\n          if (JSON.stringify(headers) === JSON.stringify(lastQuerySaved.headers)) {\n            return false;\n          }\n\n          if (headers && !lastQuerySaved.headers) {\n            return false;\n          }\n        }\n\n        if (variables && !lastQuerySaved.variables) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.fetchAllQueries = function () {\n      var historyQueries = _this.history.fetchAll();\n\n      var favoriteQueries = _this.favorite.fetchAll();\n\n      return historyQueries.concat(favoriteQueries);\n    };\n\n    this.updateHistory = function (query, variables, headers, operationName) {\n      if (_this.shouldSaveQuery(query, variables, headers, _this.history.fetchRecent())) {\n        _this.history.push({\n          query: query,\n          variables: variables,\n          headers: headers,\n          operationName: operationName\n        });\n\n        var historyQueries = _this.history.items;\n        var favoriteQueries = _this.favorite.items;\n        _this.queries = historyQueries.concat(favoriteQueries);\n      }\n    };\n\n    this.toggleFavorite = function (query, variables, headers, operationName, label, favorite) {\n      var item = {\n        query: query,\n        variables: variables,\n        headers: headers,\n        operationName: operationName,\n        label: label\n      };\n\n      if (!_this.favorite.contains(item)) {\n        item.favorite = true;\n\n        _this.favorite.push(item);\n      } else if (favorite) {\n        item.favorite = false;\n\n        _this.favorite.delete(item);\n      }\n\n      _this.queries = __spread(_this.history.items, _this.favorite.items);\n    };\n\n    this.editLabel = function (query, variables, headers, operationName, label, favorite) {\n      var item = {\n        query: query,\n        variables: variables,\n        headers: headers,\n        operationName: operationName,\n        label: label\n      };\n\n      if (favorite) {\n        _this.favorite.edit(__assign(__assign({}, item), {\n          favorite: favorite\n        }));\n      } else {\n        _this.history.edit(item);\n      }\n\n      _this.queries = __spread(_this.history.items, _this.favorite.items);\n    };\n\n    this.history = new QueryStore('queries', this.storage, this.maxHistoryLength);\n    this.favorite = new QueryStore('favorites', this.storage, null);\n    this.queries = this.fetchAllQueries();\n  }\n\n  return HistoryStore;\n}();\n\nexport default HistoryStore;","map":{"version":3,"sources":["../../src/utility/HistoryStore.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,OAAO,UAAP,MAA2C,cAA3C;AAEA,SAAS,KAAT,QAAsB,SAAtB;AAMA,IAAM,cAAc,GAAG,MAAvB;;AAEA,IAAA,YAAA,GAAA,YAAA;AAKE,WAAA,YAAA,CAAoB,OAApB,EAAiD,gBAAjD,EAAyE;AAAzE,QAAA,KAAA,GAAA,IAAA;;AAAoB,SAAA,OAAA,GAAA,OAAA;AAA6B,SAAA,gBAAA,GAAA,gBAAA;;AAWjD,SAAA,eAAA,GAAkB,UAChB,KADgB,EAEhB,SAFgB,EAGhB,OAHgB,EAIhB,cAJgB,EAIe;AAE/B,UAAI,CAAC,KAAL,EAAY;AACV,eAAO,KAAP;AACD;;AAED,UAAI;AACF,QAAA,KAAK,CAAC,KAAD,CAAL;AACD,OAFD,CAEE,OAAO,CAAP,EAAU;AACV,eAAO,KAAP;AACD;;AAGD,UAAI,KAAK,CAAC,MAAN,GAAe,cAAnB,EAAmC;AACjC,eAAO,KAAP;AACD;;AACD,UAAI,CAAC,cAAL,EAAqB;AACnB,eAAO,IAAP;AACD;;AACD,UAAI,IAAI,CAAC,SAAL,CAAe,KAAf,MAA0B,IAAI,CAAC,SAAL,CAAe,cAAc,CAAC,KAA9B,CAA9B,EAAoE;AAClE,YACE,IAAI,CAAC,SAAL,CAAe,SAAf,MAA8B,IAAI,CAAC,SAAL,CAAe,cAAc,CAAC,SAA9B,CADhC,EAEE;AACA,cACE,IAAI,CAAC,SAAL,CAAe,OAAf,MAA4B,IAAI,CAAC,SAAL,CAAe,cAAc,CAAC,OAA9B,CAD9B,EAEE;AACA,mBAAO,KAAP;AACD;;AACD,cAAI,OAAO,IAAI,CAAC,cAAc,CAAC,OAA/B,EAAwC;AACtC,mBAAO,KAAP;AACD;AACF;;AACD,YAAI,SAAS,IAAI,CAAC,cAAc,CAAC,SAAjC,EAA4C;AAC1C,iBAAO,KAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD,KAzCD;;AA2CA,SAAA,eAAA,GAAkB,YAAA;AAChB,UAAM,cAAc,GAAG,KAAI,CAAC,OAAL,CAAa,QAAb,EAAvB;;AACA,UAAM,eAAe,GAAG,KAAI,CAAC,QAAL,CAAc,QAAd,EAAxB;;AACA,aAAO,cAAc,CAAC,MAAf,CAAsB,eAAtB,CAAP;AACD,KAJD;;AAOA,SAAA,aAAA,GAAgB,UACd,KADc,EAEd,SAFc,EAGd,OAHc,EAId,aAJc,EAIQ;AAEtB,UACE,KAAI,CAAC,eAAL,CACE,KADF,EAEE,SAFF,EAGE,OAHF,EAIE,KAAI,CAAC,OAAL,CAAa,WAAb,EAJF,CADF,EAOE;AACA,QAAA,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB;AAChB,UAAA,KAAK,EAAA,KADW;AAEhB,UAAA,SAAS,EAAA,SAFO;AAGhB,UAAA,OAAO,EAAA,OAHS;AAIhB,UAAA,aAAa,EAAA;AAJG,SAAlB;;AAMA,YAAM,cAAc,GAAG,KAAI,CAAC,OAAL,CAAa,KAApC;AACA,YAAM,eAAe,GAAG,KAAI,CAAC,QAAL,CAAc,KAAtC;AACA,QAAA,KAAI,CAAC,OAAL,GAAe,cAAc,CAAC,MAAf,CAAsB,eAAtB,CAAf;AACD;AACF,KAxBD;;AA2BA,SAAA,cAAA,GAAyC,UACvC,KADuC,EAEvC,SAFuC,EAGvC,OAHuC,EAIvC,aAJuC,EAKvC,KALuC,EAMvC,QANuC,EAM/B;AAER,UAAM,IAAI,GAAmB;AAC3B,QAAA,KAAK,EAAA,KADsB;AAE3B,QAAA,SAAS,EAAA,SAFkB;AAG3B,QAAA,OAAO,EAAA,OAHoB;AAI3B,QAAA,aAAa,EAAA,aAJc;AAK3B,QAAA,KAAK,EAAA;AALsB,OAA7B;;AAOA,UAAI,CAAC,KAAI,CAAC,QAAL,CAAc,QAAd,CAAuB,IAAvB,CAAL,EAAmC;AACjC,QAAA,IAAI,CAAC,QAAL,GAAgB,IAAhB;;AACA,QAAA,KAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACD,OAHD,MAGO,IAAI,QAAJ,EAAc;AACnB,QAAA,IAAI,CAAC,QAAL,GAAgB,KAAhB;;AACA,QAAA,KAAI,CAAC,QAAL,CAAc,MAAd,CAAqB,IAArB;AACD;;AACD,MAAA,KAAI,CAAC,OAAL,GAAY,QAAA,CAAO,KAAI,CAAC,OAAL,CAAa,KAApB,EAA8B,KAAI,CAAC,QAAL,CAAc,KAA5C,CAAZ;AACD,KAvBD;;AA0BA,SAAA,SAAA,GAA+B,UAC7B,KAD6B,EAE7B,SAF6B,EAG7B,OAH6B,EAI7B,aAJ6B,EAK7B,KAL6B,EAM7B,QAN6B,EAMrB;AAER,UAAM,IAAI,GAAG;AACX,QAAA,KAAK,EAAA,KADM;AAEX,QAAA,SAAS,EAAA,SAFE;AAGX,QAAA,OAAO,EAAA,OAHI;AAIX,QAAA,aAAa,EAAA,aAJF;AAKX,QAAA,KAAK,EAAA;AALM,OAAb;;AAOA,UAAI,QAAJ,EAAc;AACZ,QAAA,KAAI,CAAC,QAAL,CAAc,IAAd,CAAkB,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,IAAN,CAAA,EAAU;AAAE,UAAA,QAAQ,EAAA;AAAV,SAAV,CAAlB;AACD,OAFD,MAEO;AACL,QAAA,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,IAAlB;AACD;;AACD,MAAA,KAAI,CAAC,OAAL,GAAY,QAAA,CAAO,KAAI,CAAC,OAAL,CAAa,KAApB,EAA8B,KAAI,CAAC,QAAL,CAAc,KAA5C,CAAZ;AACD,KArBD;;AAjHE,SAAK,OAAL,GAAe,IAAI,UAAJ,CACb,SADa,EAEb,KAAK,OAFQ,EAGb,KAAK,gBAHQ,CAAf;AAMA,SAAK,QAAL,GAAgB,IAAI,UAAJ,CAAe,WAAf,EAA4B,KAAK,OAAjC,EAA0C,IAA1C,CAAhB;AACA,SAAK,OAAL,GAAe,KAAK,eAAL,EAAf;AACD;;AA+HH,SAAA,YAAA;AAAC,CA7ID,EAAA","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport QueryStore from './QueryStore';\nimport { parse } from 'graphql';\nvar MAX_QUERY_SIZE = 100000;\nvar HistoryStore = (function () {\n    function HistoryStore(storage, maxHistoryLength) {\n        var _this = this;\n        this.storage = storage;\n        this.maxHistoryLength = maxHistoryLength;\n        this.shouldSaveQuery = function (query, variables, headers, lastQuerySaved) {\n            if (!query) {\n                return false;\n            }\n            try {\n                parse(query);\n            }\n            catch (e) {\n                return false;\n            }\n            if (query.length > MAX_QUERY_SIZE) {\n                return false;\n            }\n            if (!lastQuerySaved) {\n                return true;\n            }\n            if (JSON.stringify(query) === JSON.stringify(lastQuerySaved.query)) {\n                if (JSON.stringify(variables) === JSON.stringify(lastQuerySaved.variables)) {\n                    if (JSON.stringify(headers) === JSON.stringify(lastQuerySaved.headers)) {\n                        return false;\n                    }\n                    if (headers && !lastQuerySaved.headers) {\n                        return false;\n                    }\n                }\n                if (variables && !lastQuerySaved.variables) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        this.fetchAllQueries = function () {\n            var historyQueries = _this.history.fetchAll();\n            var favoriteQueries = _this.favorite.fetchAll();\n            return historyQueries.concat(favoriteQueries);\n        };\n        this.updateHistory = function (query, variables, headers, operationName) {\n            if (_this.shouldSaveQuery(query, variables, headers, _this.history.fetchRecent())) {\n                _this.history.push({\n                    query: query,\n                    variables: variables,\n                    headers: headers,\n                    operationName: operationName,\n                });\n                var historyQueries = _this.history.items;\n                var favoriteQueries = _this.favorite.items;\n                _this.queries = historyQueries.concat(favoriteQueries);\n            }\n        };\n        this.toggleFavorite = function (query, variables, headers, operationName, label, favorite) {\n            var item = {\n                query: query,\n                variables: variables,\n                headers: headers,\n                operationName: operationName,\n                label: label,\n            };\n            if (!_this.favorite.contains(item)) {\n                item.favorite = true;\n                _this.favorite.push(item);\n            }\n            else if (favorite) {\n                item.favorite = false;\n                _this.favorite.delete(item);\n            }\n            _this.queries = __spread(_this.history.items, _this.favorite.items);\n        };\n        this.editLabel = function (query, variables, headers, operationName, label, favorite) {\n            var item = {\n                query: query,\n                variables: variables,\n                headers: headers,\n                operationName: operationName,\n                label: label,\n            };\n            if (favorite) {\n                _this.favorite.edit(__assign(__assign({}, item), { favorite: favorite }));\n            }\n            else {\n                _this.history.edit(item);\n            }\n            _this.queries = __spread(_this.history.items, _this.favorite.items);\n        };\n        this.history = new QueryStore('queries', this.storage, this.maxHistoryLength);\n        this.favorite = new QueryStore('favorites', this.storage, null);\n        this.queries = this.fetchAllQueries();\n    }\n    return HistoryStore;\n}());\nexport default HistoryStore;\n//# sourceMappingURL=HistoryStore.js.map"]},"metadata":{},"sourceType":"module"}