{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar BaseFilter = require('./base-filter');\n\nvar getBlocksForRange = require('./getBlocksForRange');\n\nvar _require = require('./hexUtils'),\n    incrementHexInt = _require.incrementHexInt;\n\nvar BlockFilter = /*#__PURE__*/function (_BaseFilter) {\n  \"use strict\";\n\n  _inherits(BlockFilter, _BaseFilter);\n\n  var _super = _createSuper(BlockFilter);\n\n  function BlockFilter(_ref) {\n    var _this;\n\n    var provider = _ref.provider,\n        params = _ref.params;\n\n    _classCallCheck(this, BlockFilter);\n\n    _this = _super.call(this);\n    _this.type = 'block';\n    _this.provider = provider;\n    return _this;\n  }\n\n  _createClass(BlockFilter, [{\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n        var oldBlock, newBlock, toBlock, fromBlock, blockBodies, blockHashes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                oldBlock = _ref2.oldBlock, newBlock = _ref2.newBlock;\n                toBlock = newBlock;\n                fromBlock = incrementHexInt(oldBlock);\n                _context.next = 5;\n                return getBlocksForRange({\n                  provider: this.provider,\n                  fromBlock: fromBlock,\n                  toBlock: toBlock\n                });\n\n              case 5:\n                blockBodies = _context.sent;\n                blockHashes = blockBodies.map(function (block) {\n                  return block.hash;\n                });\n                this.addResults(blockHashes);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }]);\n\n  return BlockFilter;\n}(BaseFilter);\n\nmodule.exports = BlockFilter;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/eth-json-rpc-filters/block-filter.js"],"names":["BaseFilter","require","getBlocksForRange","incrementHexInt","BlockFilter","provider","params","type","oldBlock","newBlock","toBlock","fromBlock","blockBodies","blockHashes","map","block","hash","addResults","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,eAA4BA,OAAO,CAAC,YAAD,CAAnC;AAAA,IAAQE,eAAR,YAAQA,eAAR;;IAEMC,W;;;;;;;AAEJ,6BAAmC;AAAA;;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AAAA,QAAVC,MAAU,QAAVA,MAAU;;AAAA;;AACjC;AACA,UAAKC,IAAL,GAAY,OAAZ;AACA,UAAKF,QAAL,GAAgBA,QAAhB;AAHiC;AAIlC;;;;;6EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBG,gBAAAA,QAAhB,SAAgBA,QAAhB,EAA0BC,QAA1B,SAA0BA,QAA1B;AACQC,gBAAAA,OADR,GACkBD,QADlB;AAEQE,gBAAAA,SAFR,GAEoBR,eAAe,CAACK,QAAD,CAFnC;AAAA;AAAA,uBAG4BN,iBAAiB,CAAC;AAAEG,kBAAAA,QAAQ,EAAE,KAAKA,QAAjB;AAA2BM,kBAAAA,SAAS,EAATA,SAA3B;AAAsCD,kBAAAA,OAAO,EAAPA;AAAtC,iBAAD,CAH7C;;AAAA;AAGQE,gBAAAA,WAHR;AAIQC,gBAAAA,WAJR,GAIsBD,WAAW,CAACE,GAAZ,CAAgB,UAACC,KAAD;AAAA,yBAAWA,KAAK,CAACC,IAAjB;AAAA,iBAAhB,CAJtB;AAKE,qBAAKC,UAAL,CAAgBJ,WAAhB;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EARwBb,U;;AAkB1BkB,MAAM,CAACC,OAAP,GAAiBf,WAAjB","sourcesContent":["const BaseFilter = require('./base-filter')\nconst getBlocksForRange = require('./getBlocksForRange')\nconst { incrementHexInt } = require('./hexUtils')\n\nclass BlockFilter extends BaseFilter {\n\n  constructor ({ provider, params }) {\n    super()\n    this.type = 'block'\n    this.provider = provider\n  }\n\n  async update ({ oldBlock, newBlock }) {\n    const toBlock = newBlock\n    const fromBlock = incrementHexInt(oldBlock)\n    const blockBodies = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\n    const blockHashes = blockBodies.map((block) => block.hash)\n    this.addResults(blockHashes)\n  }\n\n}\n\nmodule.exports = BlockFilter\n"]},"metadata":{},"sourceType":"script"}