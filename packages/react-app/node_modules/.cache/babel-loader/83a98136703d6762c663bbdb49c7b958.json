{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _toConsumableArray = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterFromParam = exports.FilterPolyfill = void 0;\n\nvar types_1 = require(\"../types\");\n\nvar util_1 = require(\"../util\");\n\nvar TIMEOUT = 5 * 60 * 1000; // 5 minutes\n\nvar JSONRPC_TEMPLATE = {\n  jsonrpc: \"2.0\",\n  id: 0\n};\n\nvar FilterPolyfill = /*#__PURE__*/function () {\n  function FilterPolyfill(provider) {\n    _classCallCheck(this, FilterPolyfill);\n\n    this.logFilters = new Map(); // <id, filter>\n\n    this.blockFilters = new Set(); // <id>\n\n    this.pendingTransactionFilters = new Set(); // <id, true>\n\n    this.cursors = new Map(); // <id, cursor>\n\n    this.timeouts = new Map(); // <id, setTimeout id>\n\n    this.nextFilterId = types_1.IntNumber(1);\n    this.provider = provider;\n  }\n\n  _createClass(FilterPolyfill, [{\n    key: \"newFilter\",\n    value: function () {\n      var _newFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(param) {\n        var filter, id, cursor;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                filter = filterFromParam(param);\n                id = this.makeFilterId();\n                _context.next = 4;\n                return this.setInitialCursorPosition(id, filter.fromBlock);\n\n              case 4:\n                cursor = _context.sent;\n                console.log(\"Installing new log filter(\".concat(id, \"):\"), filter, \"initial cursor position:\", cursor);\n                this.logFilters.set(id, filter);\n                this.setFilterTimeout(id);\n                return _context.abrupt(\"return\", util_1.hexStringFromIntNumber(id));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function newFilter(_x) {\n        return _newFilter.apply(this, arguments);\n      }\n\n      return newFilter;\n    }()\n  }, {\n    key: \"newBlockFilter\",\n    value: function () {\n      var _newBlockFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var id, cursor;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = this.makeFilterId();\n                _context2.next = 3;\n                return this.setInitialCursorPosition(id, \"latest\");\n\n              case 3:\n                cursor = _context2.sent;\n                console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n                this.blockFilters.add(id);\n                this.setFilterTimeout(id);\n                return _context2.abrupt(\"return\", util_1.hexStringFromIntNumber(id));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function newBlockFilter() {\n        return _newBlockFilter.apply(this, arguments);\n      }\n\n      return newBlockFilter;\n    }()\n  }, {\n    key: \"newPendingTransactionFilter\",\n    value: function () {\n      var _newPendingTransactionFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var id, cursor;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = this.makeFilterId();\n                _context3.next = 3;\n                return this.setInitialCursorPosition(id, \"latest\");\n\n              case 3:\n                cursor = _context3.sent;\n                console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n                this.pendingTransactionFilters.add(id);\n                this.setFilterTimeout(id);\n                return _context3.abrupt(\"return\", util_1.hexStringFromIntNumber(id));\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function newPendingTransactionFilter() {\n        return _newPendingTransactionFilter.apply(this, arguments);\n      }\n\n      return newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"uninstallFilter\",\n    value: function uninstallFilter(filterId) {\n      var id = util_1.intNumberFromHexString(filterId);\n      console.log(\"Uninstalling filter (\".concat(id, \")\"));\n      this.deleteFilter(id);\n      return true;\n    }\n  }, {\n    key: \"getFilterChanges\",\n    value: function getFilterChanges(filterId) {\n      var id = util_1.intNumberFromHexString(filterId);\n\n      if (this.timeouts.has(id)) {\n        // extend timeout\n        this.setFilterTimeout(id);\n      }\n\n      if (this.logFilters.has(id)) {\n        return this.getLogFilterChanges(id);\n      } else if (this.blockFilters.has(id)) {\n        return this.getBlockFilterChanges(id);\n      } else if (this.pendingTransactionFilters.has(id)) {\n        return this.getPendingTransactionFilterChanges(id);\n      }\n\n      return Promise.resolve(filterNotFoundError());\n    }\n  }, {\n    key: \"getFilterLogs\",\n    value: function () {\n      var _getFilterLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(filterId) {\n        var id, filter;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = util_1.intNumberFromHexString(filterId);\n                filter = this.logFilters.get(id);\n\n                if (filter) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", filterNotFoundError());\n\n              case 4:\n                return _context4.abrupt(\"return\", this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getLogs\",\n                  params: [paramFromFilter(filter)]\n                })));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getFilterLogs(_x2) {\n        return _getFilterLogs.apply(this, arguments);\n      }\n\n      return getFilterLogs;\n    }()\n  }, {\n    key: \"makeFilterId\",\n    value: function makeFilterId() {\n      return types_1.IntNumber(++this.nextFilterId);\n    }\n  }, {\n    key: \"sendAsyncPromise\",\n    value: function sendAsyncPromise(request) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.provider.sendAsync(request, function (err, response) {\n          if (err) {\n            return reject(err);\n          }\n\n          if (Array.isArray(response) || response == null) {\n            return reject(new Error(\"unexpected response received: \".concat(JSON.stringify(response))));\n          }\n\n          resolve(response);\n        });\n      });\n    }\n  }, {\n    key: \"deleteFilter\",\n    value: function deleteFilter(id) {\n      console.log(\"Deleting filter (\".concat(id, \")\"));\n      this.logFilters.delete(id);\n      this.blockFilters.delete(id);\n      this.pendingTransactionFilters.delete(id);\n      this.cursors.delete(id);\n      this.timeouts.delete(id);\n    }\n  }, {\n    key: \"getLogFilterChanges\",\n    value: function () {\n      var _getLogFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n        var filter, cursorPosition, currentBlockHeight, toBlock, response, blocks, highestBlock, newCursorPosition;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                filter = this.logFilters.get(id);\n                cursorPosition = this.cursors.get(id);\n\n                if (!(!cursorPosition || !filter)) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", filterNotFoundError());\n\n              case 4:\n                _context5.next = 6;\n                return this.getCurrentBlockHeight();\n\n              case 6:\n                currentBlockHeight = _context5.sent;\n                toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n\n                if (!(cursorPosition > currentBlockHeight)) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", emptyResult());\n\n              case 10:\n                if (!(cursorPosition > filter.toBlock)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", emptyResult());\n\n              case 12:\n                console.log(\"Fetching logs from \".concat(cursorPosition, \" to \").concat(toBlock, \" for filter \").concat(id));\n                _context5.next = 15;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getLogs\",\n                  params: [paramFromFilter(Object.assign(Object.assign({}, filter), {\n                    fromBlock: cursorPosition,\n                    toBlock: toBlock\n                  }))]\n                }));\n\n              case 15:\n                response = _context5.sent;\n\n                if (Array.isArray(response.result)) {\n                  blocks = response.result.map(function (log) {\n                    return util_1.intNumberFromHexString(log.blockNumber || \"0x0\");\n                  });\n                  highestBlock = Math.max.apply(Math, _toConsumableArray(blocks));\n\n                  if (highestBlock && highestBlock > cursorPosition) {\n                    newCursorPosition = types_1.IntNumber(highestBlock + 1);\n                    console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n                    this.cursors.set(id, newCursorPosition);\n                  }\n                }\n\n                return _context5.abrupt(\"return\", response);\n\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getLogFilterChanges(_x3) {\n        return _getLogFilterChanges.apply(this, arguments);\n      }\n\n      return getLogFilterChanges;\n    }()\n  }, {\n    key: \"getBlockFilterChanges\",\n    value: function () {\n      var _getBlockFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id) {\n        var _this2 = this;\n\n        var cursorPosition, currentBlockHeight, blocks, newCursorPosition;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                cursorPosition = this.cursors.get(id);\n\n                if (cursorPosition) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", filterNotFoundError());\n\n              case 3:\n                _context6.next = 5;\n                return this.getCurrentBlockHeight();\n\n              case 5:\n                currentBlockHeight = _context6.sent;\n\n                if (!(cursorPosition > currentBlockHeight)) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", emptyResult());\n\n              case 8:\n                console.log(\"Fetching blocks from \".concat(cursorPosition, \" to \").concat(currentBlockHeight, \" for filter (\").concat(id, \")\"));\n                _context6.next = 11;\n                return Promise.all(util_1.range(cursorPosition, currentBlockHeight + 1).map(function (i) {\n                  return _this2.getBlockHashByNumber(types_1.IntNumber(i));\n                }));\n\n              case 11:\n                blocks = _context6.sent.filter(function (hash) {\n                  return !!hash;\n                });\n                newCursorPosition = types_1.IntNumber(cursorPosition + blocks.length);\n                console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n                this.cursors.set(id, newCursorPosition);\n                return _context6.abrupt(\"return\", Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  result: blocks\n                }));\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getBlockFilterChanges(_x4) {\n        return _getBlockFilterChanges.apply(this, arguments);\n      }\n\n      return getBlockFilterChanges;\n    }()\n  }, {\n    key: \"getPendingTransactionFilterChanges\",\n    value: function () {\n      var _getPendingTransactionFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_id) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", Promise.resolve(emptyResult()));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getPendingTransactionFilterChanges(_x5) {\n        return _getPendingTransactionFilterChanges.apply(this, arguments);\n      }\n\n      return getPendingTransactionFilterChanges;\n    }()\n  }, {\n    key: \"setInitialCursorPosition\",\n    value: function () {\n      var _setInitialCursorPosition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id, startBlock) {\n        var currentBlockHeight, initialCursorPosition;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.getCurrentBlockHeight();\n\n              case 2:\n                currentBlockHeight = _context8.sent;\n                initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight ? startBlock : currentBlockHeight;\n                this.cursors.set(id, initialCursorPosition);\n                return _context8.abrupt(\"return\", initialCursorPosition);\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function setInitialCursorPosition(_x6, _x7) {\n        return _setInitialCursorPosition.apply(this, arguments);\n      }\n\n      return setInitialCursorPosition;\n    }()\n  }, {\n    key: \"setFilterTimeout\",\n    value: function setFilterTimeout(id) {\n      var _this3 = this;\n\n      var existing = this.timeouts.get(id);\n\n      if (existing) {\n        window.clearTimeout(existing);\n      }\n\n      var timeout = window.setTimeout(function () {\n        console.log(\"Filter (\".concat(id, \") timed out\"));\n\n        _this3.deleteFilter(id);\n      }, TIMEOUT);\n      this.timeouts.set(id, timeout);\n    }\n  }, {\n    key: \"getCurrentBlockHeight\",\n    value: function () {\n      var _getCurrentBlockHeight = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _yield$this$sendAsync, result;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_blockNumber\",\n                  params: []\n                }));\n\n              case 2:\n                _yield$this$sendAsync = _context9.sent;\n                result = _yield$this$sendAsync.result;\n                return _context9.abrupt(\"return\", util_1.intNumberFromHexString(util_1.ensureHexString(result)));\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getCurrentBlockHeight() {\n        return _getCurrentBlockHeight.apply(this, arguments);\n      }\n\n      return getCurrentBlockHeight;\n    }()\n  }, {\n    key: \"getBlockHashByNumber\",\n    value: function () {\n      var _getBlockHashByNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(blockNumber) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getBlockByNumber\",\n                  params: [util_1.hexStringFromIntNumber(blockNumber), false]\n                }));\n\n              case 2:\n                response = _context10.sent;\n\n                if (!(response.result && typeof response.result.hash === \"string\")) {\n                  _context10.next = 5;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", util_1.ensureHexString(response.result.hash));\n\n              case 5:\n                return _context10.abrupt(\"return\", null);\n\n              case 6:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getBlockHashByNumber(_x8) {\n        return _getBlockHashByNumber.apply(this, arguments);\n      }\n\n      return getBlockHashByNumber;\n    }()\n  }]);\n\n  return FilterPolyfill;\n}();\n\nexports.FilterPolyfill = FilterPolyfill;\n\nfunction filterFromParam(param) {\n  return {\n    fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n    toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n    addresses: param.address === undefined ? null : Array.isArray(param.address) ? param.address : [param.address],\n    topics: param.topics || []\n  };\n}\n\nexports.filterFromParam = filterFromParam;\n\nfunction paramFromFilter(filter) {\n  var param = {\n    fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n    toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n    topics: filter.topics\n  };\n\n  if (filter.addresses !== null) {\n    param.address = filter.addresses;\n  }\n\n  return param;\n}\n\nfunction intBlockHeightFromHexBlockHeight(value) {\n  if (value === undefined || value === \"latest\" || value === \"pending\") {\n    return \"latest\";\n  } else if (value === \"earliest\") {\n    return types_1.IntNumber(0);\n  } else if (util_1.isHexString(value)) {\n    return util_1.intNumberFromHexString(value);\n  }\n\n  throw new Error(\"Invalid block option: \".concat(value));\n}\n\nfunction hexBlockHeightFromIntBlockHeight(value) {\n  if (value === \"latest\") {\n    return value;\n  }\n\n  return util_1.hexStringFromIntNumber(value);\n}\n\nfunction filterNotFoundError() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    error: {\n      code: -32000,\n      message: \"filter not found\"\n    }\n  });\n}\n\nfunction emptyResult() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    result: []\n  });\n}","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/walletlink/dist/provider/FilterPolyfill.js"],"names":["Object","defineProperty","exports","value","filterFromParam","FilterPolyfill","types_1","require","util_1","TIMEOUT","JSONRPC_TEMPLATE","jsonrpc","id","provider","logFilters","Map","blockFilters","Set","pendingTransactionFilters","cursors","timeouts","nextFilterId","IntNumber","param","filter","makeFilterId","setInitialCursorPosition","fromBlock","cursor","console","log","set","setFilterTimeout","hexStringFromIntNumber","add","filterId","intNumberFromHexString","deleteFilter","has","getLogFilterChanges","getBlockFilterChanges","getPendingTransactionFilterChanges","Promise","resolve","filterNotFoundError","get","sendAsyncPromise","assign","method","params","paramFromFilter","request","reject","sendAsync","err","response","Array","isArray","Error","JSON","stringify","delete","cursorPosition","getCurrentBlockHeight","currentBlockHeight","toBlock","emptyResult","result","blocks","map","blockNumber","highestBlock","Math","max","newCursorPosition","all","range","i","getBlockHashByNumber","hash","length","_id","startBlock","initialCursorPosition","existing","window","clearTimeout","timeout","setTimeout","ensureHexString","intBlockHeightFromHexBlockHeight","addresses","address","undefined","topics","hexBlockHeightFromIntBlockHeight","isHexString","error","code","message"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\nconst JSONRPC_TEMPLATE = {\n    jsonrpc: \"2.0\",\n    id: 0\n};\nclass FilterPolyfill {\n    constructor(provider) {\n        this.logFilters = new Map(); // <id, filter>\n        this.blockFilters = new Set(); // <id>\n        this.pendingTransactionFilters = new Set(); // <id, true>\n        this.cursors = new Map(); // <id, cursor>\n        this.timeouts = new Map(); // <id, setTimeout id>\n        this.nextFilterId = types_1.IntNumber(1);\n        this.provider = provider;\n    }\n    async newFilter(param) {\n        const filter = filterFromParam(param);\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, filter.fromBlock);\n        console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n        this.logFilters.set(id, filter);\n        this.setFilterTimeout(id);\n        return util_1.hexStringFromIntNumber(id);\n    }\n    async newBlockFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.blockFilters.add(id);\n        this.setFilterTimeout(id);\n        return util_1.hexStringFromIntNumber(id);\n    }\n    async newPendingTransactionFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.pendingTransactionFilters.add(id);\n        this.setFilterTimeout(id);\n        return util_1.hexStringFromIntNumber(id);\n    }\n    uninstallFilter(filterId) {\n        const id = util_1.intNumberFromHexString(filterId);\n        console.log(`Uninstalling filter (${id})`);\n        this.deleteFilter(id);\n        return true;\n    }\n    getFilterChanges(filterId) {\n        const id = util_1.intNumberFromHexString(filterId);\n        if (this.timeouts.has(id)) {\n            // extend timeout\n            this.setFilterTimeout(id);\n        }\n        if (this.logFilters.has(id)) {\n            return this.getLogFilterChanges(id);\n        }\n        else if (this.blockFilters.has(id)) {\n            return this.getBlockFilterChanges(id);\n        }\n        else if (this.pendingTransactionFilters.has(id)) {\n            return this.getPendingTransactionFilterChanges(id);\n        }\n        return Promise.resolve(filterNotFoundError());\n    }\n    async getFilterLogs(filterId) {\n        const id = util_1.intNumberFromHexString(filterId);\n        const filter = this.logFilters.get(id);\n        if (!filter) {\n            return filterNotFoundError();\n        }\n        return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [paramFromFilter(filter)] }));\n    }\n    makeFilterId() {\n        return types_1.IntNumber(++this.nextFilterId);\n    }\n    sendAsyncPromise(request) {\n        return new Promise((resolve, reject) => {\n            this.provider.sendAsync(request, (err, response) => {\n                if (err) {\n                    return reject(err);\n                }\n                if (Array.isArray(response) || response == null) {\n                    return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n                }\n                resolve(response);\n            });\n        });\n    }\n    deleteFilter(id) {\n        console.log(`Deleting filter (${id})`);\n        this.logFilters.delete(id);\n        this.blockFilters.delete(id);\n        this.pendingTransactionFilters.delete(id);\n        this.cursors.delete(id);\n        this.timeouts.delete(id);\n    }\n    async getLogFilterChanges(id) {\n        const filter = this.logFilters.get(id);\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition || !filter) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        if (cursorPosition > filter.toBlock) {\n            return emptyResult();\n        }\n        console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [\n                paramFromFilter(Object.assign(Object.assign({}, filter), { fromBlock: cursorPosition, toBlock }))\n            ] }));\n        if (Array.isArray(response.result)) {\n            const blocks = response.result.map(log => util_1.intNumberFromHexString(log.blockNumber || \"0x0\"));\n            const highestBlock = Math.max(...blocks);\n            if (highestBlock && highestBlock > cursorPosition) {\n                const newCursorPosition = types_1.IntNumber(highestBlock + 1);\n                console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n                this.cursors.set(id, newCursorPosition);\n            }\n        }\n        return response;\n    }\n    async getBlockFilterChanges(id) {\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n        const blocks = (await Promise.all(util_1.range(cursorPosition, currentBlockHeight + 1).map(i => this.getBlockHashByNumber(types_1.IntNumber(i))))).filter(hash => !!hash);\n        const newCursorPosition = types_1.IntNumber(cursorPosition + blocks.length);\n        console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n        this.cursors.set(id, newCursorPosition);\n        return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: blocks });\n    }\n    async getPendingTransactionFilterChanges(_id) {\n        // pending transaction filters are not supported\n        return Promise.resolve(emptyResult());\n    }\n    async setInitialCursorPosition(id, startBlock) {\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight\n            ? startBlock\n            : currentBlockHeight;\n        this.cursors.set(id, initialCursorPosition);\n        return initialCursorPosition;\n    }\n    setFilterTimeout(id) {\n        const existing = this.timeouts.get(id);\n        if (existing) {\n            window.clearTimeout(existing);\n        }\n        const timeout = window.setTimeout(() => {\n            console.log(`Filter (${id}) timed out`);\n            this.deleteFilter(id);\n        }, TIMEOUT);\n        this.timeouts.set(id, timeout);\n    }\n    async getCurrentBlockHeight() {\n        const { result } = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_blockNumber\", params: [] }));\n        return util_1.intNumberFromHexString(util_1.ensureHexString(result));\n    }\n    async getBlockHashByNumber(blockNumber) {\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getBlockByNumber\", params: [util_1.hexStringFromIntNumber(blockNumber), false] }));\n        if (response.result && typeof response.result.hash === \"string\") {\n            return util_1.ensureHexString(response.result.hash);\n        }\n        return null;\n    }\n}\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n    return {\n        fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n        toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n        addresses: param.address === undefined\n            ? null\n            : Array.isArray(param.address)\n                ? param.address\n                : [param.address],\n        topics: param.topics || []\n    };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n    const param = {\n        fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n        toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n        topics: filter.topics\n    };\n    if (filter.addresses !== null) {\n        param.address = filter.addresses;\n    }\n    return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n    if (value === undefined || value === \"latest\" || value === \"pending\") {\n        return \"latest\";\n    }\n    else if (value === \"earliest\") {\n        return types_1.IntNumber(0);\n    }\n    else if (util_1.isHexString(value)) {\n        return util_1.intNumberFromHexString(value);\n    }\n    throw new Error(`Invalid block option: ${value}`);\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n    if (value === \"latest\") {\n        return value;\n    }\n    return util_1.hexStringFromIntNumber(value);\n}\nfunction filterNotFoundError() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { error: { code: -32000, message: \"filter not found\" } });\n}\nfunction emptyResult() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: [] });\n}\n"]},"metadata":{},"sourceType":"script"}