{"ast":null,"code":"import _slicedToArray from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/FaucetHint.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useBalance, useGasPrice } from \"eth-hooks\";\nimport { Transactor } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FaucetHint(_ref) {\n  _s();\n\n  var localProvider = _ref.localProvider,\n      targetNetwork = _ref.targetNetwork,\n      address = _ref.address;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      faucetClicked = _useState2[0],\n      setFaucetClicked = _useState2[1]; // fetch local balance\n\n\n  var yourLocalBalance = useBalance(localProvider, address); // get gas Price from network\n\n  var gasPrice = useGasPrice(targetNetwork, \"fast\"); // Faucet Tx can be used to send funds from the faucet\n\n  var faucetTx = Transactor(localProvider, gasPrice);\n  var faucetHint = \"\";\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId === 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16,\n        display: \"inline-flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          faucetTx({\n            to: address,\n            value: ethers.utils.parseEther(\"0.01\")\n          });\n          setFaucetClicked(true);\n        },\n        children: \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  return faucetHint;\n}\n\n_s(FaucetHint, \"Y1RHSta3s5qXT0cswlngyiDRt0A=\", false, function () {\n  return [useBalance, useGasPrice];\n});\n\n_c = FaucetHint;\nexport default FaucetHint;\n\nvar _c;\n\n$RefreshReg$(_c, \"FaucetHint\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/FaucetHint.jsx"],"names":["Button","React","useState","ethers","useBalance","useGasPrice","Transactor","FaucetHint","localProvider","targetNetwork","address","faucetClicked","setFaucetClicked","yourLocalBalance","gasPrice","faucetTx","faucetHint","_network","chainId","utils","formatEther","padding","display","to","value","parseEther"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,WAAxC;AAEA,SAASC,UAAT,QAA2B,YAA3B;;;AAEA,SAASC,UAAT,OAA+D;AAAA;;AAAA,MAAzCC,aAAyC,QAAzCA,aAAyC;AAAA,MAA1BC,aAA0B,QAA1BA,aAA0B;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAC7D,kBAA0CR,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOS,aAAP;AAAA,MAAsBC,gBAAtB,iBAD6D,CAG7D;;;AACA,MAAMC,gBAAgB,GAAGT,UAAU,CAACI,aAAD,EAAgBE,OAAhB,CAAnC,CAJ6D,CAM7D;;AACA,MAAMI,QAAQ,GAAGT,WAAW,CAACI,aAAD,EAAgB,MAAhB,CAA5B,CAP6D,CAS7D;;AACA,MAAMM,QAAQ,GAAGT,UAAU,CAACE,aAAD,EAAgBM,QAAhB,CAA3B;AAEA,MAAIE,UAAU,GAAG,EAAjB;;AAEA,MACE,CAACL,aAAD,IACAH,aADA,IAEAA,aAAa,CAACS,QAFd,IAGAT,aAAa,CAACS,QAAd,CAAuBC,OAAvB,KAAmC,KAHnC,IAIAL,gBAJA,IAKAV,MAAM,CAACgB,KAAP,CAAaC,WAAb,CAAyBP,gBAAzB,KAA8C,CANhD,EAOE;AACAG,IAAAA,UAAU,gBACR;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAZ;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbP,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,EAAE,EAAEb,OADG;AAEPc,YAAAA,KAAK,EAAErB,MAAM,CAACgB,KAAP,CAAaM,UAAb,CAAwB,MAAxB;AAFA,WAAD,CAAR;AAIAb,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAED,SAAOI,UAAP;AACD;;GAzCQT,U;UAIkBH,U,EAGRC,W;;;KAPVE,U;AA2CT,eAAeA,UAAf","sourcesContent":["import { Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useBalance, useGasPrice } from \"eth-hooks\";\n\nimport { Transactor } from \"../helpers\";\n\nfunction FaucetHint({ localProvider, targetNetwork, address }) {\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  // fetch local balance\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // get gas Price from network\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  let faucetHint = \"\";\n\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16, display: \"inline-flex\" }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  return faucetHint;\n}\n\nexport default FaucetHint;\n"]},"metadata":{},"sourceType":"module"}