{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codemirror_1 = __importDefault(require(\"codemirror\"));\n\nvar graphql_1 = require(\"graphql\");\n\nvar forEachState_1 = __importDefault(require(\"../utils/forEachState\"));\n\nvar hintList_1 = __importDefault(require(\"../utils/hintList\"));\n\ncodemirror_1.default.registerHelper('hint', 'graphql-variables', function (editor, options) {\n  var cur = editor.getCursor();\n  var token = editor.getTokenAt(cur);\n  var results = getVariablesHint(cur, token, options);\n\n  if (results && results.list && results.list.length > 0) {\n    results.from = codemirror_1.default.Pos(results.from.line, results.from.ch);\n    results.to = codemirror_1.default.Pos(results.to.line, results.to.ch);\n    codemirror_1.default.signal(editor, 'hasCompletion', editor, results, token);\n  }\n\n  return results;\n});\n\nfunction getVariablesHint(cur, token, options) {\n  var state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n  var kind = state.kind;\n  var step = state.step;\n\n  if (kind === 'Document' && step === 0) {\n    return hintList_1.default(cur, token, [{\n      text: '{'\n    }]);\n  }\n\n  var variableToType = options.variableToType;\n\n  if (!variableToType) {\n    return;\n  }\n\n  var typeInfo = getTypeInfo(variableToType, token.state);\n\n  if (kind === 'Document' || kind === 'Variable' && step === 0) {\n    var variableNames = Object.keys(variableToType);\n    return hintList_1.default(cur, token, variableNames.map(function (name) {\n      return {\n        text: \"\\\"\" + name + \"\\\": \",\n        type: variableToType[name]\n      };\n    }));\n  }\n\n  if (kind === 'ObjectValue' || kind === 'ObjectField' && step === 0) {\n    if (typeInfo.fields) {\n      var inputFields = Object.keys(typeInfo.fields).map(function (fieldName) {\n        return typeInfo.fields[fieldName];\n      });\n      return hintList_1.default(cur, token, inputFields.map(function (field) {\n        return {\n          text: \"\\\"\" + field.name + \"\\\": \",\n          type: field.type,\n          description: field.description\n        };\n      }));\n    }\n  }\n\n  if (kind === 'StringValue' || kind === 'NumberValue' || kind === 'BooleanValue' || kind === 'NullValue' || kind === 'ListValue' && step === 1 || kind === 'ObjectField' && step === 2 || kind === 'Variable' && step === 2) {\n    var namedInputType_1 = typeInfo.type ? graphql_1.getNamedType(typeInfo.type) : undefined;\n\n    if (namedInputType_1 instanceof graphql_1.GraphQLInputObjectType) {\n      return hintList_1.default(cur, token, [{\n        text: '{'\n      }]);\n    } else if (namedInputType_1 instanceof graphql_1.GraphQLEnumType) {\n      var values = namedInputType_1.getValues();\n      return hintList_1.default(cur, token, values.map(function (value) {\n        return {\n          text: \"\\\"\" + value.name + \"\\\"\",\n          type: namedInputType_1,\n          description: value.description\n        };\n      }));\n    } else if (namedInputType_1 === graphql_1.GraphQLBoolean) {\n      return hintList_1.default(cur, token, [{\n        text: 'true',\n        type: graphql_1.GraphQLBoolean,\n        description: 'Not false.'\n      }, {\n        text: 'false',\n        type: graphql_1.GraphQLBoolean,\n        description: 'Not true.'\n      }]);\n    }\n  }\n}\n\nfunction getTypeInfo(variableToType, tokenState) {\n  var info = {\n    type: null,\n    fields: null\n  };\n  forEachState_1.default(tokenState, function (state) {\n    if (state.kind === 'Variable') {\n      info.type = variableToType[state.name];\n    } else if (state.kind === 'ListValue') {\n      var nullableType = info.type ? graphql_1.getNullableType(info.type) : undefined;\n      info.type = nullableType instanceof graphql_1.GraphQLList ? nullableType.ofType : null;\n    } else if (state.kind === 'ObjectValue') {\n      var objectType = info.type ? graphql_1.getNamedType(info.type) : undefined;\n      info.fields = objectType instanceof graphql_1.GraphQLInputObjectType ? objectType.getFields() : null;\n    } else if (state.kind === 'ObjectField') {\n      var objectField = state.name && info.fields ? info.fields[state.name] : null;\n      info.type = objectField && objectField.type;\n    }\n  });\n  return info;\n}","map":{"version":3,"sources":["../src/variables/hint.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar codemirror_1 = __importDefault(require(\"codemirror\"));\nvar graphql_1 = require(\"graphql\");\nvar forEachState_1 = __importDefault(require(\"../utils/forEachState\"));\nvar hintList_1 = __importDefault(require(\"../utils/hintList\"));\ncodemirror_1.default.registerHelper('hint', 'graphql-variables', function (editor, options) {\n    var cur = editor.getCursor();\n    var token = editor.getTokenAt(cur);\n    var results = getVariablesHint(cur, token, options);\n    if (results && results.list && results.list.length > 0) {\n        results.from = codemirror_1.default.Pos(results.from.line, results.from.ch);\n        results.to = codemirror_1.default.Pos(results.to.line, results.to.ch);\n        codemirror_1.default.signal(editor, 'hasCompletion', editor, results, token);\n    }\n    return results;\n});\nfunction getVariablesHint(cur, token, options) {\n    var state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    var kind = state.kind;\n    var step = state.step;\n    if (kind === 'Document' && step === 0) {\n        return hintList_1.default(cur, token, [{ text: '{' }]);\n    }\n    var variableToType = options.variableToType;\n    if (!variableToType) {\n        return;\n    }\n    var typeInfo = getTypeInfo(variableToType, token.state);\n    if (kind === 'Document' || (kind === 'Variable' && step === 0)) {\n        var variableNames = Object.keys(variableToType);\n        return hintList_1.default(cur, token, variableNames.map(function (name) { return ({\n            text: \"\\\"\" + name + \"\\\": \",\n            type: variableToType[name],\n        }); }));\n    }\n    if (kind === 'ObjectValue' || (kind === 'ObjectField' && step === 0)) {\n        if (typeInfo.fields) {\n            var inputFields = Object.keys(typeInfo.fields).map(function (fieldName) { return typeInfo.fields[fieldName]; });\n            return hintList_1.default(cur, token, inputFields.map(function (field) { return ({\n                text: \"\\\"\" + field.name + \"\\\": \",\n                type: field.type,\n                description: field.description,\n            }); }));\n        }\n    }\n    if (kind === 'StringValue' ||\n        kind === 'NumberValue' ||\n        kind === 'BooleanValue' ||\n        kind === 'NullValue' ||\n        (kind === 'ListValue' && step === 1) ||\n        (kind === 'ObjectField' && step === 2) ||\n        (kind === 'Variable' && step === 2)) {\n        var namedInputType_1 = typeInfo.type\n            ? graphql_1.getNamedType(typeInfo.type)\n            : undefined;\n        if (namedInputType_1 instanceof graphql_1.GraphQLInputObjectType) {\n            return hintList_1.default(cur, token, [{ text: '{' }]);\n        }\n        else if (namedInputType_1 instanceof graphql_1.GraphQLEnumType) {\n            var values = namedInputType_1.getValues();\n            return hintList_1.default(cur, token, values.map(function (value) { return ({\n                text: \"\\\"\" + value.name + \"\\\"\",\n                type: namedInputType_1,\n                description: value.description,\n            }); }));\n        }\n        else if (namedInputType_1 === graphql_1.GraphQLBoolean) {\n            return hintList_1.default(cur, token, [\n                { text: 'true', type: graphql_1.GraphQLBoolean, description: 'Not false.' },\n                { text: 'false', type: graphql_1.GraphQLBoolean, description: 'Not true.' },\n            ]);\n        }\n    }\n}\nfunction getTypeInfo(variableToType, tokenState) {\n    var info = {\n        type: null,\n        fields: null,\n    };\n    forEachState_1.default(tokenState, function (state) {\n        if (state.kind === 'Variable') {\n            info.type = variableToType[state.name];\n        }\n        else if (state.kind === 'ListValue') {\n            var nullableType = info.type ? graphql_1.getNullableType(info.type) : undefined;\n            info.type =\n                nullableType instanceof graphql_1.GraphQLList ? nullableType.ofType : null;\n        }\n        else if (state.kind === 'ObjectValue') {\n            var objectType = info.type ? graphql_1.getNamedType(info.type) : undefined;\n            info.fields =\n                objectType instanceof graphql_1.GraphQLInputObjectType\n                    ? objectType.getFields()\n                    : null;\n        }\n        else if (state.kind === 'ObjectField') {\n            var objectField = state.name && info.fields ? info.fields[state.name] : null;\n            info.type = objectField && objectField.type;\n        }\n    });\n    return info;\n}\n//# sourceMappingURL=hint.js.map"]},"metadata":{},"sourceType":"script"}