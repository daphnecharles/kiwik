{"ast":null,"code":"/**\n * Zero padding strategy.\n */\nexport var ZeroPadding = {\n  pad: function pad(data, blockSize) {\n    var _data = data; // Shortcut\n\n    var blockSizeBytes = blockSize * 4; // Pad\n\n    _data.clamp();\n\n    _data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);\n  },\n  unpad: function unpad(data) {\n    var _data = data; // Shortcut\n\n    var dataWords = _data.words; // Unpad\n\n    for (var i = _data.sigBytes - 1; i >= 0; i -= 1) {\n      if (dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff) {\n        _data.sigBytes = i + 1;\n        break;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/crypto-es/lib/pad-zeropadding.js"],"names":["ZeroPadding","pad","data","blockSize","_data","blockSizeBytes","clamp","sigBytes","unpad","dataWords","words","i"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,IAAMA,WAAW,GAAG;AACzBC,EAAAA,GADyB,eACrBC,IADqB,EACfC,SADe,EACJ;AACnB,QAAMC,KAAK,GAAGF,IAAd,CADmB,CAGnB;;AACA,QAAMG,cAAc,GAAGF,SAAS,GAAG,CAAnC,CAJmB,CAMnB;;AACAC,IAAAA,KAAK,CAACE,KAAN;;AACAF,IAAAA,KAAK,CAACG,QAAN,IAAkBF,cAAc,IAAKH,IAAI,CAACK,QAAL,GAAgBF,cAAjB,IAAoCA,cAAxC,CAAhC;AACD,GAVwB;AAYzBG,EAAAA,KAZyB,iBAYnBN,IAZmB,EAYb;AACV,QAAME,KAAK,GAAGF,IAAd,CADU,CAGV;;AACA,QAAMO,SAAS,GAAGL,KAAK,CAACM,KAAxB,CAJU,CAMV;;AACA,SAAK,IAAIC,CAAC,GAAGP,KAAK,CAACG,QAAN,GAAiB,CAA9B,EAAiCI,CAAC,IAAI,CAAtC,EAAyCA,CAAC,IAAI,CAA9C,EAAiD;AAC/C,UAAMF,SAAS,CAACE,CAAC,KAAK,CAAP,CAAT,KAAwB,KAAMA,CAAC,GAAG,CAAL,GAAU,CAAxC,GAA8C,IAAnD,EAA0D;AACxDP,QAAAA,KAAK,CAACG,QAAN,GAAiBI,CAAC,GAAG,CAArB;AACA;AACD;AACF;AACF;AAzBwB,CAApB","sourcesContent":["/**\n * Zero padding strategy.\n */\nexport const ZeroPadding = {\n  pad(data, blockSize) {\n    const _data = data;\n\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Pad\n    _data.clamp();\n    _data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n  },\n\n  unpad(data) {\n    const _data = data;\n\n    // Shortcut\n    const dataWords = _data.words;\n\n    // Unpad\n    for (let i = _data.sigBytes - 1; i >= 0; i -= 1) {\n      if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n        _data.sigBytes = i + 1;\n        break;\n      }\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}