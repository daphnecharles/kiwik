{"ast":null,"code":"// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction check(buffer) {\n  if (buffer.length < 8) return false;\n  if (buffer.length > 72) return false;\n  if (buffer[0] !== 0x30) return false;\n  if (buffer[1] !== buffer.length - 2) return false;\n  if (buffer[2] !== 0x02) return false;\n  var lenR = buffer[3];\n  if (lenR === 0) return false;\n  if (5 + lenR >= buffer.length) return false;\n  if (buffer[4 + lenR] !== 0x02) return false;\n  var lenS = buffer[5 + lenR];\n  if (lenS === 0) return false;\n  if (6 + lenR + lenS !== buffer.length) return false;\n  if (buffer[4] & 0x80) return false;\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) return false;\n  if (buffer[lenR + 6] & 0x80) return false;\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80)) return false;\n  return true;\n}\n\nfunction decode(buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short');\n  if (buffer.length > 72) throw new Error('DER sequence length is too long');\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence');\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid');\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer');\n  var lenR = buffer[3];\n  if (lenR === 0) throw new Error('R length is zero');\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long');\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)');\n  var lenS = buffer[5 + lenR];\n  if (lenS === 0) throw new Error('S length is zero');\n  if (6 + lenR + lenS !== buffer.length) throw new Error('S length is invalid');\n  if (buffer[4] & 0x80) throw new Error('R value is negative');\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) throw new Error('R value excessively padded');\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative');\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded'); // non-BIP66 - extract R, S values\n\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  };\n}\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\n\n\nfunction encode(r, s) {\n  var lenR = r.length;\n  var lenS = s.length;\n  if (lenR === 0) throw new Error('R length is zero');\n  if (lenS === 0) throw new Error('S length is zero');\n  if (lenR > 33) throw new Error('R length is too long');\n  if (lenS > 33) throw new Error('S length is too long');\n  if (r[0] & 0x80) throw new Error('R value is negative');\n  if (s[0] & 0x80) throw new Error('S value is negative');\n  if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80)) throw new Error('R value excessively padded');\n  if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80)) throw new Error('S value excessively padded');\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS); // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n\n  signature[0] = 0x30;\n  signature[1] = signature.length - 2;\n  signature[2] = 0x02;\n  signature[3] = r.length;\n  r.copy(signature, 4);\n  signature[4 + lenR] = 0x02;\n  signature[5 + lenR] = s.length;\n  s.copy(signature, 6 + lenR);\n  return signature;\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n};","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/bip66/index.js"],"names":["Buffer","require","check","buffer","length","lenR","lenS","decode","Error","r","slice","s","encode","signature","allocUnsafe","copy","module","exports"],"mappings":"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","sourcesContent":["// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction check (buffer) {\n  if (buffer.length < 8) return false\n  if (buffer.length > 72) return false\n  if (buffer[0] !== 0x30) return false\n  if (buffer[1] !== buffer.length - 2) return false\n  if (buffer[2] !== 0x02) return false\n\n  var lenR = buffer[3]\n  if (lenR === 0) return false\n  if (5 + lenR >= buffer.length) return false\n  if (buffer[4 + lenR] !== 0x02) return false\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) return false\n  if ((6 + lenR + lenS) !== buffer.length) return false\n\n  if (buffer[4] & 0x80) return false\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false\n\n  if (buffer[lenR + 6] & 0x80) return false\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false\n  return true\n}\n\nfunction decode (buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short')\n  if (buffer.length > 72) throw new Error('DER sequence length is too long')\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')\n\n  var lenR = buffer[3]\n  if (lenR === 0) throw new Error('R length is zero')\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long')\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) throw new Error('S length is zero')\n  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')\n\n  if (buffer[4] & 0x80) throw new Error('R value is negative')\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')\n\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')\n\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  }\n}\n\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nfunction encode (r, s) {\n  var lenR = r.length\n  var lenS = s.length\n  if (lenR === 0) throw new Error('R length is zero')\n  if (lenS === 0) throw new Error('S length is zero')\n  if (lenR > 33) throw new Error('R length is too long')\n  if (lenS > 33) throw new Error('S length is too long')\n  if (r[0] & 0x80) throw new Error('R value is negative')\n  if (s[0] & 0x80) throw new Error('S value is negative')\n  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')\n  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')\n\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS)\n\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30\n  signature[1] = signature.length - 2\n  signature[2] = 0x02\n  signature[3] = r.length\n  r.copy(signature, 4)\n  signature[4 + lenR] = 0x02\n  signature[5 + lenR] = s.length\n  s.copy(signature, 6 + lenR)\n\n  return signature\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n"]},"metadata":{},"sourceType":"script"}