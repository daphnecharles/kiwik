{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createMv = configure.configure(function (api) {\n  function mv(_x, _x2) {\n    return _mv.apply(this, arguments);\n  }\n\n  function _mv() {\n    _mv = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sources, destination) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n              if (!Array.isArray(sources)) {\n                sources = [sources];\n              }\n\n              _context.next = 4;\n              return api.post('files/mv', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: sources.concat(destination)\n                }, options)),\n                headers: options.headers\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.text();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _mv.apply(this, arguments);\n  }\n\n  return mv;\n});\nexports.createMv = createMv;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/files/mv.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createMv","api","mv","sources","destination","options","Array","isArray","post","signal","searchParams","arg","concat","headers","res","text"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AAEA,IAAME,QAAQ,GAAGH,SAAS,CAACA,SAAV,CAAoB,UAAAI,GAAG,EAAI;AAAA,WAC3BC,EAD2B;AAAA;AAAA;;AAAA;AAAA,mEAC1C,iBAAkBC,OAAlB,EAA2BC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwCC,cAAAA,OAAxC,2DAAkD,EAAlD;;AACE,kBAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAL,EAA6B;AAC3BA,gBAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACD;;AAHH;AAAA,qBAIoBF,GAAG,CAACO,IAAJ,CAAS,UAAT,EAAqB;AACrCC,gBAAAA,MAAM,EAAEJ,OAAO,CAACI,MADqB;AAErCC,gBAAAA,YAAY,EAAEX,iBAAiB,CAACA,iBAAlB;AACZY,kBAAAA,GAAG,EAAER,OAAO,CAACS,MAAR,CAAeR,WAAf;AADO,mBAETC,OAFS,EAFuB;AAMrCQ,gBAAAA,OAAO,EAAER,OAAO,CAACQ;AANoB,eAArB,CAJpB;;AAAA;AAIQC,cAAAA,GAJR;AAAA;AAAA,qBAYQA,GAAG,CAACC,IAAJ,EAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD0C;AAAA;AAAA;;AAe1C,SAAOb,EAAP;AACD,CAhBgB,CAAjB;AAkBAP,OAAO,CAACK,QAAR,GAAmBA,QAAnB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createMv = configure.configure(api => {\n  async function mv(sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources];\n    }\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return mv;\n});\n\nexports.createMv = createMv;\n"]},"metadata":{},"sourceType":"script"}