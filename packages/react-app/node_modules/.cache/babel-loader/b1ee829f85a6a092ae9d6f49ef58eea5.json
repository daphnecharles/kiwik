{"ast":null,"code":"import React from 'react';\nimport TypeLink from './TypeLink';\nimport MarkdownContent from './MarkdownContent';\nexport default function SchemaDoc(_a) {\n  var schema = _a.schema,\n      onClickType = _a.onClickType;\n  var queryType = schema.getQueryType();\n  var mutationType = schema.getMutationType && schema.getMutationType();\n  var subscriptionType = schema.getSubscriptionType && schema.getSubscriptionType();\n  return React.createElement(\"div\", null, React.createElement(MarkdownContent, {\n    className: \"doc-type-description\",\n    markdown: schema.description || 'A GraphQL schema provides a root type for each kind of operation.'\n  }), React.createElement(\"div\", {\n    className: \"doc-category\"\n  }, React.createElement(\"div\", {\n    className: \"doc-category-title\"\n  }, 'root types'), React.createElement(\"div\", {\n    className: \"doc-category-item\"\n  }, React.createElement(\"span\", {\n    className: \"keyword\"\n  }, 'query'), ': ', React.createElement(TypeLink, {\n    type: queryType,\n    onClick: onClickType\n  })), mutationType && React.createElement(\"div\", {\n    className: \"doc-category-item\"\n  }, React.createElement(\"span\", {\n    className: \"keyword\"\n  }, 'mutation'), ': ', React.createElement(TypeLink, {\n    type: mutationType,\n    onClick: onClickType\n  })), subscriptionType && React.createElement(\"div\", {\n    className: \"doc-category-item\"\n  }, React.createElement(\"span\", {\n    className: \"keyword\"\n  }, 'subscription'), ': ', React.createElement(TypeLink, {\n    type: subscriptionType,\n    onClick: onClickType\n  }))));\n}","map":{"version":3,"sources":["../../../src/components/DocExplorer/SchemaDoc.tsx"],"names":[],"mappings":"AAOA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,QAAP,MAAqB,YAArB;AACA,OAAO,eAAP,MAA4B,mBAA5B;AAUA,eAAc,SAAU,SAAV,CAAoB,EAApB,EAA2D;MAArC,MAAM,GAAA,EAAA,CAAA,M;MAAE,WAAW,GAAA,EAAA,CAAA,W;AACrD,MAAM,SAAS,GAAG,MAAM,CAAC,YAAP,EAAlB;AACA,MAAM,YAAY,GAAG,MAAM,CAAC,eAAP,IAA0B,MAAM,CAAC,eAAP,EAA/C;AACA,MAAM,gBAAgB,GACpB,MAAM,CAAC,mBAAP,IAA8B,MAAM,CAAC,mBAAP,EADhC;AAGA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AACd,IAAA,SAAS,EAAC,sBADI;AAEd,IAAA,QAAQ,EACN,MAAM,CAAC,WAAP,IACA;AAJY,GAAhB,CADF,EAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAqC,YAArC,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAA2B,OAA3B,CADF,EAEG,IAFH,EAGE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,IAAA,IAAI,EAAE,SAAP;AAAkB,IAAA,OAAO,EAAE;AAA3B,GAAT,CAHF,CAFF,EAOG,YAAY,IACX,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAA2B,UAA3B,CADF,EAEG,IAFH,EAGE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,IAAA,IAAI,EAAE,YAAP;AAAqB,IAAA,OAAO,EAAE;AAA9B,GAAT,CAHF,CARJ,EAcG,gBAAgB,IACf,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAA2B,cAA3B,CADF,EAEG,IAFH,EAGE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,IAAA,IAAI,EAAE,gBAAP;AAAyB,IAAA,OAAO,EAAE;AAAlC,GAAT,CAHF,CAfJ,CARF,CADF;AAiCD","sourceRoot":"","sourcesContent":["import React from 'react';\nimport TypeLink from './TypeLink';\nimport MarkdownContent from './MarkdownContent';\nexport default function SchemaDoc(_a) {\n    var schema = _a.schema, onClickType = _a.onClickType;\n    var queryType = schema.getQueryType();\n    var mutationType = schema.getMutationType && schema.getMutationType();\n    var subscriptionType = schema.getSubscriptionType && schema.getSubscriptionType();\n    return (React.createElement(\"div\", null,\n        React.createElement(MarkdownContent, { className: \"doc-type-description\", markdown: schema.description ||\n                'A GraphQL schema provides a root type for each kind of operation.' }),\n        React.createElement(\"div\", { className: \"doc-category\" },\n            React.createElement(\"div\", { className: \"doc-category-title\" }, 'root types'),\n            React.createElement(\"div\", { className: \"doc-category-item\" },\n                React.createElement(\"span\", { className: \"keyword\" }, 'query'),\n                ': ',\n                React.createElement(TypeLink, { type: queryType, onClick: onClickType })),\n            mutationType && (React.createElement(\"div\", { className: \"doc-category-item\" },\n                React.createElement(\"span\", { className: \"keyword\" }, 'mutation'),\n                ': ',\n                React.createElement(TypeLink, { type: mutationType, onClick: onClickType }))),\n            subscriptionType && (React.createElement(\"div\", { className: \"doc-category-item\" },\n                React.createElement(\"span\", { className: \"keyword\" }, 'subscription'),\n                ': ',\n                React.createElement(TypeLink, { type: subscriptionType, onClick: onClickType }))))));\n}\n//# sourceMappingURL=SchemaDoc.js.map"]},"metadata":{},"sourceType":"module"}