{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\nimport Fortmatic from \"fortmatic\";\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport { ALCHEMY_KEY, INFURA_ID } from \"../constants\"; // Coinbase walletLink init\n\nvar walletLink = new WalletLink({\n  appName: \"coinbase\"\n}); // WalletLink provider\n\nvar walletLinkProvider = walletLink.makeWeb3Provider(\"https://eth-mainnet.alchemyapi.io/v2/\".concat(ALCHEMY_KEY), 1); // Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n\n/**\n  Web3 modal helps us \"connect\" external wallets:\n**/\n\nvar web3ModalSetup = function web3ModalSetup() {\n  return new Web3Modal({\n    network: \"mainnet\",\n    // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n    cacheProvider: true,\n    // optional\n    theme: \"light\",\n    // optional. Change to \"dark\" for a dark theme.\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider,\n        // required\n        options: {\n          bridge: \"https://polygon.bridge.walletconnect.org\",\n          infuraId: INFURA_ID,\n          rpc: {\n            10: \"https://mainnet.optimism.io\",\n            // xDai\n            100: \"https://rpc.gnosischain.com\",\n            // xDai\n            137: \"https://polygon-rpc.com\",\n            31337: \"http://localhost:8545\",\n            42161: \"https://arb1.arbitrum.io/rpc\",\n            80001: \"https://rpc-mumbai.maticvigil.com\"\n          }\n        }\n      },\n      portis: {\n        display: {\n          logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n          name: \"Portis\",\n          description: \"Connect to Portis App\"\n        },\n        package: Portis,\n        options: {\n          id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"\n        }\n      },\n      fortmatic: {\n        package: Fortmatic,\n        // required\n        options: {\n          key: \"pk_live_5A7C91B2FC585A17\" // required\n\n        }\n      },\n      // torus: {\n      //   package: Torus,\n      //   options: {\n      //     networkParams: {\n      //       host: \"https://localhost:8545\", // optional\n      //       chainId: 1337, // optional\n      //       networkId: 1337 // optional\n      //     },\n      //     config: {\n      //       buildEnv: \"development\" // optional\n      //     },\n      //   },\n      // },\n      \"custom-walletlink\": {\n        display: {\n          logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n          name: \"Coinbase\",\n          description: \"Connect to Coinbase Wallet (not Coinbase App)\"\n        },\n        package: walletLinkProvider,\n        connector: function () {\n          var _connector = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider, _options) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return provider.enable();\n\n                  case 2:\n                    return _context.abrupt(\"return\", provider);\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function connector(_x, _x2) {\n            return _connector.apply(this, arguments);\n          }\n\n          return connector;\n        }()\n      },\n      authereum: {\n        package: Authereum // required\n\n      }\n    }\n  });\n};\n\nexport default web3ModalSetup;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/helpers/Web3ModalSetup.js"],"names":["Portis","WalletConnectProvider","Authereum","Fortmatic","WalletLink","Web3Modal","ALCHEMY_KEY","INFURA_ID","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3ModalSetup","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","name","description","id","fortmatic","key","connector","provider","_options","enable","authereum"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC,C,CAEA;;AACA,IAAMC,UAAU,GAAG,IAAIJ,UAAJ,CAAe;AAChCK,EAAAA,OAAO,EAAE;AADuB,CAAf,CAAnB,C,CAIA;;AACA,IAAMC,kBAAkB,GAAGF,UAAU,CAACG,gBAAX,gDAAoEL,WAApE,GAAmF,CAAnF,CAA3B,C,CAEA;;AACA;AACA;AACA;;AACA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SACrB,IAAIP,SAAJ,CAAc;AACZQ,IAAAA,OAAO,EAAE,SADG;AACQ;AACpBC,IAAAA,aAAa,EAAE,IAFH;AAES;AACrBC,IAAAA,KAAK,EAAE,OAHK;AAGI;AAChBC,IAAAA,eAAe,EAAE;AACfC,MAAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAEjB,qBADI;AACmB;AAChCkB,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,0CADD;AAEPC,UAAAA,QAAQ,EAAEd,SAFH;AAGPe,UAAAA,GAAG,EAAE;AACH,gBAAI,6BADD;AACgC;AACnC,iBAAK,6BAFF;AAEiC;AACpC,iBAAK,yBAHF;AAIH,mBAAO,uBAJJ;AAKH,mBAAO,8BALJ;AAMH,mBAAO;AANJ;AAHE;AAFI,OADA;AAgBfC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,sGADC;AAEPC,UAAAA,IAAI,EAAE,QAFC;AAGPC,UAAAA,WAAW,EAAE;AAHN,SADH;AAMNT,QAAAA,OAAO,EAAElB,MANH;AAONmB,QAAAA,OAAO,EAAE;AACPS,UAAAA,EAAE,EAAE;AADG;AAPH,OAhBO;AA2BfC,MAAAA,SAAS,EAAE;AACTX,QAAAA,OAAO,EAAEf,SADA;AACW;AACpBgB,QAAAA,OAAO,EAAE;AACPW,UAAAA,GAAG,EAAE,0BADE,CAC0B;;AAD1B;AAFA,OA3BI;AAiCf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAqB;AACnBN,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,2GADC;AAEPC,UAAAA,IAAI,EAAE,UAFC;AAGPC,UAAAA,WAAW,EAAE;AAHN,SADU;AAMnBT,QAAAA,OAAO,EAAER,kBANU;AAOnBqB,QAAAA,SAAS;AAAA,oFAAE,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACHD,QAAQ,CAACE,MAAT,EADG;;AAAA;AAAA,qDAEFF,QAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPU,OA9CN;AA0DfG,MAAAA,SAAS,EAAE;AACTjB,QAAAA,OAAO,EAAEhB,SADA,CACW;;AADX;AA1DI;AAJL,GAAd,CADqB;AAAA,CAAvB;;AAqEA,eAAeU,cAAf","sourcesContent":["import Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\nimport Fortmatic from \"fortmatic\";\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport { ALCHEMY_KEY, INFURA_ID } from \"../constants\";\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/**\n  Web3 modal helps us \"connect\" external wallets:\n**/\nconst web3ModalSetup = () =>\n  new Web3Modal({\n    network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n    cacheProvider: true, // optional\n    theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n          bridge: \"https://polygon.bridge.walletconnect.org\",\n          infuraId: INFURA_ID,\n          rpc: {\n            10: \"https://mainnet.optimism.io\", // xDai\n            100: \"https://rpc.gnosischain.com\", // xDai\n            137: \"https://polygon-rpc.com\",\n            31337: \"http://localhost:8545\",\n            42161: \"https://arb1.arbitrum.io/rpc\",\n            80001: \"https://rpc-mumbai.maticvigil.com\",\n          },\n        },\n      },\n      portis: {\n        display: {\n          logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n          name: \"Portis\",\n          description: \"Connect to Portis App\",\n        },\n        package: Portis,\n        options: {\n          id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n        },\n      },\n      fortmatic: {\n        package: Fortmatic, // required\n        options: {\n          key: \"pk_live_5A7C91B2FC585A17\", // required\n        },\n      },\n      // torus: {\n      //   package: Torus,\n      //   options: {\n      //     networkParams: {\n      //       host: \"https://localhost:8545\", // optional\n      //       chainId: 1337, // optional\n      //       networkId: 1337 // optional\n      //     },\n      //     config: {\n      //       buildEnv: \"development\" // optional\n      //     },\n      //   },\n      // },\n      \"custom-walletlink\": {\n        display: {\n          logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n          name: \"Coinbase\",\n          description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n        },\n        package: walletLinkProvider,\n        connector: async (provider, _options) => {\n          await provider.enable();\n          return provider;\n        },\n      },\n      authereum: {\n        package: Authereum, // required\n      },\n    },\n  });\n\nexport default web3ModalSetup;\n"]},"metadata":{},"sourceType":"module"}