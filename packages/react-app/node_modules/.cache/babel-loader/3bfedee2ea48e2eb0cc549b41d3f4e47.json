{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Coder } from \"./abstract-coder\";\nexport var BooleanCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(BooleanCoder, _Coder);\n\n  var _super = _createSuper(BooleanCoder);\n\n  function BooleanCoder(localName) {\n    _classCallCheck(this, BooleanCoder);\n\n    return _super.call(this, \"bool\", \"bool\", localName, false);\n  }\n\n  _createClass(BooleanCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return false;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      return writer.writeValue(value ? 1 : 0);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n  }]);\n\n  return BooleanCoder;\n}(Coder);","map":{"version":3,"sources":["../../src.ts/coders/boolean.ts"],"names":[],"mappings":"AAAA;;;;;;AAEA,SAAS,KAAT,QAAsC,kBAAtC;AAEA,WAAa,YAAb;AAAA;;AAAA;;AAEI,wBAAY,SAAZ,EAA6B;AAAA;;AAAA,6BACnB,MADmB,EACX,MADW,EACH,SADG,EACQ,KADR;AAE5B;;AAJL;AAAA;AAAA,WAMI,wBAAY;AACR,aAAO,KAAP;AACH;AARL;AAAA;AAAA,WAUI,gBAAO,MAAP,EAAuB,KAAvB,EAAqC;AACjC,aAAO,MAAM,CAAC,UAAP,CAAkB,KAAK,GAAG,CAAH,GAAM,CAA7B,CAAP;AACH;AAZL;AAAA;AAAA,WAcI,gBAAO,MAAP,EAAqB;AACjB,aAAO,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,CAAC,MAAM,CAAC,SAAP,GAAmB,MAAnB,EAA1B,CAAP;AACH;AAhBL;;AAAA;AAAA,EAAkC,KAAlC","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map"]},"metadata":{},"sourceType":"module"}