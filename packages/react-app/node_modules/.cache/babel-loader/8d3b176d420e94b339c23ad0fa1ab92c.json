{"ast":null,"code":"export function isValidRoute(route) {\n  if (route.includes(\"*\")) {\n    return isValidWildcardRoute(route);\n  }\n\n  if (/\\W/g.test(route)) {\n    return false;\n  }\n\n  return true;\n}\nexport function isValidDefaultRoute(route) {\n  return route === \"*\";\n}\nexport function isValidWildcardRoute(route) {\n  if (isValidDefaultRoute(route)) {\n    return true;\n  }\n\n  if (!route.includes(\"*\")) {\n    return false;\n  }\n\n  if (route.split(\"*\").length !== 2) {\n    return false;\n  }\n\n  if (route.split(\"*\").filter(function (x) {\n    return x.trim() === \"\";\n  }).length !== 1) {\n    return false;\n  }\n\n  return true;\n}\nexport function isValidLeadingWildcardRoute(route) {\n  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nexport function isValidTrailingWildcardRoute(route) {\n  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n}","map":{"version":3,"sources":["../../src/routing.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,YAAV,CAAuB,KAAvB,EAAoC;AACxC,MAAI,KAAK,CAAC,QAAN,CAAe,GAAf,CAAJ,EAAyB;AACvB,WAAO,oBAAoB,CAAC,KAAD,CAA3B;AACD;;AACD,MAAI,MAAM,IAAN,CAAW,KAAX,CAAJ,EAAuB;AACrB,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD;AAED,OAAM,SAAU,mBAAV,CAA8B,KAA9B,EAA2C;AAC/C,SAAO,KAAK,KAAK,GAAjB;AACD;AAED,OAAM,SAAU,oBAAV,CAA+B,KAA/B,EAA4C;AAChD,MAAI,mBAAmB,CAAC,KAAD,CAAvB,EAAgC;AAC9B,WAAO,IAAP;AACD;;AACD,MAAI,CAAC,KAAK,CAAC,QAAN,CAAe,GAAf,CAAL,EAA0B;AACxB,WAAO,KAAP;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,CAAY,GAAZ,EAAiB,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WAAO,KAAP;AACD;;AACD,MAAI,KAAK,CAAC,KAAN,CAAY,GAAZ,EAAiB,MAAjB,CAAwB,UAAA,CAAC;AAAA,WAAI,CAAC,CAAC,IAAF,OAAa,EAAjB;AAAA,GAAzB,EAA8C,MAA9C,KAAyD,CAA7D,EAAgE;AAC9D,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD;AAED,OAAM,SAAU,2BAAV,CAAsC,KAAtC,EAAmD;AACvD,SAAO,CAAC,mBAAmB,CAAC,KAAD,CAApB,IAA+B,oBAAoB,CAAC,KAAD,CAAnD,IAA8D,CAAC,KAAK,CAAC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,EAAoB,IAApB,EAAtE;AACD;AAED,OAAM,SAAU,4BAAV,CAAuC,KAAvC,EAAoD;AACxD,SAAO,CAAC,mBAAmB,CAAC,KAAD,CAApB,IAA+B,oBAAoB,CAAC,KAAD,CAAnD,IAA8D,CAAC,KAAK,CAAC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,EAAoB,IAApB,EAAtE;AACD","sourceRoot":"","sourcesContent":["export function isValidRoute(route) {\n    if (route.includes(\"*\")) {\n        return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n        return false;\n    }\n    return true;\n}\nexport function isValidDefaultRoute(route) {\n    return route === \"*\";\n}\nexport function isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n        return true;\n    }\n    if (!route.includes(\"*\")) {\n        return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n        return false;\n    }\n    if (route.split(\"*\").filter(x => x.trim() === \"\").length !== 1) {\n        return false;\n    }\n    return true;\n}\nexport function isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nexport function isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n}\n//# sourceMappingURL=routing.js.map"]},"metadata":{},"sourceType":"module"}