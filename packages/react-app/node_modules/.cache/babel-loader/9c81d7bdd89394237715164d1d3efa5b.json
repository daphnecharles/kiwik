{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/Address.jsx\",\n    _s = $RefreshSig$();\n\nimport { Skeleton, Typography } from \"antd\";\nimport React from \"react\"; // import { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nimport Blockies from \"react-blockies\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\"; // changed value={address} to address={address}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Text = Typography.Text;\n/** \n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n**/\n\nvar blockExplorerLink = function blockExplorerLink(address, blockExplorer) {\n  return \"\".concat(blockExplorer || \"https://etherscan.io/\", \"address/\").concat(address);\n};\n\nexport default function Address(props) {\n  _s();\n\n  // const { currentTheme } = useThemeSwitcher();\n  var address = props.value || props.address;\n  var ens = useLookupAddress(props.ensProvider, address);\n  var ensSplit = ens && ens.split(\".\");\n  var validEnsCheck = ensSplit && ensSplit[ensSplit.length - 1] === \"eth\";\n  var etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  var displayAddress = (address === null || address === void 0 ? void 0 : address.substr(0, 5)) + \"...\" + (address === null || address === void 0 ? void 0 : address.substr(-4));\n\n  if (validEnsCheck) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  if (!address) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        avatar: true,\n        paragraph: {\n          rows: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.minimized) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        verticalAlign: \"middle\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          color: \"#222222\"\n        },\n        target: \"_blank\",\n        href: etherscanLink,\n        rel: \"noopener noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(Blockies, {\n          seed: address.toLowerCase(),\n          size: 8,\n          scale: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        verticalAlign: \"middle\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Blockies, {\n        seed: address.toLowerCase(),\n        size: 8,\n        scale: props.fontSize ? props.fontSize / 7 : 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        verticalAlign: \"middle\",\n        paddingLeft: 5,\n        fontSize: props.fontSize ? props.fontSize : 28\n      },\n      children: props.onChange ? /*#__PURE__*/_jsxDEV(Text, {\n        editable: {\n          onChange: props.onChange\n        },\n        copyable: {\n          text: address\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            color: \"#222222\"\n          },\n          target: \"_blank\",\n          href: etherscanLink,\n          rel: \"noopener noreferrer\",\n          children: displayAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Text, {\n        copyable: {\n          text: address\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            color: \"#222222\"\n          },\n          target: \"_blank\",\n          href: etherscanLink,\n          rel: \"noopener noreferrer\",\n          children: displayAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Address, \"qhlnXq8w9BJ6Ge8iNyUqy7KaEw4=\", false, function () {\n  return [useLookupAddress];\n});\n\n_c = Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/Address.jsx"],"names":["Skeleton","Typography","React","Blockies","useLookupAddress","Text","blockExplorerLink","address","blockExplorer","Address","props","value","ens","ensProvider","ensSplit","split","validEnsCheck","length","etherscanLink","displayAddress","substr","size","rows","minimized","verticalAlign","color","toLowerCase","fontSize","paddingLeft","onChange","text"],"mappings":"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","sourcesContent":["import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\n// import { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Blockies from \"react-blockies\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\n\n// changed value={address} to address={address}\n\nconst { Text } = Typography;\n\n/** \n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n**/\n\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}address/${address}`;\n\nexport default function Address(props) {\n  // const { currentTheme } = useThemeSwitcher();\n  const address = props.value || props.address;\n  const ens = useLookupAddress(props.ensProvider, address);\n  const ensSplit = ens && ens.split(\".\");\n  const validEnsCheck = ensSplit && ensSplit[ensSplit.length - 1] === \"eth\";\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  let displayAddress = address?.substr(0, 5) + \"...\" + address?.substr(-4);\n\n  if (validEnsCheck) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{ color: \"#222222\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {props.onChange ? (\n          <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\n            <a\n              style={{ color: \"#222222\" }}\n              target=\"_blank\"\n              href={etherscanLink}\n              rel=\"noopener noreferrer\"\n            >\n              {displayAddress}\n            </a>\n          </Text>\n        ) : (\n          <Text copyable={{ text: address }}>\n            <a\n              style={{ color: \"#222222\" }}\n              target=\"_blank\"\n              href={etherscanLink}\n              rel=\"noopener noreferrer\"\n            >\n              {displayAddress}\n            </a>\n          </Text>\n        )}\n      </span>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}