{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos; // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\",\n        type,\n        startPos = start.ch;\n\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n\n      if (state == \"start\") {\n        if (cat != \"o\") {\n          state = \"in\";\n          type = cat;\n        } else startPos = pos + dir;\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n\n          if (type == \"W\" && cat == \"w\" && dir > 0) {\n            // From uppercase to lowercase\n            if (pos == startPos + 1) {\n              type = \"w\";\n              continue;\n            } else pos--;\n          }\n\n          break;\n        }\n      }\n    }\n\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function (range) {\n      if (cm.display.shift || cm.doc.extend || range.empty()) return findPosSubword(cm.doc, range.head, dir);else return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function (cm) {\n    moveSubword(cm, -1);\n  };\n\n  cmds.goSubwordRight = function (cm) {\n    moveSubword(cm, 1);\n  };\n\n  cmds.scrollLineUp = function (cm) {\n    var info = cm.getScrollInfo();\n\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine) cm.execCommand(\"goLineUp\");\n    }\n\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n\n  cmds.scrollLineDown = function (cm) {\n    var info = cm.getScrollInfo();\n\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\") + 1;\n      if (cm.getCursor().line <= visibleTopLine) cm.execCommand(\"goLineDown\");\n    }\n\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function (cm) {\n    var ranges = cm.listSelections(),\n        lineRanges = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(),\n          to = ranges[i].to();\n\n      for (var line = from.line; line <= to.line; ++line) {\n        if (!(to.line > from.line && line == to.line && to.ch == 0)) lineRanges.push({\n          anchor: line == from.line ? from : Pos(line, 0),\n          head: line == to.line ? to : Pos(line)\n        });\n      }\n    }\n\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function (cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {\n      scroll: false\n    });\n  };\n\n  cmds.selectLine = function (cm) {\n    var ranges = cm.listSelections(),\n        extended = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({\n        anchor: Pos(range.from().line, 0),\n        head: Pos(range.to().line + 1, 0)\n      });\n    }\n\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass;\n    cm.operation(function () {\n      var len = cm.listSelections().length,\n          newSelection = [],\n          last = -1;\n\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({\n          head: at,\n          anchor: at\n        });\n        last = head.line + 1;\n      }\n\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function (cm) {\n    return insertLine(cm, false);\n  };\n\n  cmds.insertLineBefore = function (cm) {\n    return insertLine(cm, true);\n  };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch,\n        end = start,\n        line = cm.getLine(pos.line);\n\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) {\n      --start;\n    }\n\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) {\n      ++end;\n    }\n\n    return {\n      from: Pos(pos.line, start),\n      to: Pos(pos.line, end),\n      word: line.slice(start, end)\n    };\n  }\n\n  cmds.selectNextOccurrence = function (cm) {\n    var from = cm.getCursor(\"from\"),\n        to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return;\n      cm.addSelection(cur.from(), cur.to());\n    }\n\n    if (fullWord) cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function (cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"),\n        prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections().filter(function (sel) {\n        return sel.anchor != prevAnchor || sel.head != prevHead;\n      }));\n    }\n  };\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(),\n        newRanges = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ? range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ? range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {\n        anchor: newAnchor,\n        head: newHead\n      };\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n\n    cm.setSelections(newRanges);\n  }\n\n  cmds.addCursorToPrevLine = function (cm) {\n    addCursorToSelection(cm, -1);\n  };\n\n  cmds.addCursorToNextLine = function (cm) {\n    addCursorToSelection(cm, 1);\n  };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++) {\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 && CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true;\n    }\n\n    return false;\n  }\n\n  var mirror = \"(){}[]\";\n\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(),\n        newRanges = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i],\n          pos = range.head,\n          opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 && CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({\n              anchor: startPos,\n              head: closing.pos\n            });\n            break;\n          }\n        }\n\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function (cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n\n  cmds.selectBetweenBrackets = function (cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined;\n  }\n\n  cmds.goToBracket = function (cm) {\n    cm.extendSelectionsBy(function (range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function (cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass;\n    var ranges = cm.listSelections(),\n        linesToMove = [],\n        at = cm.firstLine() - 1,\n        newSels = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i],\n          from = range.from().line - 1,\n          to = range.to().line;\n      newSels.push({\n        anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n        head: Pos(range.head.line - 1, range.head.ch)\n      });\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n\n    cm.operation(function () {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i],\n            to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine()) cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");else cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function (cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass;\n    var ranges = cm.listSelections(),\n        linesToMove = [],\n        at = cm.lastLine() + 1;\n\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i],\n          from = range.to().line + 1,\n          to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n\n    cm.operation(function () {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i],\n            to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine()) cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");else cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function (cm) {\n    cm.toggleComment({\n      indent: true\n    });\n  };\n\n  cmds.joinLines = function (cm) {\n    var ranges = cm.listSelections(),\n        joined = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i],\n          from = range.from();\n      var start = from.line,\n          end = range.to().line;\n\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end) {\n        end = ranges[++i].to().line;\n      }\n\n      joined.push({\n        start: start,\n        end: end,\n        anchor: !range.empty() && from\n      });\n    }\n\n    cm.operation(function () {\n      var offset = 0,\n          ranges = [];\n\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch),\n            head;\n\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n\n        ranges.push({\n          anchor: anchor || head,\n          head: head\n        });\n      }\n\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function (cm) {\n    cm.operation(function () {\n      var rangeCount = cm.listSelections().length;\n\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty()) cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));else cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n\n      cm.scrollIntoView();\n    });\n  };\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass;\n    var ranges = cm.listSelections(),\n        toSort = [],\n        selected;\n\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line,\n          to = range.to().line;\n\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to) {\n        to = ranges[++i].to().line;\n      }\n\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n\n    if (toSort.length) selected = true;else toSort.push(cm.firstLine(), cm.lastLine());\n    cm.operation(function () {\n      var ranges = [];\n\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i],\n            to = toSort[i + 1];\n        var start = Pos(from, 0),\n            end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive) lines.sort(function (a, b) {\n          return a < b ? -direction : a == b ? 0 : direction;\n        });else lines.sort(function (a, b) {\n          var au = a.toUpperCase(),\n              bu = b.toUpperCase();\n\n          if (au != bu) {\n            a = au;\n            b = bu;\n          }\n\n          return a < b ? -direction : a == b ? 0 : direction;\n        });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({\n          anchor: start,\n          head: Pos(to + 1, 0)\n        });\n      }\n\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function (cm) {\n    sortLines(cm, true, 1);\n  };\n\n  cmds.reverseSortLines = function (cm) {\n    sortLines(cm, true, -1);\n  };\n\n  cmds.sortLinesInsensitive = function (cm) {\n    sortLines(cm, false, 1);\n  };\n\n  cmds.reverseSortLinesInsensitive = function (cm) {\n    sortLines(cm, false, -1);\n  };\n\n  cmds.nextBookmark = function (cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function (cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found) marks.pop();else return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function (cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(),\n          to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n\n          for (var k = 0; k < marks.length; k++) {\n            if (marks[k] == found[j]) marks.splice(k--, 1);\n          }\n\n          break;\n        }\n      }\n\n      if (j == found.length) marks.push(cm.markText(from, to, {\n        sublimeBookmark: true,\n        clearWhenEmpty: false\n      }));\n    }\n  };\n\n  cmds.clearBookmarks = function (cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      marks[i].clear();\n    }\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function (cm) {\n    var marks = cm.state.sublimeBookmarks,\n        ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found) marks.splice(i--, 0);else ranges.push({\n        anchor: found.from,\n        head: found.to\n      });\n    }\n    if (ranges.length) cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function () {\n      var ranges = cm.listSelections(),\n          indices = [],\n          replacements = [];\n\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n\n        if (range.empty()) {\n          indices.push(i);\n          replacements.push(\"\");\n        } else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n\n      cm.replaceSelections(replacements, \"around\", \"case\");\n\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function (cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n    cm.operation(function () {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({\n          line: cursor.line,\n          ch: 0\n        }, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\")); // Delete by one character by default\n\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line, CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit)); // Smart delete only if we found a valid prevIndent location\n\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function (cm) {\n    cm.operation(function () {\n      var ranges = cm.listSelections();\n\n      for (var i = ranges.length - 1; i >= 0; i--) {\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      }\n\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function (cm) {\n    modifyWordOrSelection(cm, function (str) {\n      return str.toUpperCase();\n    });\n  };\n\n  cmds.downcaseAtCursor = function (cm) {\n    modifyWordOrSelection(cm, function (str) {\n      return str.toLowerCase();\n    });\n  };\n\n  cmds.setSublimeMark = function (cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n\n  cmds.selectToSublimeMark = function (cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n\n  cmds.deleteToSublimeMark = function (cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n\n    if (found) {\n      var from = cm.getCursor(),\n          to = found;\n\n      if (CodeMirror.cmpPos(from, to) > 0) {\n        var tmp = to;\n        to = from;\n        from = tmp;\n      }\n\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n\n  cmds.swapWithSublimeMark = function (cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n\n  cmds.sublimeYank = function (cm) {\n    if (cm.state.sublimeKilled != null) cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function (cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"),\n        to = cm.getCursor(\"to\");\n\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n\n    return {\n      from: from,\n      to: to,\n      query: cm.getRange(from, to),\n      word: word\n    };\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0) : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious()) cm.setSelection(cur.from(), cur.to());else if (target.word) cm.setSelection(target.from, target.to);\n    }\n  }\n\n  ;\n\n  cmds.findUnder = function (cm) {\n    findAndGoTo(cm, true);\n  };\n\n  cmds.findUnderPrevious = function (cm) {\n    findAndGoTo(cm, false);\n  };\n\n  cmds.findAllUnder = function (cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n\n    while (cur.findNext()) {\n      matches.push({\n        anchor: cur.from(),\n        head: cur.to()\n      });\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch) primaryIndex++;\n    }\n\n    cm.setSelections(matches, primaryIndex);\n  };\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/codemirror/keymap/sublime.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","cmds","commands","Pos","findPosSubword","doc","start","dir","ch","clipPos","line","getLine","length","state","type","startPos","pos","e","i","next","charAt","cat","isWordChar","toUpperCase","moveSubword","cm","extendSelectionsBy","range","display","shift","extend","empty","head","from","to","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","top","clientHeight","getCursor","execCommand","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","ranges","listSelections","lineRanges","push","anchor","setSelections","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLine","above","isReadOnly","Pass","operation","len","newSelection","last","at","replaceRange","indentLine","insertLineAfter","insertLineBefore","wordAt","end","word","slice","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","cmpPos","text","getRange","query","RegExp","cur","getSearchCursor","found","findNext","firstLine","isSelectedRange","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToSelection","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","addCursorToPrevLine","addCursorToNextLine","mirror","selectBetweenBrackets","opening","scanForBracket","closing","indexOf","selectScope","puncType","test","undefined","goToBracket","getTokenTypeAt","prev","swapLineUp","linesToMove","newSels","lastLine","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","exec","duplicateLine","rangeCount","sortLines","caseSensitive","direction","toSort","selected","lines","sort","a","b","au","bu","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","marks","sublimeBookmarks","current","find","prevBookmark","unshift","pop","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","clear","k","splice","markText","clearWhenEmpty","clearBookmarks","selectBookmarks","modifyWordOrSelection","indices","replacements","replaceSelections","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","str","downcaseAtCursor","toLowerCase","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","getTarget","findAndGoTo","forward","target","findPrevious","findUnder","findUnderPrevious","findAllUnder","matches","primaryIndex","keyMap","macSublime","normalizeKeyMap","pcSublime","mac","default","macDefault","sublime"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"]},"metadata":{},"sourceType":"script"}