{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkProvider = void 0;\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar util_1 = require(\"../util\");\n\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\n\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\n\nvar JSONRPC_1 = require(\"./JSONRPC\");\n\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\n\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\n\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\n\nvar LOCAL_STORAGE_ADDRESSES_KEY = \"Addresses\";\n\nvar WalletLinkProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(WalletLinkProvider, _safe_event_emitter_);\n\n  var _super = _createSuper(WalletLinkProvider);\n\n  function WalletLinkProvider(options) {\n    var _this;\n\n    _classCallCheck(this, WalletLinkProvider);\n\n    _this = _super.call(this);\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false; // true if mobile client has sent message to override jsonRpcUrl+chainId\n\n    _this.isChainOverridden = false;\n    _this._send = _this.send;\n    _this._sendAsync = _this.sendAsync;\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.arbitraryRequest = _this.arbitraryRequest.bind(_assertThisInitialized(_this));\n    _this.childRequestEthereumAccounts = _this.childRequestEthereumAccounts.bind(_assertThisInitialized(_this));\n    _this._chainId = util_1.ensureIntNumber(options.chainId || 1);\n    _this._jsonRpcUrl = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    var chainIdStr = util_1.prepend0x(_this._chainId.toString(16)); // indicate that we've connected, for EIP-1193 compliance\n\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n\n    var cachedAddresses = _this._storage.getItem(LOCAL_STORAGE_ADDRESSES_KEY);\n\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses;\n\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n\n    if (_this._addresses.length > 0) {\n      _this.initializeRelay();\n    }\n\n    return _this;\n  }\n\n  _createClass(WalletLinkProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this._chainId.toString(10);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return util_1.prepend0x(this._chainId.toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this._jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      if (this.isChainOverridden) return;\n      this.updateProviderInfo(jsonRpcUrl, chainId, false);\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n      if (fromRelay) this.isChainOverridden = true;\n      var originalChainId = this._chainId;\n      this._chainId = util_1.ensureIntNumber(chainId);\n      var chainChanged = this._chainId !== originalChainId;\n      this._jsonRpcUrl = jsonRpcUrl;\n\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this._chainId);\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this._addresses.length > 0)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._addresses);\n\n              case 2:\n                _context.next = 4;\n                return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.initializeRelay().then(function (relay) {\n        return relay.resetAndReload();\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      } // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n\n\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      } // send(JSONRPCRequest[]): JSONRPCResponse[]\n\n\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      } // send(JSONRPCRequest): JSONRPCResponse\n\n\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(request, callback) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"callback is required\");\n      } // send(JSONRPCRequest[], callback): void\n\n\n      if (Array.isArray(request)) {\n        var arrayCb = callback;\n\n        this._sendMultipleRequestsAsync(request).then(function (responses) {\n          return arrayCb(null, responses);\n        }).catch(function (err) {\n          return arrayCb(err, null);\n        });\n\n        return;\n      } // send(JSONRPCRequest, callback): void\n\n\n      var cb = callback;\n\n      this._sendRequestAsync(request).then(function (response) {\n        return cb(null, response);\n      }).catch(function (err) {\n        return cb(err, null);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"Expected a single, non-array, object argument.\",\n                  data: args\n                });\n\n              case 2:\n                method = args.method, params = args.params;\n\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.method' must be a non-empty string.\",\n                  data: args\n                });\n\n              case 5:\n                if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.params' must be an object or array if provided.\",\n                  data: args\n                });\n\n              case 7:\n                newParams = params === undefined ? [] : params; // WalletLink Requests\n\n                id = this._relayEventManager.makeRequestId();\n                _context2.next = 11;\n                return this._sendRequestAsync({\n                  method: method,\n                  params: newParams,\n                  jsonrpc: \"2.0\",\n                  id: id\n                });\n\n              case 11:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result.result);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function request(_x) {\n        return _request2.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(match) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context3.sent;\n                _context3.next = 5;\n                return relay.scanQRCode(util_1.ensureRegExpString(match));\n\n              case 5:\n                res = _context3.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context3.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function scanQRCode(_x2) {\n        return _scanQRCode.apply(this, arguments);\n      }\n\n      return scanQRCode;\n    }()\n  }, {\n    key: \"arbitraryRequest\",\n    value: function () {\n      var _arbitraryRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context4.sent;\n                _context4.next = 5;\n                return relay.arbitraryRequest(data);\n\n              case 5:\n                res = _context4.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 8:\n                return _context4.abrupt(\"return\", res.result);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function arbitraryRequest(_x3) {\n        return _arbitraryRequest.apply(this, arguments);\n      }\n\n      return arbitraryRequest;\n    }()\n  }, {\n    key: \"childRequestEthereumAccounts\",\n    value: function () {\n      var _childRequestEthereumAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(childSessionId, childSessionSecret, dappName, dappLogoURL, dappURL) {\n        var relay;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context5.sent;\n                _context5.next = 5;\n                return relay.childRequestEthereumAccounts(childSessionId, childSessionSecret, dappName, dappLogoURL, dappURL);\n\n              case 5:\n                return _context5.abrupt(\"return\", true);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function childRequestEthereumAccounts(_x4, _x5, _x6, _x7, _x8) {\n        return _childRequestEthereumAccounts.apply(this, arguments);\n      }\n\n      return childRequestEthereumAccounts;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n\n      if (response.result === undefined) {\n        throw new Error(\"WalletLink does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n\n      this._addresses = addresses.map(function (address) {\n        return util_1.ensureAddressString(address);\n      });\n      this.emit(\"accountsChanged\", this._addresses);\n\n      this._storage.setItem(LOCAL_STORAGE_ADDRESSES_KEY, addresses.join(\" \"));\n\n      window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", {\n        detail: this._addresses\n      }));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function _handleAsynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n          return this._eth_requestAccounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_sign:\n          return this._eth_sign(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n          return this._eth_ecRecover(params);\n\n        case JSONRPC_1.JSONRPCMethod.personal_sign:\n          return this._personal_sign(params);\n\n        case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n          return this._personal_ecRecover(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n          return this._eth_signTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n          return this._eth_sendRawTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n          return this._eth_sendTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n          return this._eth_signTypedData_v1(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n          return this._throwUnsupportedMethodError();\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n          return this._eth_signTypedData_v3(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n          return this._eth_signTypedData_v4(params);\n\n        case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n          return this._walletlink_arbitrary(params);\n      }\n\n      if (!this._jsonRpcUrl) throw Error(\"Error: No jsonRpcUrl provided\");\n      return window.fetch(this._jsonRpcUrl, {\n        method: \"POST\",\n        body: JSON.stringify(request),\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (!json) {\n          throw eth_rpc_errors_1.ethErrors.rpc.parse({});\n        }\n\n        var response = json;\n        var error = response.error;\n\n        if (error) {\n          throw eth_rpc_errors_1.serializeError(error);\n        }\n\n        return response;\n      });\n    }\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var address = util_1.ensureAddressString(addressString);\n        return this._addresses.includes(address);\n      } catch (_a) {}\n\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      if (!this._isKnownAddress(addressString)) {\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? util_1.ensureAddressString(tx.from) : this.selectedAddress;\n\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n\n      this._ensureKnownAddress(fromAddress);\n\n      var toAddress = tx.to ? util_1.ensureAddressString(tx.to) : null;\n      var weiValue = tx.value != null ? util_1.ensureBN(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? util_1.ensureBuffer(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? util_1.ensureIntNumber(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? util_1.ensureBN(tx.gasPrice) : null;\n      var gasLimit = tx.gas != null ? util_1.ensureBN(tx.gas) : null;\n      var chainId = this._chainId;\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (this._addresses.length === 0) {\n        throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this._ensureKnownAddress(address);\n\n                _context6.prev = 1;\n                _context6.next = 4;\n                return this.initializeRelay();\n\n              case 4:\n                relay = _context6.sent;\n                _context6.next = 7;\n                return relay.signEthereumMessage(message, address, addPrefix, typedDataJson);\n\n              case 7:\n                res = _context6.sent;\n                return _context6.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 11:\n                _context6.prev = 11;\n                _context6.t0 = _context6[\"catch\"](1);\n\n                if (!(typeof _context6.t0.message === \"string\" && _context6.t0.message.match(/(denied|rejected)/i))) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n\n              case 15:\n                throw _context6.t0;\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 11]]);\n      }));\n\n      function _signEthereumMessage(_x9, _x10, _x11, _x12) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.initializeRelay();\n\n              case 2:\n                relay = _context7.sent;\n                _context7.next = 5;\n                return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix);\n\n              case 5:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function _ethereumAddressFromSignedMessage(_x13, _x14, _x15) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return this._addresses;\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this._chainId.toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return util_1.hexStringFromIntNumber(this._chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var res, relay;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(this._addresses.length > 0)) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", Promise.resolve({\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                }));\n\n              case 2:\n                _context8.prev = 2;\n                _context8.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context8.sent;\n                _context8.next = 8;\n                return relay.requestEthereumAccounts();\n\n              case 8:\n                res = _context8.sent;\n                _context8.next = 16;\n                break;\n\n              case 11:\n                _context8.prev = 11;\n                _context8.t0 = _context8[\"catch\"](2);\n\n                if (!(typeof _context8.t0.message === \"string\" && _context8.t0.message.match(/(denied|rejected)/i))) {\n                  _context8.next = 15;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n\n              case 15:\n                throw _context8.t0;\n\n              case 16:\n                if (res.result) {\n                  _context8.next = 18;\n                  break;\n                }\n\n                throw new Error(\"accounts received is empty\");\n\n              case 18:\n                this._setAddresses(res.result);\n\n                return _context8.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                });\n\n              case 20:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 11]]);\n      }));\n\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n\n      var address = util_1.ensureAddressString(params[0]);\n      var message = util_1.ensureBuffer(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = util_1.ensureBuffer(params[0]);\n      var signature = util_1.ensureBuffer(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n\n      var message = util_1.ensureBuffer(params[0]);\n      var address = util_1.ensureAddressString(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = util_1.ensureBuffer(params[0]);\n      var signature = util_1.ensureBuffer(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context9.prev = 2;\n                _context9.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context9.sent;\n                _context9.next = 8;\n                return relay.signEthereumTransaction(tx);\n\n              case 8:\n                res = _context9.sent;\n                return _context9.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 12:\n                _context9.prev = 12;\n                _context9.t0 = _context9[\"catch\"](2);\n\n                if (!(typeof _context9.t0.message === \"string\" && _context9.t0.message.match(/(denied|rejected)/i))) {\n                  _context9.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n\n              case 16:\n                throw _context9.t0;\n\n              case 17:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[2, 12]]);\n      }));\n\n      function _eth_signTransaction(_x16) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                signedTransaction = util_1.ensureBuffer(params[0]);\n                _context10.next = 3;\n                return this.initializeRelay();\n\n              case 3:\n                relay = _context10.sent;\n                _context10.next = 6;\n                return relay.submitEthereumTransaction(signedTransaction, this._chainId);\n\n              case 6:\n                res = _context10.sent;\n                return _context10.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function _eth_sendRawTransaction(_x17) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context11.prev = 2;\n                _context11.next = 5;\n                return this.initializeRelay();\n\n              case 5:\n                relay = _context11.sent;\n                _context11.next = 8;\n                return relay.signAndSubmitEthereumTransaction(tx);\n\n              case 8:\n                res = _context11.sent;\n                return _context11.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 12:\n                _context11.prev = 12;\n                _context11.t0 = _context11[\"catch\"](2);\n\n                if (!(typeof _context11.t0.message === \"string\" && _context11.t0.message.match(/(denied|rejected)/i))) {\n                  _context11.next = 16;\n                  break;\n                }\n\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n\n              case 16:\n                throw _context11.t0;\n\n              case 17:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[2, 12]]);\n      }));\n\n      function _eth_sendTransaction(_x18) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this._requireAuthorization();\n\n                typedData = util_1.ensureParsedJSONObject(params[0]);\n                address = util_1.ensureAddressString(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context12.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _eth_signTypedData_v1(_x19) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = util_1.ensureAddressString(params[0]);\n                typedData = util_1.ensureParsedJSONObject(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context13.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _eth_signTypedData_v3(_x20) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = util_1.ensureAddressString(params[0]);\n                typedData = util_1.ensureParsedJSONObject(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context14.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n\n              case 7:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function _eth_signTypedData_v4(_x21) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v4;\n    }()\n  }, {\n    key: \"_walletlink_arbitrary\",\n    value: function () {\n      var _walletlink_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(params) {\n        var data, result;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                data = params[0];\n\n                if (!(typeof data !== \"string\")) {\n                  _context15.next = 3;\n                  break;\n                }\n\n                throw new Error(\"parameter must be a string\");\n\n              case 3:\n                _context15.next = 5;\n                return this.arbitraryRequest(data);\n\n              case 5:\n                result = _context15.sent;\n                return _context15.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: result\n                });\n\n              case 7:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _walletlink_arbitrary(_x22) {\n        return _walletlink_arbitrary2.apply(this, arguments);\n      }\n\n      return _walletlink_arbitrary;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(params) {\n        var param, filterId;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                param = params[0];\n                _context16.next = 3;\n                return this._filterPolyfill.newFilter(param);\n\n              case 3:\n                filterId = _context16.sent;\n                return _context16.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _eth_newFilter(_x23) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        var filterId;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this._filterPolyfill.newBlockFilter();\n\n              case 2:\n                filterId = _context17.sent;\n                return _context17.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        var filterId;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this._filterPolyfill.newPendingTransactionFilter();\n\n              case 2:\n                filterId = _context18.sent;\n                return _context18.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n\n      return this._relayProvider().then(function (relay) {\n        relay.setChainIdCallback(function (chainId) {\n          _this5.updateProviderInfo(_this5._jsonRpcUrl, parseInt(chainId, 10), true);\n        });\n        relay.setJsonRpcUrlCallback(function (jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, _this5._chainId, true);\n        });\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n\n  return WalletLinkProvider;\n}(safe_event_emitter_1.default);\n\nexports.WalletLinkProvider = WalletLinkProvider;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/walletlink/dist/provider/WalletLinkProvider.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","WalletLinkProvider","bn_js_1","require","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","eth_rpc_errors_1","safe_event_emitter_1","SubscriptionManager_1","LOCAL_STORAGE_ADDRESSES_KEY","options","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","isChainOverridden","_send","send","_sendAsync","sendAsync","setProviderInfo","bind","updateProviderInfo","setAppInfo","enable","close","request","_setAddresses","scanQRCode","arbitraryRequest","childRequestEthereumAccounts","_chainId","ensureIntNumber","chainId","_jsonRpcUrl","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","addresses","split","events","on","notification","type","method","data","params","length","initializeRelay","undefined","fromRelay","originalChainId","chainChanged","appName","appLogoUrl","then","relay","JSONRPCMethod","eth_requestAccounts","resetAndReload","requestOrMethod","callbackOrParams","Array","isArray","jsonrpc","id","_sendRequestAsync","res","result","callback","requests","map","r","_sendRequest","req","Error","arrayCb","_sendMultipleRequestsAsync","responses","catch","err","cb","response","args","ethErrors","rpc","invalidRequest","message","newParams","makeRequestId","match","ensureRegExpString","childSessionId","childSessionSecret","dappName","dappLogoURL","dappURL","_handleSynchronousMethods","address","ensureAddressString","setItem","join","window","dispatchEvent","CustomEvent","detail","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","_eth_requestAccounts","eth_sign","_eth_sign","eth_ecRecover","_eth_ecRecover","personal_sign","_personal_sign","personal_ecRecover","_personal_ecRecover","eth_signTransaction","_eth_signTransaction","eth_sendRawTransaction","_eth_sendRawTransaction","eth_sendTransaction","_eth_sendTransaction","eth_signTypedData_v1","_eth_signTypedData_v1","eth_signTypedData_v2","_throwUnsupportedMethodError","eth_signTypedData_v3","_eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","_eth_signTypedData_v4","walletlink_arbitrary","_walletlink_arbitrary","fetch","body","JSON","stringify","mode","headers","json","parse","error","serializeError","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","addressString","includes","_a","_isKnownAddress","tx","fromAddress","from","selectedAddress","_ensureKnownAddress","toAddress","to","weiValue","ensureBN","default","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","gasLimit","gas","provider","unauthorized","unsupportedMethod","addPrefix","typedDataJson","signEthereumMessage","userRejectedRequest","signature","ethereumAddressFromSignedMessage","hexStringFromIntNumber","requestEthereumAccounts","_requireAuthorization","_signEthereumMessage","_ethereumAddressFromSignedMessage","_prepareTransactionParams","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","ensureParsedJSONObject","hashForSignTypedDataLegacy","typedDataJSON","hashForSignTypedData_v3","hashForSignTypedData_v4","filterId","ensureHexString","uninstallFilter","param","newFilter","newBlockFilter","newPendingTransactionFilter","getFilterChanges","getFilterLogs","setChainIdCallback","parseInt","setJsonRpcUrlCallback"],"mappings":"AAAA,a,CACA;AACA;AACA;;;;;;;;;;;;;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,IAAMC,OAAO,GAAGR,eAAe,CAACS,OAAO,CAAC,OAAD,CAAR,CAA/B;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,iBAAiB,GAAGX,eAAe,CAACS,OAAO,CAAC,8BAAD,CAAR,CAAzC;;AACA,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,kBAAD,CAAhC;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMK,gBAAgB,GAAGL,OAAO,CAAC,gBAAD,CAAhC;;AACA,IAAMM,oBAAoB,GAAGf,eAAe,CAACS,OAAO,CAAC,8BAAD,CAAR,CAA5C;;AACA,IAAMO,qBAAqB,GAAGP,OAAO,CAAC,uBAAD,CAArC;;AACA,IAAMQ,2BAA2B,GAAG,WAApC;;IACMV,kB;;;;;AACF,8BAAYW,OAAZ,EAAqB;AAAA;;AAAA;;AACjB;AACA,UAAKC,eAAL,GAAuB,IAAIP,gBAAgB,CAACQ,cAArB,+BAAvB;AACA,UAAKC,oBAAL,GAA4B,IAAIL,qBAAqB,CAACM,mBAA1B,+BAA5B;AACA,UAAKC,MAAL,GAAc,IAAd;AACA,UAAKC,UAAL,GAAkB,EAAlB;AACA,UAAKC,gCAAL,GAAwC,KAAxC,CANiB,CAOjB;;AACA,UAAKC,iBAAL,GAAyB,KAAzB;AACA,UAAKC,KAAL,GAAa,MAAKC,IAAlB;AACA,UAAKC,UAAL,GAAkB,MAAKC,SAAvB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,+BAA1B;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAlB;AACA,UAAKG,MAAL,GAAc,MAAKA,MAAL,CAAYH,IAAZ,+BAAd;AACA,UAAKI,KAAL,GAAa,MAAKA,KAAL,CAAWJ,IAAX,+BAAb;AACA,UAAKJ,IAAL,GAAY,MAAKA,IAAL,CAAUI,IAAV,+BAAZ;AACA,UAAKF,SAAL,GAAiB,MAAKA,SAAL,CAAeE,IAAf,+BAAjB;AACA,UAAKK,OAAL,GAAe,MAAKA,OAAL,CAAaL,IAAb,+BAAf;AACA,UAAKM,aAAL,GAAqB,MAAKA,aAAL,CAAmBN,IAAnB,+BAArB;AACA,UAAKO,UAAL,GAAkB,MAAKA,UAAL,CAAgBP,IAAhB,+BAAlB;AACA,UAAKQ,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBR,IAAtB,+BAAxB;AACA,UAAKS,4BAAL,GAAoC,MAAKA,4BAAL,CAAkCT,IAAlC,+BAApC;AACA,UAAKU,QAAL,GAAgBhC,MAAM,CAACiC,eAAP,CAAuBzB,OAAO,CAAC0B,OAAR,IAAmB,CAA1C,CAAhB;AACA,UAAKC,WAAL,GAAmB3B,OAAO,CAAC4B,UAA3B;AACA,UAAKC,mBAAL,GAA2B7B,OAAO,CAAC8B,kBAAnC;AACA,UAAKC,cAAL,GAAsB/B,OAAO,CAACgC,aAA9B;AACA,UAAKC,QAAL,GAAgBjC,OAAO,CAACkC,OAAxB;AACA,UAAKC,kBAAL,GAA0BnC,OAAO,CAACoC,iBAAlC;AACA,QAAMC,UAAU,GAAG7C,MAAM,CAAC8C,SAAP,CAAiB,MAAKd,QAAL,CAAce,QAAd,CAAuB,EAAvB,CAAjB,CAAnB,CA7BiB,CA8BjB;;AACA,UAAKC,IAAL,CAAU,SAAV,EAAqB;AAAEH,MAAAA,UAAU,EAAVA;AAAF,KAArB;;AACA,QAAMI,eAAe,GAAG,MAAKR,QAAL,CAAcS,OAAd,CAAsB3C,2BAAtB,CAAxB;;AACA,QAAI0C,eAAJ,EAAqB;AACjB,UAAME,SAAS,GAAGF,eAAe,CAACG,KAAhB,CAAsB,GAAtB,CAAlB;;AACA,UAAID,SAAS,CAAC,CAAD,CAAT,KAAiB,EAArB,EAAyB;AACrB,cAAKrC,UAAL,GAAkBqC,SAAlB;;AACA,cAAKH,IAAL,CAAU,iBAAV,EAA6BG,SAA7B;AACH;AACJ;;AACD,UAAKxC,oBAAL,CAA0B0C,MAA1B,CAAiCC,EAAjC,CAAoC,cAApC,EAAoD,UAACC,YAAD,EAAkB;AAClE,YAAKP,IAAL,CAAU,SAAV,EAAqB;AACjBQ,QAAAA,IAAI,EAAED,YAAY,CAACE,MADF;AAEjBC,QAAAA,IAAI,EAAEH,YAAY,CAACI;AAFF,OAArB;AAIH,KALD;;AAMA,QAAI,MAAK7C,UAAL,CAAgB8C,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,YAAKC,eAAL;AACH;;AAhDgB;AAiDpB;;;;SACD,eAAsB;AAClB,aAAO,KAAK/C,UAAL,CAAgB,CAAhB,KAAsBgD,SAA7B;AACH;;;SACD,eAAqB;AACjB,aAAO,KAAK9B,QAAL,CAAce,QAAd,CAAuB,EAAvB,CAAP;AACH;;;SACD,eAAc;AACV,aAAO/C,MAAM,CAAC8C,SAAP,CAAiB,KAAKd,QAAL,CAAce,QAAd,CAAuB,EAAvB,CAAjB,CAAP;AACH;;;SACD,eAAmB;AACf,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;;SACI,eAAiB;AACb,aAAO,KAAKV,mBAAZ;AACH;;;SACD,eAAW;AACP,aAAO,KAAKF,WAAZ;AACH;;;SACD,eAAgB;AACZ,aAAO,IAAP;AACH;;;WACD,uBAAc;AACV,aAAO,IAAP;AACH;;;WACD,yBAAgBC,UAAhB,EAA4BF,OAA5B,EAAqC;AACjC,UAAI,KAAKlB,iBAAT,EACI;AACJ,WAAKO,kBAAL,CAAwBa,UAAxB,EAAoCF,OAApC,EAA6C,KAA7C;AACH;;;WACD,4BAAmBE,UAAnB,EAA+BF,OAA/B,EAAwC6B,SAAxC,EAAmD;AAC/C,UAAIA,SAAJ,EACI,KAAK/C,iBAAL,GAAyB,IAAzB;AACJ,UAAMgD,eAAe,GAAG,KAAKhC,QAA7B;AACA,WAAKA,QAAL,GAAgBhC,MAAM,CAACiC,eAAP,CAAuBC,OAAvB,CAAhB;AACA,UAAM+B,YAAY,GAAG,KAAKjC,QAAL,KAAkBgC,eAAvC;AACA,WAAK7B,WAAL,GAAmBC,UAAnB;;AACA,UAAI6B,YAAY,IAAI,CAAC,KAAKlD,gCAA1B,EAA4D;AACxD,aAAKiC,IAAL,CAAU,cAAV,EAA0B,KAAKhB,QAA/B;AACA,aAAKjB,gCAAL,GAAwC,IAAxC;AACH;AACJ;;;WACD,oBAAWmD,OAAX,EAAoBC,UAApB,EAAgC;AAC5B,WAAKN,eAAL,GAAuBO,IAAvB,CAA4B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAAC7C,UAAN,CAAiB0C,OAAjB,EAA0BC,UAA1B,CAAJ;AAAA,OAAjC;AACH;;;;6EACD;AAAA;AAAA;AAAA;AAAA;AAAA,sBACQ,KAAKrD,UAAL,CAAgB8C,MAAhB,GAAyB,CADjC;AAAA;AAAA;AAAA;;AAAA,iDAEe,KAAK9C,UAFpB;;AAAA;AAAA;AAAA,uBAIiB,KAAKG,KAAL,CAAWd,SAAS,CAACmE,aAAV,CAAwBC,mBAAnC,CAJjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAMA,iBAAQ;AACJ,WAAKV,eAAL,GAAuBO,IAAvB,CAA4B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACG,cAAN,EAAJ;AAAA,OAAjC;AACH;;;WACD,cAAKC,eAAL,EAAsBC,gBAAtB,EAAwC;AAAA;;AACpC;AACA,UAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACrC,YAAMhB,MAAM,GAAGgB,eAAf;AACA,YAAMd,MAAM,GAAGgB,KAAK,CAACC,OAAN,CAAcF,gBAAd,IACTA,gBADS,GAETA,gBAAgB,KAAKZ,SAArB,GACI,CAACY,gBAAD,CADJ,GAEI,EAJV;AAKA,YAAM/C,OAAO,GAAG;AACZkD,UAAAA,OAAO,EAAE,KADG;AAEZC,UAAAA,EAAE,EAAE,CAFQ;AAGZrB,UAAAA,MAAM,EAANA,MAHY;AAIZE,UAAAA,MAAM,EAANA;AAJY,SAAhB;AAMA,eAAO,KAAKoB,iBAAL,CAAuBpD,OAAvB,EAAgCyC,IAAhC,CAAqC,UAAAY,GAAG;AAAA,iBAAIA,GAAG,CAACC,MAAR;AAAA,SAAxC,CAAP;AACH,OAhBmC,CAiBpC;;;AACA,UAAI,OAAOP,gBAAP,KAA4B,UAAhC,EAA4C;AACxC,YAAM/C,QAAO,GAAG8C,eAAhB;AACA,YAAMS,QAAQ,GAAGR,gBAAjB;AACA,eAAO,KAAKvD,UAAL,CAAgBQ,QAAhB,EAAyBuD,QAAzB,CAAP;AACH,OAtBmC,CAuBpC;;;AACA,UAAIP,KAAK,CAACC,OAAN,CAAcH,eAAd,CAAJ,EAAoC;AAChC,YAAMU,QAAQ,GAAGV,eAAjB;AACA,eAAOU,QAAQ,CAACC,GAAT,CAAa,UAAAC,CAAC;AAAA,iBAAI,MAAI,CAACC,YAAL,CAAkBD,CAAlB,CAAJ;AAAA,SAAd,CAAP;AACH,OA3BmC,CA4BpC;;;AACA,UAAME,GAAG,GAAGd,eAAZ;AACA,aAAO,KAAKa,YAAL,CAAkBC,GAAlB,CAAP;AACH;;;WACD,mBAAU5D,OAAV,EAAmBuD,QAAnB,EAA6B;AACzB,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAChC,cAAM,IAAIM,KAAJ,CAAU,sBAAV,CAAN;AACH,OAHwB,CAIzB;;;AACA,UAAIb,KAAK,CAACC,OAAN,CAAcjD,OAAd,CAAJ,EAA4B;AACxB,YAAM8D,OAAO,GAAGP,QAAhB;;AACA,aAAKQ,0BAAL,CAAgC/D,OAAhC,EACKyC,IADL,CACU,UAAAuB,SAAS;AAAA,iBAAIF,OAAO,CAAC,IAAD,EAAOE,SAAP,CAAX;AAAA,SADnB,EAEKC,KAFL,CAEW,UAAAC,GAAG;AAAA,iBAAIJ,OAAO,CAACI,GAAD,EAAM,IAAN,CAAX;AAAA,SAFd;;AAGA;AACH,OAXwB,CAYzB;;;AACA,UAAMC,EAAE,GAAGZ,QAAX;;AACA,WAAKH,iBAAL,CAAuBpD,OAAvB,EACKyC,IADL,CACU,UAAA2B,QAAQ;AAAA,eAAID,EAAE,CAAC,IAAD,EAAOC,QAAP,CAAN;AAAA,OADlB,EAEKH,KAFL,CAEW,UAAAC,GAAG;AAAA,eAAIC,EAAE,CAACD,GAAD,EAAM,IAAN,CAAN;AAAA,OAFd;AAGH;;;;+EACD,kBAAcG,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACQ,CAACA,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAAzB,IAAqCrB,KAAK,CAACC,OAAN,CAAcoB,IAAd,CAD7C;AAAA;AAAA;AAAA;;AAAA,sBAEc5F,gBAAgB,CAAC6F,SAAjB,CAA2BC,GAA3B,CAA+BC,cAA/B,CAA8C;AAChDC,kBAAAA,OAAO,EAAE,gDADuC;AAEhD1C,kBAAAA,IAAI,EAAEsC;AAF0C,iBAA9C,CAFd;;AAAA;AAOYvC,gBAAAA,MAPZ,GAO+BuC,IAP/B,CAOYvC,MAPZ,EAOoBE,MAPpB,GAO+BqC,IAP/B,CAOoBrC,MAPpB;;AAAA,sBAQQ,OAAOF,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACG,MAAP,KAAkB,CARxD;AAAA;AAAA;AAAA;;AAAA,sBAScxD,gBAAgB,CAAC6F,SAAjB,CAA2BC,GAA3B,CAA+BC,cAA/B,CAA8C;AAChDC,kBAAAA,OAAO,EAAE,2CADuC;AAEhD1C,kBAAAA,IAAI,EAAEsC;AAF0C,iBAA9C,CATd;;AAAA;AAAA,sBAcQrC,MAAM,KAAKG,SAAX,IACA,CAACa,KAAK,CAACC,OAAN,CAAcjB,MAAd,CADD,KAEC,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK,IAF1C,CAdR;AAAA;AAAA;AAAA;;AAAA,sBAiBcvD,gBAAgB,CAAC6F,SAAjB,CAA2BC,GAA3B,CAA+BC,cAA/B,CAA8C;AAChDC,kBAAAA,OAAO,EAAE,uDADuC;AAEhD1C,kBAAAA,IAAI,EAAEsC;AAF0C,iBAA9C,CAjBd;;AAAA;AAsBUK,gBAAAA,SAtBV,GAsBsB1C,MAAM,KAAKG,SAAX,GAAuB,EAAvB,GAA4BH,MAtBlD,EAuBI;;AACMmB,gBAAAA,EAxBV,GAwBe,KAAKnC,kBAAL,CAAwB2D,aAAxB,EAxBf;AAAA;AAAA,uBAyByB,KAAKvB,iBAAL,CAAuB;AACxCtB,kBAAAA,MAAM,EAANA,MADwC;AAExCE,kBAAAA,MAAM,EAAE0C,SAFgC;AAGxCxB,kBAAAA,OAAO,EAAE,KAH+B;AAIxCC,kBAAAA,EAAE,EAAFA;AAJwC,iBAAvB,CAzBzB;;AAAA;AAyBUG,gBAAAA,MAzBV;AAAA,kDA+BWA,MAAM,CAACA,MA/BlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;iFAiCA,kBAAiBsB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACwB,KAAK1C,eAAL,EADxB;;AAAA;AACUQ,gBAAAA,KADV;AAAA;AAAA,uBAEsBA,KAAK,CAACxC,UAAN,CAAiB7B,MAAM,CAACwG,kBAAP,CAA0BD,KAA1B,CAAjB,CAFtB;;AAAA;AAEUvB,gBAAAA,GAFV;;AAAA,sBAGQ,OAAOA,GAAG,CAACC,MAAX,KAAsB,QAH9B;AAAA;AAAA;AAAA;;AAAA,sBAIc,IAAIO,KAAJ,CAAU,yBAAV,CAJd;;AAAA;AAAA,kDAMWR,GAAG,CAACC,MANf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;uFAQA,kBAAuBvB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACwB,KAAKG,eAAL,EADxB;;AAAA;AACUQ,gBAAAA,KADV;AAAA;AAAA,uBAEsBA,KAAK,CAACvC,gBAAN,CAAuB4B,IAAvB,CAFtB;;AAAA;AAEUsB,gBAAAA,GAFV;;AAAA,sBAGQ,OAAOA,GAAG,CAACC,MAAX,KAAsB,QAH9B;AAAA;AAAA;AAAA;;AAAA,sBAIc,IAAIO,KAAJ,CAAU,yBAAV,CAJd;;AAAA;AAAA,kDAMWR,GAAG,CAACC,MANf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;mGAQA,kBAAmCwB,cAAnC,EAAmDC,kBAAnD,EAAuEC,QAAvE,EAAiFC,WAAjF,EAA8FC,OAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACwB,KAAKhD,eAAL,EADxB;;AAAA;AACUQ,gBAAAA,KADV;AAAA;AAAA,uBAEUA,KAAK,CAACtC,4BAAN,CAAmC0E,cAAnC,EAAmDC,kBAAnD,EAAuEC,QAAvE,EAAiFC,WAAjF,EAA8FC,OAA9F,CAFV;;AAAA;AAAA,kDAGW,IAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAKA,iCAAwB;AACpB,aAAO,KAAP;AACH;;;WACD,qBAAY;AACR,YAAM,IAAIrB,KAAJ,CAAU,iCAAV,CAAN;AACH;;;WACD,uBAAc;AACV,YAAM,IAAIA,KAAJ,CAAU,iCAAV,CAAN;AACH;;;WACD,sBAAa;AACT,aAAO,IAAP;AACH;;;WACD,sBAAa7D,OAAb,EAAsB;AAClB,UAAMoE,QAAQ,GAAG;AACblB,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,EAAE,EAAEnD,OAAO,CAACmD;AAFC,OAAjB;AAIA,UAAQrB,MAAR,GAAmB9B,OAAnB,CAAQ8B,MAAR;AACAsC,MAAAA,QAAQ,CAACd,MAAT,GAAkB,KAAK6B,yBAAL,CAA+BnF,OAA/B,CAAlB;;AACA,UAAIoE,QAAQ,CAACd,MAAT,KAAoBnB,SAAxB,EAAmC;AAC/B,cAAM,IAAI0B,KAAJ,CAAU,8CAAuC/B,MAAvC,iGAC+CA,MAD/C,0BAAV,CAAN;AAGH;;AACD,aAAOsC,QAAP;AACH;;;WACD,uBAAc5C,SAAd,EAAyB;AACrB,UAAI,CAACwB,KAAK,CAACC,OAAN,CAAczB,SAAd,CAAL,EAA+B;AAC3B,cAAM,IAAIqC,KAAJ,CAAU,2BAAV,CAAN;AACH;;AACD,WAAK1E,UAAL,GAAkBqC,SAAS,CAACiC,GAAV,CAAc,UAAA2B,OAAO;AAAA,eAAI/G,MAAM,CAACgH,mBAAP,CAA2BD,OAA3B,CAAJ;AAAA,OAArB,CAAlB;AACA,WAAK/D,IAAL,CAAU,iBAAV,EAA6B,KAAKlC,UAAlC;;AACA,WAAK2B,QAAL,CAAcwE,OAAd,CAAsB1G,2BAAtB,EAAmD4C,SAAS,CAAC+D,IAAV,CAAe,GAAf,CAAnD;;AACAC,MAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,WAAJ,CAAgB,sBAAhB,EAAwC;AAAEC,QAAAA,MAAM,EAAE,KAAKxG;AAAf,OAAxC,CAArB;AACH;;;WACD,2BAAkBa,OAAlB,EAA2B;AAAA;;AACvB,aAAO,IAAI4F,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAI;AACA,cAAMC,UAAU,GAAG,MAAI,CAACZ,yBAAL,CAA+BnF,OAA/B,CAAnB;;AACA,cAAI+F,UAAU,KAAK5D,SAAnB,EAA8B;AAC1B,mBAAO0D,OAAO,CAAC;AACX3C,cAAAA,OAAO,EAAE,KADE;AAEXC,cAAAA,EAAE,EAAEnD,OAAO,CAACmD,EAFD;AAGXG,cAAAA,MAAM,EAAEyC;AAHG,aAAD,CAAd;AAKH;;AACD,cAAMC,aAAa,GAAG,MAAI,CAACC,gCAAL,CAAsCjG,OAAtC,CAAtB;;AACA,cAAIgG,aAAa,KAAK7D,SAAtB,EAAiC;AAC7B6D,YAAAA,aAAa,CACRvD,IADL,CACU,UAAAY,GAAG;AAAA,qBAAIwC,OAAO,CAAC/H,MAAM,CAACoI,MAAP,CAAcpI,MAAM,CAACoI,MAAP,CAAc,EAAd,EAAkB7C,GAAlB,CAAd,EAAsC;AAAEF,gBAAAA,EAAE,EAAEnD,OAAO,CAACmD;AAAd,eAAtC,CAAD,CAAX;AAAA,aADb,EAEKc,KAFL,CAEW,UAAAC,GAAG;AAAA,qBAAI4B,MAAM,CAAC5B,GAAD,CAAV;AAAA,aAFd;AAGA;AACH;;AACD,cAAMiC,mBAAmB,GAAG,MAAI,CAACC,0BAAL,CAAgCpG,OAAhC,CAA5B;;AACA,cAAImG,mBAAmB,KAAKhE,SAA5B,EAAuC;AACnCgE,YAAAA,mBAAmB,CACd1D,IADL,CACU,UAAAY,GAAG;AAAA,qBAAIwC,OAAO,CAAC;AACrB3C,gBAAAA,OAAO,EAAE,KADY;AAErBC,gBAAAA,EAAE,EAAEnD,OAAO,CAACmD,EAFS;AAGrBG,gBAAAA,MAAM,EAAED,GAAG,CAACC;AAHS,eAAD,CAAX;AAAA,aADb,EAMKW,KANL,CAMW,UAAAC,GAAG;AAAA,qBAAI4B,MAAM,CAAC5B,GAAD,CAAV;AAAA,aANd;AAOA;AACH;AACJ,SA3BD,CA4BA,OAAOA,GAAP,EAAY;AACR,iBAAO4B,MAAM,CAAC5B,GAAD,CAAb;AACH;;AACD,QAAA,MAAI,CAACmC,0BAAL,CAAgCrG,OAAhC,EACKyC,IADL,CACU,UAAAY,GAAG;AAAA,iBAAIwC,OAAO,CAAC/H,MAAM,CAACoI,MAAP,CAAcpI,MAAM,CAACoI,MAAP,CAAc,EAAd,EAAkB7C,GAAlB,CAAd,EAAsC;AAAEF,YAAAA,EAAE,EAAEnD,OAAO,CAACmD;AAAd,WAAtC,CAAD,CAAX;AAAA,SADb,EAEKc,KAFL,CAEW,UAAAC,GAAG;AAAA,iBAAI4B,MAAM,CAAC5B,GAAD,CAAV;AAAA,SAFd;AAGH,OAnCM,CAAP;AAoCH;;;WACD,oCAA2BV,QAA3B,EAAqC;AAAA;;AACjC,aAAOoC,OAAO,CAACU,GAAR,CAAY9C,QAAQ,CAACC,GAAT,CAAa,UAAAC,CAAC;AAAA,eAAI,MAAI,CAACN,iBAAL,CAAuBM,CAAvB,CAAJ;AAAA,OAAd,CAAZ,CAAP;AACH;;;WACD,mCAA0B1D,OAA1B,EAAmC;AAC/B,UAAQ8B,MAAR,GAAmB9B,OAAnB,CAAQ8B,MAAR;AACA,UAAME,MAAM,GAAGhC,OAAO,CAACgC,MAAR,IAAkB,EAAjC;;AACA,cAAQF,MAAR;AACI,aAAKtD,SAAS,CAACmE,aAAV,CAAwB4D,YAA7B;AACI,iBAAO,KAAKC,aAAL,EAAP;;AACJ,aAAKhI,SAAS,CAACmE,aAAV,CAAwB8D,YAA7B;AACI,iBAAO,KAAKC,aAAL,EAAP;;AACJ,aAAKlI,SAAS,CAACmE,aAAV,CAAwBgE,mBAA7B;AACI,iBAAO,KAAKC,oBAAL,CAA0B5E,MAA1B,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwBkE,WAA7B;AACI,iBAAO,KAAKC,YAAL,EAAP;;AACJ,aAAKtI,SAAS,CAACmE,aAAV,CAAwBoE,WAA7B;AACI,iBAAO,KAAKC,YAAL,EAAP;;AACJ;AACI,iBAAO7E,SAAP;AAZR;AAcH;;;WACD,oCAA2BnC,OAA3B,EAAoC;AAChC,UAAQ8B,MAAR,GAAmB9B,OAAnB,CAAQ8B,MAAR;AACA,UAAME,MAAM,GAAGhC,OAAO,CAACgC,MAAR,IAAkB,EAAjC;;AACA,cAAQF,MAAR;AACI,aAAKtD,SAAS,CAACmE,aAAV,CAAwBC,mBAA7B;AACI,iBAAO,KAAKqE,oBAAL,EAAP;;AACJ,aAAKzI,SAAS,CAACmE,aAAV,CAAwBuE,QAA7B;AACI,iBAAO,KAAKC,SAAL,CAAenF,MAAf,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwByE,aAA7B;AACI,iBAAO,KAAKC,cAAL,CAAoBrF,MAApB,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwB2E,aAA7B;AACI,iBAAO,KAAKC,cAAL,CAAoBvF,MAApB,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwB6E,kBAA7B;AACI,iBAAO,KAAKC,mBAAL,CAAyBzF,MAAzB,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwB+E,mBAA7B;AACI,iBAAO,KAAKC,oBAAL,CAA0B3F,MAA1B,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwBiF,sBAA7B;AACI,iBAAO,KAAKC,uBAAL,CAA6B7F,MAA7B,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwBmF,mBAA7B;AACI,iBAAO,KAAKC,oBAAL,CAA0B/F,MAA1B,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwBqF,oBAA7B;AACI,iBAAO,KAAKC,qBAAL,CAA2BjG,MAA3B,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwBuF,oBAA7B;AACI,iBAAO,KAAKC,4BAAL,EAAP;;AACJ,aAAK3J,SAAS,CAACmE,aAAV,CAAwByF,oBAA7B;AACI,iBAAO,KAAKC,qBAAL,CAA2BrG,MAA3B,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwB2F,oBAA7B;AACA,aAAK9J,SAAS,CAACmE,aAAV,CAAwB4F,iBAA7B;AACI,iBAAO,KAAKC,qBAAL,CAA2BxG,MAA3B,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwB8F,oBAA7B;AACI,iBAAO,KAAKC,qBAAL,CAA2B1G,MAA3B,CAAP;AA3BR;;AA6BA,UAAI,CAAC,KAAKxB,WAAV,EACI,MAAMqD,KAAK,CAAC,+BAAD,CAAX;AACJ,aAAO2B,MAAM,CACRmD,KADE,CACI,KAAKnI,WADT,EACsB;AACzBsB,QAAAA,MAAM,EAAE,MADiB;AAEzB8G,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe9I,OAAf,CAFmB;AAGzB+I,QAAAA,IAAI,EAAE,MAHmB;AAIzBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAJgB,OADtB,EAOFvG,IAPE,CAOG,UAAAY,GAAG;AAAA,eAAIA,GAAG,CAAC4F,IAAJ,EAAJ;AAAA,OAPN,EAQFxG,IARE,CAQG,UAAAwG,IAAI,EAAI;AACd,YAAI,CAACA,IAAL,EAAW;AACP,gBAAMxK,gBAAgB,CAAC6F,SAAjB,CAA2BC,GAA3B,CAA+B2E,KAA/B,CAAqC,EAArC,CAAN;AACH;;AACD,YAAM9E,QAAQ,GAAG6E,IAAjB;AACA,YAAQE,KAAR,GAAkB/E,QAAlB,CAAQ+E,KAAR;;AACA,YAAIA,KAAJ,EAAW;AACP,gBAAM1K,gBAAgB,CAAC2K,cAAjB,CAAgCD,KAAhC,CAAN;AACH;;AACD,eAAO/E,QAAP;AACH,OAlBM,CAAP;AAmBH;;;WACD,0CAAiCpE,OAAjC,EAA0C;AACtC,UAAQ8B,MAAR,GAAmB9B,OAAnB,CAAQ8B,MAAR;AACA,UAAME,MAAM,GAAGhC,OAAO,CAACgC,MAAR,IAAkB,EAAjC;;AACA,cAAQF,MAAR;AACI,aAAKtD,SAAS,CAACmE,aAAV,CAAwB0G,aAA7B;AACI,iBAAO,KAAKC,cAAL,CAAoBtH,MAApB,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwB4G,kBAA7B;AACI,iBAAO,KAAKC,mBAAL,EAAP;;AACJ,aAAKhL,SAAS,CAACmE,aAAV,CAAwB8G,+BAA7B;AACI,iBAAO,KAAKC,gCAAL,EAAP;;AACJ,aAAKlL,SAAS,CAACmE,aAAV,CAAwBgH,oBAA7B;AACI,iBAAO,KAAKC,qBAAL,CAA2B5H,MAA3B,CAAP;;AACJ,aAAKxD,SAAS,CAACmE,aAAV,CAAwBkH,iBAA7B;AACI,iBAAO,KAAKC,kBAAL,CAAwB9H,MAAxB,CAAP;AAVR;;AAYA,aAAOG,SAAP;AACH;;;WACD,oCAA2BnC,OAA3B,EAAoC;AAChC,cAAQA,OAAO,CAAC8B,MAAhB;AACI,aAAKtD,SAAS,CAACmE,aAAV,CAAwBoH,aAA7B;AACA,aAAKvL,SAAS,CAACmE,aAAV,CAAwBqH,eAA7B;AACI,iBAAO,KAAKhL,oBAAL,CAA0BiL,aAA1B,CAAwCjK,OAAxC,CAAP;AAHR;;AAKA,aAAOmC,SAAP;AACH;;;WACD,yBAAgB+H,aAAhB,EAA+B;AAC3B,UAAI;AACA,YAAM9E,OAAO,GAAG/G,MAAM,CAACgH,mBAAP,CAA2B6E,aAA3B,CAAhB;AACA,eAAO,KAAK/K,UAAL,CAAgBgL,QAAhB,CAAyB/E,OAAzB,CAAP;AACH,OAHD,CAIA,OAAOgF,EAAP,EAAW,CAAG;;AACd,aAAO,KAAP;AACH;;;WACD,6BAAoBF,aAApB,EAAmC;AAC/B,UAAI,CAAC,KAAKG,eAAL,CAAqBH,aAArB,CAAL,EAA0C;AACtC,cAAM,IAAIrG,KAAJ,CAAU,0BAAV,CAAN;AACH;AACJ;;;WACD,mCAA0ByG,EAA1B,EAA8B;AAC1B,UAAMC,WAAW,GAAGD,EAAE,CAACE,IAAH,GACdnM,MAAM,CAACgH,mBAAP,CAA2BiF,EAAE,CAACE,IAA9B,CADc,GAEd,KAAKC,eAFX;;AAGA,UAAI,CAACF,WAAL,EAAkB;AACd,cAAM,IAAI1G,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,WAAK6G,mBAAL,CAAyBH,WAAzB;;AACA,UAAMI,SAAS,GAAGL,EAAE,CAACM,EAAH,GAAQvM,MAAM,CAACgH,mBAAP,CAA2BiF,EAAE,CAACM,EAA9B,CAAR,GAA4C,IAA9D;AACA,UAAMC,QAAQ,GAAGP,EAAE,CAACrM,KAAH,IAAY,IAAZ,GAAmBI,MAAM,CAACyM,QAAP,CAAgBR,EAAE,CAACrM,KAAnB,CAAnB,GAA+C,IAAIE,OAAO,CAAC4M,OAAZ,CAAoB,CAApB,CAAhE;AACA,UAAMhJ,IAAI,GAAGuI,EAAE,CAACvI,IAAH,GAAU1D,MAAM,CAAC2M,YAAP,CAAoBV,EAAE,CAACvI,IAAvB,CAAV,GAAyCkJ,MAAM,CAACC,KAAP,CAAa,CAAb,CAAtD;AACA,UAAMC,KAAK,GAAGb,EAAE,CAACa,KAAH,IAAY,IAAZ,GAAmB9M,MAAM,CAACiC,eAAP,CAAuBgK,EAAE,CAACa,KAA1B,CAAnB,GAAsD,IAApE;AACA,UAAMC,aAAa,GAAGd,EAAE,CAACe,QAAH,IAAe,IAAf,GAAsBhN,MAAM,CAACyM,QAAP,CAAgBR,EAAE,CAACe,QAAnB,CAAtB,GAAqD,IAA3E;AACA,UAAMC,QAAQ,GAAGhB,EAAE,CAACiB,GAAH,IAAU,IAAV,GAAiBlN,MAAM,CAACyM,QAAP,CAAgBR,EAAE,CAACiB,GAAnB,CAAjB,GAA2C,IAA5D;AACA,UAAMhL,OAAO,GAAG,KAAKF,QAArB;AACA,aAAO;AACHkK,QAAAA,WAAW,EAAXA,WADG;AAEHI,QAAAA,SAAS,EAATA,SAFG;AAGHE,QAAAA,QAAQ,EAARA,QAHG;AAIH9I,QAAAA,IAAI,EAAJA,IAJG;AAKHoJ,QAAAA,KAAK,EAALA,KALG;AAMHC,QAAAA,aAAa,EAAbA,aANG;AAOHE,QAAAA,QAAQ,EAARA,QAPG;AAQH/K,QAAAA,OAAO,EAAPA;AARG,OAAP;AAUH;;;WACD,iCAAwB;AACpB,UAAI,KAAKpB,UAAL,CAAgB8C,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,cAAMxD,gBAAgB,CAAC6F,SAAjB,CAA2BkH,QAA3B,CAAoCC,YAApC,CAAiD,EAAjD,CAAN;AACH;AACJ;;;WACD,wCAA+B;AAC3B,YAAMhN,gBAAgB,CAAC6F,SAAjB,CAA2BkH,QAA3B,CAAoCE,iBAApC,CAAsD,EAAtD,CAAN;AACH;;;;2FACD,kBAA2BjH,OAA3B,EAAoCW,OAApC,EAA6CuG,SAA7C,EAAwDC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,qBAAKlB,mBAAL,CAAyBtF,OAAzB;;AADJ;AAAA;AAAA,uBAG4B,KAAKlD,eAAL,EAH5B;;AAAA;AAGcQ,gBAAAA,KAHd;AAAA;AAAA,uBAI0BA,KAAK,CAACmJ,mBAAN,CAA0BpH,OAA1B,EAAmCW,OAAnC,EAA4CuG,SAA5C,EAAuDC,aAAvD,CAJ1B;;AAAA;AAIcvI,gBAAAA,GAJd;AAAA,kDAKe;AAAEH,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAED,GAAG,CAACC;AAArC,iBALf;;AAAA;AAAA;AAAA;;AAAA,sBAQY,OAAO,aAAImB,OAAX,KAAuB,QAAvB,IACA,aAAIA,OAAJ,CAAYG,KAAZ,CAAkB,oBAAlB,CATZ;AAAA;AAAA;AAAA;;AAAA,sBAUkBnG,gBAAgB,CAAC6F,SAAjB,CAA2BkH,QAA3B,CAAoCM,mBAApC,CAAwD,+BAAxD,CAVlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;wGAeA,kBAAwCrH,OAAxC,EAAiDsH,SAAjD,EAA4DJ,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACwB,KAAKzJ,eAAL,EADxB;;AAAA;AACUQ,gBAAAA,KADV;AAAA;AAAA,uBAEsBA,KAAK,CAACsJ,gCAAN,CAAuCvH,OAAvC,EAAgDsH,SAAhD,EAA2DJ,SAA3D,CAFtB;;AAAA;AAEUtI,gBAAAA,GAFV;AAAA,kDAGW;AAAEH,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAED,GAAG,CAACC;AAArC,iBAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAKA,yBAAgB;AACZ,aAAO,KAAKnE,UAAZ;AACH;;;WACD,yBAAgB;AACZ,aAAO,KAAKsL,eAAL,IAAwB,IAA/B;AACH;;;WACD,wBAAe;AACX,aAAO,KAAKpK,QAAL,CAAce,QAAd,CAAuB,EAAvB,CAAP;AACH;;;WACD,wBAAe;AACX,aAAO/C,MAAM,CAAC4N,sBAAP,CAA8B,KAAK5L,QAAnC,CAAP;AACH;;;;2FACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACQ,KAAKlB,UAAL,CAAgB8C,MAAhB,GAAyB,CADjC;AAAA;AAAA;AAAA;;AAAA,kDAEe2D,OAAO,CAACC,OAAR,CAAgB;AACnB3C,kBAAAA,OAAO,EAAE,KADU;AAEnBC,kBAAAA,EAAE,EAAE,CAFe;AAGnBG,kBAAAA,MAAM,EAAE,KAAKnE;AAHM,iBAAhB,CAFf;;AAAA;AAAA;AAAA;AAAA,uBAU4B,KAAK+C,eAAL,EAV5B;;AAAA;AAUcQ,gBAAAA,KAVd;AAAA;AAAA,uBAWoBA,KAAK,CAACwJ,uBAAN,EAXpB;;AAAA;AAWQ7I,gBAAAA,GAXR;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,sBAcY,OAAO,aAAIoB,OAAX,KAAuB,QAAvB,IACA,aAAIA,OAAJ,CAAYG,KAAZ,CAAkB,oBAAlB,CAfZ;AAAA;AAAA;AAAA;;AAAA,sBAgBkBnG,gBAAgB,CAAC6F,SAAjB,CAA2BkH,QAA3B,CAAoCM,mBAApC,CAAwD,mCAAxD,CAhBlB;;AAAA;AAAA;;AAAA;AAAA,oBAoBSzI,GAAG,CAACC,MApBb;AAAA;AAAA;AAAA;;AAAA,sBAqBc,IAAIO,KAAJ,CAAU,4BAAV,CArBd;;AAAA;AAuBI,qBAAK5D,aAAL,CAAmBoD,GAAG,CAACC,MAAvB;;AAvBJ,kDAwBW;AAAEJ,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAE,KAAKnE;AAAtC,iBAxBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WA0BA,mBAAU6C,MAAV,EAAkB;AACd,WAAKmK,qBAAL;;AACA,UAAM/G,OAAO,GAAG/G,MAAM,CAACgH,mBAAP,CAA2BrD,MAAM,CAAC,CAAD,CAAjC,CAAhB;AACA,UAAMyC,OAAO,GAAGpG,MAAM,CAAC2M,YAAP,CAAoBhJ,MAAM,CAAC,CAAD,CAA1B,CAAhB;AACA,aAAO,KAAKoK,oBAAL,CAA0B3H,OAA1B,EAAmCW,OAAnC,EAA4C,KAA5C,CAAP;AACH;;;WACD,wBAAepD,MAAf,EAAuB;AACnB,UAAMyC,OAAO,GAAGpG,MAAM,CAAC2M,YAAP,CAAoBhJ,MAAM,CAAC,CAAD,CAA1B,CAAhB;AACA,UAAM+J,SAAS,GAAG1N,MAAM,CAAC2M,YAAP,CAAoBhJ,MAAM,CAAC,CAAD,CAA1B,CAAlB;AACA,aAAO,KAAKqK,iCAAL,CAAuC5H,OAAvC,EAAgDsH,SAAhD,EAA2D,KAA3D,CAAP;AACH;;;WACD,wBAAe/J,MAAf,EAAuB;AACnB,WAAKmK,qBAAL;;AACA,UAAM1H,OAAO,GAAGpG,MAAM,CAAC2M,YAAP,CAAoBhJ,MAAM,CAAC,CAAD,CAA1B,CAAhB;AACA,UAAMoD,OAAO,GAAG/G,MAAM,CAACgH,mBAAP,CAA2BrD,MAAM,CAAC,CAAD,CAAjC,CAAhB;AACA,aAAO,KAAKoK,oBAAL,CAA0B3H,OAA1B,EAAmCW,OAAnC,EAA4C,IAA5C,CAAP;AACH;;;WACD,6BAAoBpD,MAApB,EAA4B;AACxB,UAAMyC,OAAO,GAAGpG,MAAM,CAAC2M,YAAP,CAAoBhJ,MAAM,CAAC,CAAD,CAA1B,CAAhB;AACA,UAAM+J,SAAS,GAAG1N,MAAM,CAAC2M,YAAP,CAAoBhJ,MAAM,CAAC,CAAD,CAA1B,CAAlB;AACA,aAAO,KAAKqK,iCAAL,CAAuC5H,OAAvC,EAAgDsH,SAAhD,EAA2D,IAA3D,CAAP;AACH;;;;2FACD,kBAA2B/J,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,qBAAKmK,qBAAL;;AACM7B,gBAAAA,EAFV,GAEe,KAAKgC,yBAAL,CAA+BtK,MAAM,CAAC,CAAD,CAAN,IAAa,EAA5C,CAFf;AAAA;AAAA;AAAA,uBAI4B,KAAKE,eAAL,EAJ5B;;AAAA;AAIcQ,gBAAAA,KAJd;AAAA;AAAA,uBAK0BA,KAAK,CAAC6J,uBAAN,CAA8BjC,EAA9B,CAL1B;;AAAA;AAKcjH,gBAAAA,GALd;AAAA,kDAMe;AAAEH,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAED,GAAG,CAACC;AAArC,iBANf;;AAAA;AAAA;AAAA;;AAAA,sBASY,OAAO,aAAImB,OAAX,KAAuB,QAAvB,IACA,aAAIA,OAAJ,CAAYG,KAAZ,CAAkB,oBAAlB,CAVZ;AAAA;AAAA;AAAA;;AAAA,sBAWkBnG,gBAAgB,CAAC6F,SAAjB,CAA2BkH,QAA3B,CAAoCM,mBAApC,CAAwD,mCAAxD,CAXlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;8FAgBA,mBAA8B9J,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACUwK,gBAAAA,iBADV,GAC8BnO,MAAM,CAAC2M,YAAP,CAAoBhJ,MAAM,CAAC,CAAD,CAA1B,CAD9B;AAAA;AAAA,uBAEwB,KAAKE,eAAL,EAFxB;;AAAA;AAEUQ,gBAAAA,KAFV;AAAA;AAAA,uBAGsBA,KAAK,CAAC+J,yBAAN,CAAgCD,iBAAhC,EAAmD,KAAKnM,QAAxD,CAHtB;;AAAA;AAGUgD,gBAAAA,GAHV;AAAA,mDAIW;AAAEH,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAED,GAAG,CAACC;AAArC,iBAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;2FAMA,mBAA2BtB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,qBAAKmK,qBAAL;;AACM7B,gBAAAA,EAFV,GAEe,KAAKgC,yBAAL,CAA+BtK,MAAM,CAAC,CAAD,CAAN,IAAa,EAA5C,CAFf;AAAA;AAAA;AAAA,uBAI4B,KAAKE,eAAL,EAJ5B;;AAAA;AAIcQ,gBAAAA,KAJd;AAAA;AAAA,uBAK0BA,KAAK,CAACgK,gCAAN,CAAuCpC,EAAvC,CAL1B;;AAAA;AAKcjH,gBAAAA,GALd;AAAA,mDAMe;AAAEH,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAED,GAAG,CAACC;AAArC,iBANf;;AAAA;AAAA;AAAA;;AAAA,sBASY,OAAO,cAAImB,OAAX,KAAuB,QAAvB,IACA,cAAIA,OAAJ,CAAYG,KAAZ,CAAkB,oBAAlB,CAVZ;AAAA;AAAA;AAAA;;AAAA,sBAWkBnG,gBAAgB,CAAC6F,SAAjB,CAA2BkH,QAA3B,CAAoCM,mBAApC,CAAwD,mCAAxD,CAXlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;0FAgBA,mBAA4B9J,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,qBAAKmK,qBAAL;;AACMQ,gBAAAA,SAFV,GAEsBtO,MAAM,CAACuO,sBAAP,CAA8B5K,MAAM,CAAC,CAAD,CAApC,CAFtB;AAGUoD,gBAAAA,OAHV,GAGoB/G,MAAM,CAACgH,mBAAP,CAA2BrD,MAAM,CAAC,CAAD,CAAjC,CAHpB;;AAII,qBAAK0I,mBAAL,CAAyBtF,OAAzB;;AACMX,gBAAAA,OALV,GAKoBnG,iBAAiB,CAACyM,OAAlB,CAA0B8B,0BAA1B,CAAqD;AAAE9K,kBAAAA,IAAI,EAAE4K;AAAR,iBAArD,CALpB;AAMUG,gBAAAA,aANV,GAM0BjE,IAAI,CAACC,SAAL,CAAe6D,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAN1B;AAAA,mDAOW,KAAKP,oBAAL,CAA0B3H,OAA1B,EAAmCW,OAAnC,EAA4C,KAA5C,EAAmD0H,aAAnD,CAPX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;2FASA,mBAA4B9K,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,qBAAKmK,qBAAL;;AACM/G,gBAAAA,OAFV,GAEoB/G,MAAM,CAACgH,mBAAP,CAA2BrD,MAAM,CAAC,CAAD,CAAjC,CAFpB;AAGU2K,gBAAAA,SAHV,GAGsBtO,MAAM,CAACuO,sBAAP,CAA8B5K,MAAM,CAAC,CAAD,CAApC,CAHtB;;AAII,qBAAK0I,mBAAL,CAAyBtF,OAAzB;;AACMX,gBAAAA,OALV,GAKoBnG,iBAAiB,CAACyM,OAAlB,CAA0BgC,uBAA1B,CAAkD;AAAEhL,kBAAAA,IAAI,EAAE4K;AAAR,iBAAlD,CALpB;AAMUG,gBAAAA,aANV,GAM0BjE,IAAI,CAACC,SAAL,CAAe6D,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAN1B;AAAA,mDAOW,KAAKP,oBAAL,CAA0B3H,OAA1B,EAAmCW,OAAnC,EAA4C,KAA5C,EAAmD0H,aAAnD,CAPX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;2FASA,mBAA4B9K,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,qBAAKmK,qBAAL;;AACM/G,gBAAAA,OAFV,GAEoB/G,MAAM,CAACgH,mBAAP,CAA2BrD,MAAM,CAAC,CAAD,CAAjC,CAFpB;AAGU2K,gBAAAA,SAHV,GAGsBtO,MAAM,CAACuO,sBAAP,CAA8B5K,MAAM,CAAC,CAAD,CAApC,CAHtB;;AAII,qBAAK0I,mBAAL,CAAyBtF,OAAzB;;AACMX,gBAAAA,OALV,GAKoBnG,iBAAiB,CAACyM,OAAlB,CAA0BiC,uBAA1B,CAAkD;AAAEjL,kBAAAA,IAAI,EAAE4K;AAAR,iBAAlD,CALpB;AAMUG,gBAAAA,aANV,GAM0BjE,IAAI,CAACC,SAAL,CAAe6D,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAN1B;AAAA,mDAOW,KAAKP,oBAAL,CAA0B3H,OAA1B,EAAmCW,OAAnC,EAA4C,KAA5C,EAAmD0H,aAAnD,CAPX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;4FASA,mBAA4B9K,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACUD,gBAAAA,IADV,GACiBC,MAAM,CAAC,CAAD,CADvB;;AAAA,sBAEQ,OAAOD,IAAP,KAAgB,QAFxB;AAAA;AAAA;AAAA;;AAAA,sBAGc,IAAI8B,KAAJ,CAAU,4BAAV,CAHd;;AAAA;AAAA;AAAA,uBAKyB,KAAK1D,gBAAL,CAAsB4B,IAAtB,CALzB;;AAAA;AAKUuB,gBAAAA,MALV;AAAA,mDAMW;AAAEJ,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAANA;AAAzB,iBANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAQA,8BAAqBtB,MAArB,EAA6B;AACzB,UAAMiL,QAAQ,GAAG5O,MAAM,CAAC6O,eAAP,CAAuBlL,MAAM,CAAC,CAAD,CAA7B,CAAjB;AACA,aAAO,KAAKlD,eAAL,CAAqBqO,eAArB,CAAqCF,QAArC,CAAP;AACH;;;;qFACD,mBAAqBjL,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACUoL,gBAAAA,KADV,GACkBpL,MAAM,CAAC,CAAD,CADxB;AAAA;AAAA,uBAE2B,KAAKlD,eAAL,CAAqBuO,SAArB,CAA+BD,KAA/B,CAF3B;;AAAA;AAEUH,gBAAAA,QAFV;AAAA,mDAGW;AAAE/J,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAE2J;AAAjC,iBAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;0FAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2B,KAAKnO,eAAL,CAAqBwO,cAArB,EAD3B;;AAAA;AACUL,gBAAAA,QADV;AAAA,mDAEW;AAAE/J,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAE2J;AAAjC,iBAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;uGAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2B,KAAKnO,eAAL,CAAqByO,2BAArB,EAD3B;;AAAA;AACUN,gBAAAA,QADV;AAAA,mDAEW;AAAE/J,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,EAAE,EAAE,CAAtB;AAAyBG,kBAAAA,MAAM,EAAE2J;AAAjC,iBAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAIA,+BAAsBjL,MAAtB,EAA8B;AAC1B,UAAMiL,QAAQ,GAAG5O,MAAM,CAAC6O,eAAP,CAAuBlL,MAAM,CAAC,CAAD,CAA7B,CAAjB;AACA,aAAO,KAAKlD,eAAL,CAAqB0O,gBAArB,CAAsCP,QAAtC,CAAP;AACH;;;WACD,4BAAmBjL,MAAnB,EAA2B;AACvB,UAAMiL,QAAQ,GAAG5O,MAAM,CAAC6O,eAAP,CAAuBlL,MAAM,CAAC,CAAD,CAA7B,CAAjB;AACA,aAAO,KAAKlD,eAAL,CAAqB2O,aAArB,CAAmCR,QAAnC,CAAP;AACH;;;WACD,2BAAkB;AAAA;;AACd,UAAI,KAAK/N,MAAT,EAAiB;AACb,eAAO0G,OAAO,CAACC,OAAR,CAAgB,KAAK3G,MAArB,CAAP;AACH;;AACD,aAAO,KAAK0B,cAAL,GAAsB6B,IAAtB,CAA2B,UAAAC,KAAK,EAAI;AACvCA,QAAAA,KAAK,CAACgL,kBAAN,CAAyB,UAACnN,OAAD,EAAa;AAClC,UAAA,MAAI,CAACX,kBAAL,CAAwB,MAAI,CAACY,WAA7B,EAA0CmN,QAAQ,CAACpN,OAAD,EAAU,EAAV,CAAlD,EAAiE,IAAjE;AACH,SAFD;AAGAmC,QAAAA,KAAK,CAACkL,qBAAN,CAA4B,UAACnN,UAAD,EAAgB;AACxC,UAAA,MAAI,CAACb,kBAAL,CAAwBa,UAAxB,EAAoC,MAAI,CAACJ,QAAzC,EAAmD,IAAnD;AACH,SAFD;AAGA,QAAA,MAAI,CAACnB,MAAL,GAAcwD,KAAd;AACA,eAAOA,KAAP;AACH,OATM,CAAP;AAUH;;;;EAhnB4BhE,oBAAoB,CAACqM,O;;AAknBtD/M,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkProvider = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst LOCAL_STORAGE_ADDRESSES_KEY = \"Addresses\";\nclass WalletLinkProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        // true if mobile client has sent message to override jsonRpcUrl+chainId\n        this.isChainOverridden = false;\n        this._send = this.send;\n        this._sendAsync = this.sendAsync;\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.arbitraryRequest = this.arbitraryRequest.bind(this);\n        this.childRequestEthereumAccounts = this.childRequestEthereumAccounts.bind(this);\n        this._chainId = util_1.ensureIntNumber(options.chainId || 1);\n        this._jsonRpcUrl = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        const chainIdStr = util_1.prepend0x(this._chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses;\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params\n            });\n        });\n        if (this._addresses.length > 0) {\n            this.initializeRelay();\n        }\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this._chainId.toString(10);\n    }\n    get chainId() {\n        return util_1.prepend0x(this._chainId.toString(16));\n    }\n    get isWalletLink() {\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this._jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    setProviderInfo(jsonRpcUrl, chainId) {\n        if (this.isChainOverridden)\n            return;\n        this.updateProviderInfo(jsonRpcUrl, chainId, false);\n    }\n    updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n        if (fromRelay)\n            this.isChainOverridden = true;\n        const originalChainId = this._chainId;\n        this._chainId = util_1.ensureIntNumber(chainId);\n        const chainChanged = this._chainId !== originalChainId;\n        this._jsonRpcUrl = jsonRpcUrl;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this._chainId);\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        if (this._addresses.length > 0) {\n            return this._addresses;\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    close() {\n        this.initializeRelay().then(relay => relay.resetAndReload());\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // WalletLink Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode(util_1.ensureRegExpString(match));\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async arbitraryRequest(data) {\n        const relay = await this.initializeRelay();\n        const res = await relay.arbitraryRequest(data);\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async childRequestEthereumAccounts(childSessionId, childSessionSecret, dappName, dappLogoURL, dappURL) {\n        const relay = await this.initializeRelay();\n        await relay.childRequestEthereumAccounts(childSessionId, childSessionSecret, dappName, dappLogoURL, dappURL);\n        return true;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`WalletLink does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        this._addresses = addresses.map(address => util_1.ensureAddressString(address));\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(LOCAL_STORAGE_ADDRESSES_KEY, addresses.join(\" \"));\n        window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", { detail: this._addresses }));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n                return this._walletlink_arbitrary(params);\n        }\n        if (!this._jsonRpcUrl)\n            throw Error(\"Error: No jsonRpcUrl provided\");\n        return window\n            .fetch(this._jsonRpcUrl, {\n            method: \"POST\",\n            body: JSON.stringify(request),\n            mode: \"cors\",\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n            .then(res => res.json())\n            .then(json => {\n            if (!json) {\n                throw eth_rpc_errors_1.ethErrors.rpc.parse({});\n            }\n            const response = json;\n            const { error } = response;\n            if (error) {\n                throw eth_rpc_errors_1.serializeError(error);\n            }\n            return response;\n        });\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const address = util_1.ensureAddressString(addressString);\n            return this._addresses.includes(address);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        if (!this._isKnownAddress(addressString)) {\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? util_1.ensureAddressString(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? util_1.ensureAddressString(tx.to) : null;\n        const weiValue = tx.value != null ? util_1.ensureBN(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? util_1.ensureBuffer(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? util_1.ensureIntNumber(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? util_1.ensureBN(tx.gasPrice) : null;\n        const gasLimit = tx.gas != null ? util_1.ensureBN(tx.gas) : null;\n        const chainId = this._chainId;\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            gasLimit,\n            chainId\n        };\n    }\n    _requireAuthorization() {\n        if (this._addresses.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson);\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix);\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return this._addresses;\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this._chainId.toString(10);\n    }\n    _eth_chainId() {\n        return util_1.hexStringFromIntNumber(this._chainId);\n    }\n    async _eth_requestAccounts() {\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts();\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = util_1.ensureAddressString(params[0]);\n        const message = util_1.ensureBuffer(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = util_1.ensureBuffer(params[0]);\n        const signature = util_1.ensureBuffer(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = util_1.ensureBuffer(params[0]);\n        const address = util_1.ensureAddressString(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = util_1.ensureBuffer(params[0]);\n        const signature = util_1.ensureBuffer(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx);\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = util_1.ensureBuffer(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this._chainId);\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx);\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = util_1.ensureParsedJSONObject(params[0]);\n        const address = util_1.ensureAddressString(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = util_1.ensureAddressString(params[0]);\n        const typedData = util_1.ensureParsedJSONObject(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = util_1.ensureAddressString(params[0]);\n        const typedData = util_1.ensureParsedJSONObject(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _walletlink_arbitrary(params) {\n        const data = params[0];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        const result = await this.arbitraryRequest(data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = util_1.ensureHexString(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = util_1.ensureHexString(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = util_1.ensureHexString(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setChainIdCallback((chainId) => {\n                this.updateProviderInfo(this._jsonRpcUrl, parseInt(chainId, 10), true);\n            });\n            relay.setJsonRpcUrlCallback((jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, this._chainId, true);\n            });\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.WalletLinkProvider = WalletLinkProvider;\n"]},"metadata":{},"sourceType":"script"}