{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nvar inherits = require('util').inherits;\n\nvar ethUtil = require('ethereumjs-util');\n\nvar EthBlockTracker = require('eth-block-tracker');\n\nvar map = require('async/map');\n\nvar eachSeries = require('async/eachSeries');\n\nvar Stoplight = require('./util/stoplight.js');\n\nvar cacheUtils = require('./util/rpc-cache-utils.js');\n\nvar createPayload = require('./util/create-payload.js');\n\nvar noop = function noop() {};\n\nmodule.exports = Web3ProviderEngine;\ninherits(Web3ProviderEngine, EventEmitter);\n\nfunction Web3ProviderEngine(opts) {\n  var self = this;\n  EventEmitter.call(self);\n  self.setMaxListeners(30); // parse options\n\n  opts = opts || {}; // block polling\n\n  var directProvider = {\n    sendAsync: self._handleAsync.bind(self)\n  };\n  var blockTrackerProvider = opts.blockTrackerProvider || directProvider;\n  self._blockTracker = opts.blockTracker || new EthBlockTracker({\n    provider: blockTrackerProvider,\n    pollingInterval: opts.pollingInterval || 4000,\n    setSkipCacheFlag: true\n  }); // set initialization blocker\n\n  self._ready = new Stoplight(); // local state\n\n  self.currentBlock = null;\n  self._providers = [];\n} // public\n\n\nWeb3ProviderEngine.prototype.start = function () {\n  var _this = this;\n\n  var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n  var self = this; // trigger start\n\n  self._ready.go(); // on new block, request block body and emit as events\n\n\n  self._blockTracker.on('latest', function (blockNumber) {\n    // get block body\n    self._getBlockByNumber(blockNumber, function (err, block) {\n      if (err) {\n        _this.emit('error', err);\n\n        return;\n      }\n\n      if (!block) {\n        _this.emit('error', new Error(\"Could not find block\"));\n\n        return;\n      }\n\n      var bufferBlock = toBufferBlock(block); // set current + emit \"block\" event\n\n      self._setCurrentBlock(bufferBlock); // emit other events\n\n\n      self.emit('rawBlock', block);\n      self.emit('latest', block);\n    });\n  }); // forward other events\n\n\n  self._blockTracker.on('sync', self.emit.bind(self, 'sync'));\n\n  self._blockTracker.on('error', self.emit.bind(self, 'error')); // update state\n\n\n  self._running = true; // signal that we started\n\n  self.emit('start');\n};\n\nWeb3ProviderEngine.prototype.stop = function () {\n  var self = this; // stop block polling by removing event listeners\n\n  self._blockTracker.removeAllListeners(); // update state\n\n\n  self._running = false; // signal that we stopped\n\n  self.emit('stop');\n};\n\nWeb3ProviderEngine.prototype.isRunning = function () {\n  var self = this;\n  return self._running;\n};\n\nWeb3ProviderEngine.prototype.addProvider = function (source, index) {\n  var self = this;\n\n  if (typeof index === 'number') {\n    self._providers.splice(index, 0, source);\n  } else {\n    self._providers.push(source);\n  }\n\n  source.setEngine(this);\n};\n\nWeb3ProviderEngine.prototype.removeProvider = function (source) {\n  var self = this;\n\n  var index = self._providers.indexOf(source);\n\n  if (index < 0) throw new Error('Provider not found.');\n\n  self._providers.splice(index, 1);\n};\n\nWeb3ProviderEngine.prototype.send = function (payload) {\n  throw new Error('Web3ProviderEngine does not support synchronous requests.');\n};\n\nWeb3ProviderEngine.prototype.sendAsync = function (payload, cb) {\n  var self = this;\n\n  self._ready.await(function () {\n    if (Array.isArray(payload)) {\n      // handle batch\n      map(payload, self._handleAsync.bind(self), cb);\n    } else {\n      // handle single\n      self._handleAsync(payload, cb);\n    }\n  });\n}; // private\n\n\nWeb3ProviderEngine.prototype._getBlockByNumber = function (blockNumber, cb) {\n  var req = createPayload({\n    method: 'eth_getBlockByNumber',\n    params: [blockNumber, false],\n    skipCache: true\n  });\n\n  this._handleAsync(req, function (err, res) {\n    if (err) return cb(err);\n    return cb(null, res.result);\n  });\n};\n\nWeb3ProviderEngine.prototype._handleAsync = function (payload, finished) {\n  var self = this;\n  var currentProvider = -1;\n  var result = null;\n  var error = null;\n  var stack = [];\n  next();\n\n  function next(after) {\n    currentProvider += 1;\n    stack.unshift(after); // Bubbled down as far as we could go, and the request wasn't\n    // handled. Return an error.\n\n    if (currentProvider >= self._providers.length) {\n      end(new Error('Request for method \"' + payload.method + '\" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.'));\n    } else {\n      try {\n        var provider = self._providers[currentProvider];\n        provider.handleRequest(payload, next, end);\n      } catch (e) {\n        end(e);\n      }\n    }\n  }\n\n  function end(_error, _result) {\n    error = _error;\n    result = _result;\n    eachSeries(stack, function (fn, callback) {\n      if (fn) {\n        fn(error, result, callback);\n      } else {\n        callback();\n      }\n    }, function () {\n      var resultObj = {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      };\n\n      if (error != null) {\n        resultObj.error = {\n          message: error.stack || error.message || error,\n          code: -32000\n        }; // respond with both error formats\n\n        finished(error, resultObj);\n      } else {\n        finished(null, resultObj);\n      }\n    });\n  }\n}; //\n// from remote-data\n//\n\n\nWeb3ProviderEngine.prototype._setCurrentBlock = function (block) {\n  var self = this;\n  self.currentBlock = block;\n  self.emit('block', block);\n}; // util\n\n\nfunction toBufferBlock(jsonBlock) {\n  return {\n    number: ethUtil.toBuffer(jsonBlock.number),\n    hash: ethUtil.toBuffer(jsonBlock.hash),\n    parentHash: ethUtil.toBuffer(jsonBlock.parentHash),\n    nonce: ethUtil.toBuffer(jsonBlock.nonce),\n    mixHash: ethUtil.toBuffer(jsonBlock.mixHash),\n    sha3Uncles: ethUtil.toBuffer(jsonBlock.sha3Uncles),\n    logsBloom: ethUtil.toBuffer(jsonBlock.logsBloom),\n    transactionsRoot: ethUtil.toBuffer(jsonBlock.transactionsRoot),\n    stateRoot: ethUtil.toBuffer(jsonBlock.stateRoot),\n    receiptsRoot: ethUtil.toBuffer(jsonBlock.receiptRoot || jsonBlock.receiptsRoot),\n    miner: ethUtil.toBuffer(jsonBlock.miner),\n    difficulty: ethUtil.toBuffer(jsonBlock.difficulty),\n    totalDifficulty: ethUtil.toBuffer(jsonBlock.totalDifficulty),\n    size: ethUtil.toBuffer(jsonBlock.size),\n    extraData: ethUtil.toBuffer(jsonBlock.extraData),\n    gasLimit: ethUtil.toBuffer(jsonBlock.gasLimit),\n    gasUsed: ethUtil.toBuffer(jsonBlock.gasUsed),\n    timestamp: ethUtil.toBuffer(jsonBlock.timestamp),\n    transactions: jsonBlock.transactions\n  };\n}","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/authereum/node_modules/web3-provider-engine/index.js"],"names":["EventEmitter","require","inherits","ethUtil","EthBlockTracker","map","eachSeries","Stoplight","cacheUtils","createPayload","noop","module","exports","Web3ProviderEngine","opts","self","call","setMaxListeners","directProvider","sendAsync","_handleAsync","bind","blockTrackerProvider","_blockTracker","blockTracker","provider","pollingInterval","setSkipCacheFlag","_ready","currentBlock","_providers","prototype","start","cb","go","on","blockNumber","_getBlockByNumber","err","block","emit","Error","bufferBlock","toBufferBlock","_setCurrentBlock","_running","stop","removeAllListeners","isRunning","addProvider","source","index","splice","push","setEngine","removeProvider","indexOf","send","payload","await","Array","isArray","req","method","params","skipCache","res","result","finished","currentProvider","error","stack","next","after","unshift","length","end","handleRequest","e","_error","_result","fn","callback","resultObj","id","jsonrpc","message","code","jsonBlock","number","toBuffer","hash","parentHash","nonce","mixHash","sha3Uncles","logsBloom","transactionsRoot","stateRoot","receiptsRoot","receiptRoot","miner","difficulty","totalDifficulty","size","extraData","gasLimit","gasUsed","timestamp","transactions"],"mappings":"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","sourcesContent":["const EventEmitter = require('events').EventEmitter\nconst inherits = require('util').inherits\nconst ethUtil = require('ethereumjs-util')\nconst EthBlockTracker = require('eth-block-tracker')\nconst map = require('async/map')\nconst eachSeries = require('async/eachSeries')\nconst Stoplight = require('./util/stoplight.js')\nconst cacheUtils = require('./util/rpc-cache-utils.js')\nconst createPayload = require('./util/create-payload.js')\nconst noop = function(){}\n\nmodule.exports = Web3ProviderEngine\n\n\ninherits(Web3ProviderEngine, EventEmitter)\n\nfunction Web3ProviderEngine(opts) {\n  const self = this\n  EventEmitter.call(self)\n  self.setMaxListeners(30)\n  // parse options\n  opts = opts || {}\n\n  // block polling\n  const directProvider = { sendAsync: self._handleAsync.bind(self) }\n  const blockTrackerProvider = opts.blockTrackerProvider || directProvider\n  self._blockTracker = opts.blockTracker || new EthBlockTracker({\n    provider: blockTrackerProvider,\n    pollingInterval: opts.pollingInterval || 4000,\n    setSkipCacheFlag: true,\n  })\n\n  // set initialization blocker\n  self._ready = new Stoplight()\n  \n  // local state\n  self.currentBlock = null\n  self._providers = []\n}\n\n// public\n\nWeb3ProviderEngine.prototype.start = function(cb = noop){\n  const self = this\n\n  // trigger start\n  self._ready.go()\n\n  // on new block, request block body and emit as events\n  self._blockTracker.on('latest', (blockNumber) => {\n    // get block body\n    self._getBlockByNumber(blockNumber, (err, block) => {\n      if (err) {\n        this.emit('error', err)\n        return\n      }\n      if (!block) {\n        this.emit('error', new Error(\"Could not find block\"))\n        return\n      }\n      const bufferBlock = toBufferBlock(block)\n      // set current + emit \"block\" event\n      self._setCurrentBlock(bufferBlock)\n      // emit other events\n      self.emit('rawBlock', block)\n      self.emit('latest', block)\n    })\n  })\n\n  // forward other events\n  self._blockTracker.on('sync', self.emit.bind(self, 'sync'))\n  self._blockTracker.on('error', self.emit.bind(self, 'error'))\n\n  // update state\n  self._running = true\n  // signal that we started\n  self.emit('start')\n}\n\nWeb3ProviderEngine.prototype.stop = function(){\n  const self = this\n  // stop block polling by removing event listeners\n  self._blockTracker.removeAllListeners()\n  // update state\n  self._running = false\n  // signal that we stopped\n  self.emit('stop')\n}\n\nWeb3ProviderEngine.prototype.isRunning = function(){\n  const self = this\n  return self._running\n}\n\nWeb3ProviderEngine.prototype.addProvider = function(source, index){\n  const self = this\n  if (typeof index === 'number') {\n    self._providers.splice(index, 0, source)\n  } else {\n    self._providers.push(source)\n  }\n  source.setEngine(this)\n}\n\nWeb3ProviderEngine.prototype.removeProvider = function(source){\n  const self = this\n  const index = self._providers.indexOf(source)\n  if (index < 0) throw new Error('Provider not found.')\n  self._providers.splice(index, 1)\n}\n\nWeb3ProviderEngine.prototype.send = function(payload){\n  throw new Error('Web3ProviderEngine does not support synchronous requests.')\n}\n\nWeb3ProviderEngine.prototype.sendAsync = function(payload, cb){\n  const self = this\n  self._ready.await(function(){\n\n    if (Array.isArray(payload)) {\n      // handle batch\n      map(payload, self._handleAsync.bind(self), cb)\n    } else {\n      // handle single\n      self._handleAsync(payload, cb)\n    }\n\n  })\n}\n\n// private\n\nWeb3ProviderEngine.prototype._getBlockByNumber = function(blockNumber, cb) {\n  const req = createPayload({ method: 'eth_getBlockByNumber', params: [blockNumber, false], skipCache: true })\n  this._handleAsync(req, (err, res) => {\n    if (err) return cb(err)\n    return cb(null, res.result)\n  })\n}\n\nWeb3ProviderEngine.prototype._handleAsync = function(payload, finished) {\n  var self = this\n  var currentProvider = -1\n  var result = null\n  var error = null\n\n  var stack = []\n\n  next()\n  \n  function next(after) {\n    currentProvider += 1\n    stack.unshift(after)\n\n    // Bubbled down as far as we could go, and the request wasn't\n    // handled. Return an error.\n    if (currentProvider >= self._providers.length) {\n      end(new Error('Request for method \"' + payload.method + '\" not handled by any subprovider. Please check your subprovider configuration to ensure this method is handled.'))\n    } else {\n      try {\n        var provider = self._providers[currentProvider]\n        provider.handleRequest(payload, next, end)\n      } catch (e) {\n        end(e)\n      }\n    }\n  }\n\n  function end(_error, _result) {\n    error = _error\n    result = _result\n\n    eachSeries(stack, function(fn, callback) {\n\n      if (fn) {\n        fn(error, result, callback)\n      } else {\n        callback()\n      }\n    }, function() {\n\n      var resultObj = {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      }\n\n      if (error != null) {\n        resultObj.error = {\n          message: error.stack || error.message || error,\n          code: -32000\n        }\n        // respond with both error formats\n        finished(error, resultObj)\n      } else {\n        finished(null, resultObj)\n      }\n    })\n  }\n}\n\n//\n// from remote-data\n//\n\nWeb3ProviderEngine.prototype._setCurrentBlock = function(block){\n  const self = this\n  self.currentBlock = block\n  self.emit('block', block)\n}\n\n// util\n\nfunction toBufferBlock (jsonBlock) {\n  return {\n    number:           ethUtil.toBuffer(jsonBlock.number),\n    hash:             ethUtil.toBuffer(jsonBlock.hash),\n    parentHash:       ethUtil.toBuffer(jsonBlock.parentHash),\n    nonce:            ethUtil.toBuffer(jsonBlock.nonce),\n    mixHash:          ethUtil.toBuffer(jsonBlock.mixHash),\n    sha3Uncles:       ethUtil.toBuffer(jsonBlock.sha3Uncles),\n    logsBloom:        ethUtil.toBuffer(jsonBlock.logsBloom),\n    transactionsRoot: ethUtil.toBuffer(jsonBlock.transactionsRoot),\n    stateRoot:        ethUtil.toBuffer(jsonBlock.stateRoot),\n    receiptsRoot:     ethUtil.toBuffer(jsonBlock.receiptRoot || jsonBlock.receiptsRoot),\n    miner:            ethUtil.toBuffer(jsonBlock.miner),\n    difficulty:       ethUtil.toBuffer(jsonBlock.difficulty),\n    totalDifficulty:  ethUtil.toBuffer(jsonBlock.totalDifficulty),\n    size:             ethUtil.toBuffer(jsonBlock.size),\n    extraData:        ethUtil.toBuffer(jsonBlock.extraData),\n    gasLimit:         ethUtil.toBuffer(jsonBlock.gasLimit),\n    gasUsed:          ethUtil.toBuffer(jsonBlock.gasUsed),\n    timestamp:        ethUtil.toBuffer(jsonBlock.timestamp),\n    transactions:     jsonBlock.transactions,\n  }\n}\n"]},"metadata":{},"sourceType":"script"}