{"ast":null,"code":"import _slicedToArray from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/ThemeSwitch.jsx\",\n    _s = $RefreshSig$();\n\nimport { Switch } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeSwitcher() {\n  _s();\n\n  var theme = window.localStorage.getItem(\"theme\");\n\n  var _useState = useState(!(!theme || theme === \"light\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDarkMode = _useState2[0],\n      setIsDarkMode = _useState2[1];\n\n  var _useThemeSwitcher = useThemeSwitcher(),\n      switcher = _useThemeSwitcher.switcher,\n      currentTheme = _useThemeSwitcher.currentTheme,\n      themes = _useThemeSwitcher.themes;\n\n  useEffect(function () {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  var toggleTheme = function toggleTheme(isChecked) {\n    setIsDarkMode(isChecked);\n    switcher({\n      theme: isChecked ? themes.dark : themes.light\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main fade-in\",\n    style: {\n      position: \"fixed\",\n      right: 8,\n      bottom: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        padding: 8\n      },\n      children: currentTheme === \"light\" ? \"☀️\" : \"🌜\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: isDarkMode,\n      onChange: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeSwitcher, \"EbOl+DhXP9WVngfwd6+PfQOMzA4=\", false, function () {\n  return [useThemeSwitcher];\n});\n\n_c = ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/ThemeSwitch.jsx"],"names":["Switch","React","useEffect","useState","useThemeSwitcher","ThemeSwitcher","theme","window","localStorage","getItem","isDarkMode","setIsDarkMode","switcher","currentTheme","themes","setItem","toggleTheme","isChecked","dark","light","position","right","bottom","padding"],"mappings":";;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;;AACA,kBAAoCN,QAAQ,CAAC,EAAE,CAACG,KAAD,IAAUA,KAAK,KAAK,OAAtB,CAAD,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AACA,0BAA2CP,gBAAgB,EAA3D;AAAA,MAAQQ,QAAR,qBAAQA,QAAR;AAAA,MAAkBC,YAAlB,qBAAkBA,YAAlB;AAAA,MAAgCC,MAAhC,qBAAgCA,MAAhC;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4B,OAA5B,EAAqCF,YAArC;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,SAAS,EAAI;AAC/BN,IAAAA,aAAa,CAACM,SAAD,CAAb;AACAL,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,KAAK,EAAEW,SAAS,GAAGH,MAAM,CAACI,IAAV,GAAiBJ,MAAM,CAACK;AAA1C,KAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE,CAA5B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAArC;AAAA,4BACE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAA,gBAA8BV,YAAY,KAAK,OAAjB,GAA2B,IAA3B,GAAkC;AAAhE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,UAAjB;AAA6B,MAAA,QAAQ,EAAEM;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApBuBX,a;UAGqBD,gB;;;KAHrBC,a","sourcesContent":["import { Switch } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!(!theme || theme === \"light\"));\n  const { switcher, currentTheme, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = isChecked => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  };\n\n  return (\n    <div className=\"main fade-in\" style={{ position: \"fixed\", right: 8, bottom: 8 }}>\n      <span style={{ padding: 8 }}>{currentTheme === \"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}