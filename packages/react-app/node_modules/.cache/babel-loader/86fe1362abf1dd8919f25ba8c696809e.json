{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n  var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain) cm.getWrapperElement().appendChild(tt);else document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = e.clientX + 5 + \"px\";\n    }\n\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function () {\n      rm(tt);\n    }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n\n      if (tooltip) {\n        hideTooltip(tooltip);\n        tooltip = null;\n      }\n    }\n\n    var poll = setInterval(function () {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n\n        if (!n) {\n          hide();\n          break;\n        }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, conf, hasGutter) {\n    this.marked = [];\n    if (conf instanceof Function) conf = {\n      getAnnotations: conf\n    };\n    if (!conf || conf === true) conf = {};\n    this.options = {};\n    this.linterOptions = conf.options || {};\n\n    for (var prop in defaults) {\n      this.options[prop] = defaults[prop];\n    }\n\n    for (var prop in conf) {\n      if (defaults.hasOwnProperty(prop)) {\n        if (conf[prop] != null) this.options[prop] = conf[prop];\n      } else if (!conf.options) {\n        this.linterOptions[prop] = conf[prop];\n      }\n    }\n\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n\n    this.onMouseOver = function (e) {\n      onMouseOver(cm, e);\n    };\n\n    this.waitingFor = 0;\n  }\n\n  var defaults = {\n    highlightLines: false,\n    tooltips: true,\n    delay: 500,\n    lintOnChange: true,\n    getAnnotations: null,\n    async: false,\n    selfContain: null,\n    formatAnnotation: null,\n    onUpdateLinting: null\n  };\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    if (state.options.highlightLines) clearErrorLines(cm);\n\n    for (var i = 0; i < state.marked.length; ++i) {\n      state.marked[i].clear();\n    }\n\n    state.marked.length = 0;\n  }\n\n  function clearErrorLines(cm) {\n    cm.eachLine(function (line) {\n      var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n      if (has) cm.removeLineClass(line, \"wrap\", has[0]);\n    });\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"),\n        inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function (e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i],\n          line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations) {\n    var state = cm.state.lint;\n    var id = ++state.waitingFor;\n\n    function abort() {\n      id = -1;\n      cm.off(\"change\", abort);\n    }\n\n    cm.on(\"change\", abort);\n    getAnnotations(cm.getValue(), function (annotations, arg2) {\n      cm.off(\"change\", abort);\n      if (state.waitingFor != id) return;\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2;\n      cm.operation(function () {\n        updateLinting(cm, annotations);\n      });\n    }, state.linterOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations);\n    } else {\n      var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function (issues) {\n        cm.operation(function () {\n          updateLinting(cm, issues);\n        });\n      });else cm.operation(function () {\n        updateLinting(cm, annotations);\n      });\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    clearMarks(cm);\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue; // filter out duplicate messages\n\n      var message = [];\n      anns = anns.filter(function (item) {\n        return message.indexOf(item.message) > -1 ? false : message.push(item.message);\n      });\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      } // use original annotations[line] to show multiple messages\n\n\n      if (state.hasGutter) cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1, options.tooltips));\n      if (options.highlightLines) cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n    }\n\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function () {\n      startLinting(cm);\n    }, state.options.delay);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(),\n        x = (box.left + box.right) / 2,\n        y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({\n      left: x,\n      top: y\n    }, \"client\"));\n    var annotations = [];\n\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function (cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false) cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"),\n          hasLintGutter = false;\n\n      for (var i = 0; i < gutters.length; ++i) {\n        if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      }\n\n      var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n      if (state.options.lintOnChange) cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\") CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n      startLinting(cm);\n    }\n  });\n  CodeMirror.defineExtension(\"performLint\", function () {\n    startLinting(this);\n  });\n});","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/codemirror/addon/lint/lint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","GUTTER_ID","LINT_LINE_ID","showTooltip","cm","e","content","tt","document","createElement","className","options","theme","appendChild","cloneNode","state","lint","selfContain","getWrapperElement","body","position","parentNode","off","style","top","Math","max","clientY","offsetHeight","left","clientX","on","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","tooltip","hide","poll","setInterval","n","nodeType","host","clearInterval","LintState","conf","hasGutter","marked","Function","getAnnotations","linterOptions","prop","defaults","hasOwnProperty","timeout","onMouseOver","waitingFor","highlightLines","tooltips","delay","lintOnChange","async","formatAnnotation","onUpdateLinting","clearMarks","clearGutter","clearErrorLines","i","length","clear","eachLine","line","has","wrapClass","exec","removeLineClass","makeMarker","labels","severity","multiple","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","from","push","annotationTooltip","tip","messageHTML","innerHTML","createTextNode","message","lintAsync","id","abort","getValue","arg2","operation","updateLinting","startLinting","getHelper","Pos","then","issues","annotationsNotSorted","anns","filter","item","indexOf","maxSeverity","tipLabel","createDocumentFragment","to","markText","__annotation","setGutterMarker","addLineClass","onChange","clearTimeout","popupTooltips","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","gutters","getOption","hasLintGutter","defineExtension"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n  var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain)\n      cm.getWrapperElement().appendChild(tt);\n    else\n      document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, conf, hasGutter) {\n    this.marked = [];\n    if (conf instanceof Function) conf = {getAnnotations: conf};\n    if (!conf || conf === true) conf = {};\n    this.options = {};\n    this.linterOptions = conf.options || {};\n    for (var prop in defaults) this.options[prop] = defaults[prop];\n    for (var prop in conf) {\n      if (defaults.hasOwnProperty(prop)) {\n        if (conf[prop] != null) this.options[prop] = conf[prop];\n      } else if (!conf.options) {\n        this.linterOptions[prop] = conf[prop];\n      }\n    }\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  var defaults = {\n    highlightLines: false,\n    tooltips: true,\n    delay: 500,\n    lintOnChange: true,\n    getAnnotations: null,\n    async: false,\n    selfContain: null,\n    formatAnnotation: null,\n    onUpdateLinting: null\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    if (state.options.highlightLines) clearErrorLines(cm);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function clearErrorLines(cm) {\n    cm.eachLine(function(line) {\n      var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n      if (has) cm.removeLineClass(line, \"wrap\", has[0]);\n    })\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, state.linterOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    clearMarks(cm);\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      // filter out duplicate messages\n      var message = [];\n      anns = anns.filter(function(item) { return message.indexOf(item.message) > -1 ? false : message.push(item.message) });\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n      // use original annotations[line] to show multiple messages\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1,\n                                                       options.tooltips));\n\n      if (options.highlightLines)\n        cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n      if (state.options.lintOnChange)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    startLinting(this);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}