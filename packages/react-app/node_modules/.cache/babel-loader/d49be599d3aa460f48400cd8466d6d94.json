{"ast":null,"code":"'use strict';\n\nvar merge = require('merge');\n\nfunction Node() {\n  this.data = {};\n  this.children = {};\n}\n\nNode.prototype.insert = function (word, data, index, hyperCaching) {\n  if (hyperCaching && !this.is_root) this.data[data] = true;\n\n  if (index < word.length) {\n    var nextCharacter = word[index];\n    if (!this.children[nextCharacter]) this.children[nextCharacter] = new Node();\n    this.children[nextCharacter].insert(word, data, index + 1, hyperCaching);\n  } else this.data[data] = true;\n};\n\nNode.prototype.collect = function (hyperCaching) {\n  if (hyperCaching) return this.data;\n  var results = {};\n\n  for (var result in this.data) {\n    results[result] = true;\n  }\n\n  for (var child in this.children) {\n    var subResults = this.children[child].collect();\n\n    for (var subResult in subResults) {\n      results[subResult] = true;\n    }\n  }\n\n  return results;\n};\n\nNode.prototype.search = function (keyword, index, hyperCaching) {\n  if (index == keyword.length) return this.collect(hyperCaching);\n  if (this.children[keyword[index]]) return this.children[keyword[index]].search(keyword, index + 1, hyperCaching);\n  return [];\n};\n\nfunction Trie(hyperCaching) {\n  this.root = new Node();\n  this.hyperCaching = hyperCaching;\n  this.root.is_root = true;\n}\n\nTrie.prototype.insert = function (word, data) {\n  if (word) this.root.insert(word, data, 0, this.hyperCaching);\n};\n\nTrie.prototype.search = function (keyword) {\n  return keyword && keyword.length ? this.root.search(keyword, 0, this.hyperCaching) : [];\n};\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nfunction sanitize(str, config) {\n  if (typeof str != 'string' && typeof str != 'number' && typeof str != 'boolean') return '';\n  str = str.toString().trim();\n  var caseSensitive = config.case_sensitive,\n      replacements = config.replacements;\n  if (!caseSensitive) str = str.toLowerCase();\n\n  if (replacements && typeof replacements === 'object') {\n    var sanitized_str = '';\n\n    for (var position = 0; position < str.length; position++) {\n      if (replacements[str[position]]) sanitized_str += replacements[str[position]];else sanitized_str += str[position];\n    }\n\n    return sanitized_str;\n  }\n\n  return str;\n}\n\nfunction pluck(obj, key, level) {\n  var plucked_object = [];\n\n  if (typeof key === 'string' && key.length) {\n    var sub_keys = key.split('.');\n    if (level == sub_keys.length) return obj !== undefined ? obj : [];\n\n    if (isArray(obj)) {\n      obj.forEach(function (element) {\n        plucked_object = plucked_object.concat(pluck(element, key, level));\n      });\n    } else {\n      return obj !== undefined ? pluck(obj[sub_keys[level]], key, level + 1) : [];\n    }\n  }\n\n  return plucked_object;\n}\n\nfunction dig(obj, config, level) {\n  var results = [];\n  config = config || {};\n\n  if (typeof obj === 'object' && (config.deep === true || level === 0) || isArray(obj)) {\n    for (var prop in obj) {\n      results = results.concat(dig(obj[prop], config, level + 1));\n    }\n  } else {\n    var val = sanitize(obj, config);\n    if (val) results.push(val);\n  }\n\n  return results;\n}\n\nfunction flatten(list, config) {\n  var sanitized_list = [];\n  list.forEach(function (element, index) {\n    if (isArray(config.keys) && config.keys.length) {\n      var sanitized_object = [];\n      config.keys.forEach(function (key) {\n        var target_obj = pluck(element, key, 0);\n        if (target_obj) sanitized_object = sanitized_object.concat(dig(target_obj, config, 0));\n      });\n      sanitized_list.push(sanitized_object);\n    } else sanitized_list.push(dig(element, config, 0));\n  });\n  return sanitized_list;\n}\n\nfunction Searchico(haystack, options) {\n  var umlauts = {\n    'ä': 'a',\n    'à': 'a',\n    'á': 'a',\n    'â': 'a',\n    'æ': 'a',\n    'ã': 'a',\n    'å': 'a',\n    'ā': 'a',\n    'ç': 'c',\n    'ć': 'c',\n    'č': 'c',\n    'đ': 'd',\n    'ð': 'd',\n    'è': 'e',\n    'é': 'e',\n    'ê': 'e',\n    'ë': 'e',\n    'ē': 'e',\n    'ė': 'e',\n    'ę': 'e',\n    'î': 'i',\n    'ï': 'i',\n    'í': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ì': 'i',\n    'ł': 'l',\n    'ñ': 'n',\n    'ń': 'n',\n    'ň': 'n',\n    'ô': 'o',\n    'ö': 'o',\n    'ò': 'o',\n    'ó': 'o',\n    'œ': 'o',\n    'ø': 'o',\n    'ō': 'o',\n    'õ': 'o',\n    'ř': 'r',\n    'ś': 's',\n    'š': 's',\n    'ß': 'ss',\n    'ť': 't',\n    'û': 'u',\n    'ü': 'u',\n    'ù': 'u',\n    'ú': 'u',\n    'ū': 'u',\n    'ů': 'u',\n    'ÿ': 'y',\n    'ý': 'y',\n    'ž': 'z',\n    'ż': 'z',\n    'Ż': 'z',\n    'ź': 'z'\n  };\n  var defaults = {\n    case_sensitive: false,\n    hyper_indexing: true,\n    hyper_caching: false,\n    replace_umlauts: true,\n    deep: true,\n    keys: []\n  };\n  this.config = merge(defaults, options);\n  this.config.replacements = this.config.replace_umlauts === true ? umlauts : {};\n  this.data_list = haystack;\n  this.sanitized_data_list = flatten(haystack, this.config);\n\n  if (this.config.hyper_indexing) {\n    this.trie = new Trie(this.config.hyper_caching);\n\n    for (var row in this.sanitized_data_list) {\n      for (var column in this.sanitized_data_list[row]) {\n        var str = this.sanitized_data_list[row][column];\n\n        for (var position = 0; position < str.length; position++) {\n          this.trie.insert(str.substring(position), row);\n        }\n      }\n    }\n\n    this.sanitized_data_list = undefined;\n  }\n}\n\nSearchico.prototype.find = function (keyword) {\n  keyword = sanitize(keyword, this.config);\n  var results = [];\n\n  if (this.config.hyper_indexing) {\n    var resultIndices = this.trie.search(keyword);\n\n    for (var i in resultIndices) {\n      results.push(this.data_list[i]);\n    }\n  } else {\n    var len = this.sanitized_data_list.length;\n\n    for (var index = 0; index < len; ++index) {\n      var found = false,\n          obj = this.sanitized_data_list[index];\n      obj.every(function (str) {\n        found = str.indexOf(keyword) != -1;\n        return !found;\n      });\n      if (found) results.push(this.data_list[index]);\n    }\n  }\n\n  return results;\n};\n\nSearchico.prototype.data = function () {\n  return this.data_list;\n};\n\nfunction init(haystack, options) {\n  var instance = new Searchico(haystack, options);\n  return instance;\n}\n\nmodule.exports = init;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/searchico/index.js"],"names":["merge","require","Node","data","children","prototype","insert","word","index","hyperCaching","is_root","length","nextCharacter","collect","results","result","child","subResults","subResult","search","keyword","Trie","root","isArray","obj","Object","toString","call","sanitize","str","config","trim","caseSensitive","case_sensitive","replacements","toLowerCase","sanitized_str","position","pluck","key","level","plucked_object","sub_keys","split","undefined","forEach","element","concat","dig","deep","prop","val","push","flatten","list","sanitized_list","keys","sanitized_object","target_obj","Searchico","haystack","options","umlauts","defaults","hyper_indexing","hyper_caching","replace_umlauts","data_list","sanitized_data_list","trie","row","column","substring","find","resultIndices","i","len","found","every","indexOf","init","instance","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar merge = require('merge');\n\nfunction Node () {\n    this.data = {};\n    this.children = {};\n}\n\nNode.prototype.insert = function (word, data, index, hyperCaching) {\n    if (hyperCaching && !this.is_root)\n        this.data[data] = true;\n\n    if (index < word.length) {\n        var nextCharacter = word[index];\n        if (!this.children[nextCharacter])\n            this.children[nextCharacter] = new Node();\n        this.children[nextCharacter].insert(word, data, index + 1, hyperCaching);\n    }\n    else\n        this.data[data] = true;\n};\n\nNode.prototype.collect = function (hyperCaching) {\n    if (hyperCaching)\n        return this.data;\n\n    var results = {};\n    for (var result in this.data)\n        results[result] = true;\n\n    for (var child in this.children) {\n        var subResults = this.children[child].collect();\n        for (var subResult in subResults)\n            results[subResult] = true;\n    }\n    return results;\n};\n\nNode.prototype.search = function (keyword, index, hyperCaching) {\n    if (index == keyword.length)\n        return this.collect(hyperCaching);\n\n    if (this.children[keyword[index]])\n        return this.children[keyword[index]].search(keyword, index + 1, hyperCaching);\n\n    return [];\n};\n\nfunction Trie (hyperCaching) {\n    this.root = new Node();\n    this.hyperCaching = hyperCaching;\n    this.root.is_root = true;\n}\n\nTrie.prototype.insert = function (word, data) {\n    if (word)\n        this.root.insert(word, data, 0, this.hyperCaching);\n};\n\nTrie.prototype.search = function (keyword) {\n    return (keyword && keyword.length) ? this.root.search(keyword, 0, this.hyperCaching) : [];\n};\n\nfunction isArray (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nfunction sanitize (str, config) {\n    if (typeof(str) != 'string' && typeof(str) != 'number' && typeof(str) != 'boolean')\n        return '';\n\n    str = str.toString().trim();\n    var caseSensitive = config.case_sensitive,\n        replacements = config.replacements;\n\n    if (!caseSensitive)\n        str = str.toLowerCase();\n    if (replacements && typeof(replacements) === 'object') {\n        var sanitized_str = '';\n        for (var position = 0; position < str.length; position++) {\n            if (replacements[str[position]])\n                sanitized_str += replacements[str[position]];\n            else\n                sanitized_str += str[position];\n        }\n        return sanitized_str;\n    }\n    return str;\n}\n\nfunction pluck (obj, key, level) {\n    var plucked_object = [];\n    if (typeof(key) === 'string' && key.length) {\n        var sub_keys = key.split('.');\n        if (level == sub_keys.length)\n            return (obj !== undefined) ? obj : [];\n\n        if (isArray(obj)) {\n            obj.forEach(function(element) {\n                plucked_object = plucked_object.concat(pluck(element, key, level));\n            })\n        }\n        else {\n            return (obj !== undefined) ? pluck(obj[sub_keys[level]], key, level + 1) : [];\n        }\n    }\n    return plucked_object;\n}\n\nfunction dig (obj, config, level) {\n    var results = [];\n    config = config || {};\n    if ((typeof(obj) === 'object' && (config.deep === true || level === 0)) || isArray(obj)) {\n        for (var prop in obj)\n            results = results.concat(dig(obj[prop], config, level + 1));\n    }\n    else {\n        var val = sanitize(obj, config);\n        if (val)\n            results.push(val);\n    }\n    return results;\n}\n\nfunction flatten (list, config) {\n    var sanitized_list = [];\n    list.forEach(function(element, index) {\n        if(isArray(config.keys) && config.keys.length) {\n            var sanitized_object = [];\n            config.keys.forEach(function(key) {\n                var target_obj = pluck(element, key, 0);\n                if (target_obj)\n                    sanitized_object = sanitized_object.concat(dig(target_obj, config, 0));\n            });\n            sanitized_list.push(sanitized_object);\n        }\n        else\n            sanitized_list.push(dig(element, config, 0));\n    });\n    return sanitized_list;\n}\n\nfunction Searchico (haystack, options) {\n    var umlauts = {\n        'ä': 'a', 'à': 'a', 'á': 'a', 'â': 'a', 'æ': 'a', 'ã': 'a', 'å': 'a', 'ā': 'a',\n        'ç': 'c', 'ć': 'c', 'č': 'c',\n        'đ' : 'd', 'ð': 'd',\n        'è': 'e', 'é': 'e', 'ê': 'e', 'ë': 'e', 'ē': 'e', 'ė': 'e', 'ę': 'e',\n        'î' : 'i', 'ï' : 'i', 'í' : 'i', 'ī' : 'i', 'į' : 'i', 'ì' : 'i',\n        'ł': 'l',\n        'ñ' : 'n', 'ń' : 'n', 'ň' : 'n',\n        'ô' : 'o', 'ö' : 'o', 'ò' : 'o', 'ó' : 'o', 'œ' : 'o', 'ø' : 'o', 'ō' : 'o', 'õ' : 'o',\n        'ř': 'r',\n        'ś': 's', 'š': 's',\n        'ß': 'ss',\n        'ť': 't',\n        'û' : 'u', 'ü' : 'u', 'ù' : 'u', 'ú' : 'u', 'ū' : 'u', 'ů' : 'u',\n        'ÿ': 'y', 'ý': 'y',\n        'ž' : 'z', 'ż' : 'z', 'Ż' : 'z', 'ź' : 'z',\n    };\n    var defaults = {\n        case_sensitive: false,\n        hyper_indexing: true,\n        hyper_caching: false,\n        replace_umlauts: true,\n        deep: true,\n        keys: []\n    };\n\n    this.config = merge(defaults, options);\n    this.config.replacements = (this.config.replace_umlauts === true) ? umlauts : {};\n\n    this.data_list = haystack;\n    this.sanitized_data_list = flatten(haystack, this.config);\n\n    if (this.config.hyper_indexing) {\n        this.trie = new Trie(this.config.hyper_caching);\n        for (var row in this.sanitized_data_list) {\n            for (var column in this.sanitized_data_list[row]) {\n                var str = this.sanitized_data_list[row][column];\n                for (var position = 0; position < str.length; position++)\n                    this.trie.insert(str.substring(position), row);\n            }\n        }\n        this.sanitized_data_list = undefined;\n    }\n\n}\n\nSearchico.prototype.find = function (keyword) {\n    keyword = sanitize(keyword, this.config);\n    var results = [];\n    if (this.config.hyper_indexing) {\n        var resultIndices = this.trie.search(keyword);\n        for (var i in resultIndices)\n            results.push(this.data_list[i]);\n    }\n    else {\n        var len = this.sanitized_data_list.length;\n        for (var index = 0; index < len; ++index) {\n            var found = false, obj = this.sanitized_data_list[index];\n            obj.every(function(str) {\n                found = (str.indexOf(keyword) != -1);\n                return !found;\n            });\n            if (found)\n                results.push(this.data_list[index]);\n        }\n    }\n    return results;\n};\n\nSearchico.prototype.data = function () {\n    return this.data_list;\n}\n\nfunction init (haystack, options) {\n    var instance = new Searchico(haystack, options);\n    return instance;\n}\n\nmodule.exports = init;"]},"metadata":{},"sourceType":"script"}