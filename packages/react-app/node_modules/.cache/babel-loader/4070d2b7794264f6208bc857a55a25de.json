{"ast":null,"code":"// Process autolinks '<protocol:...>'\n'use strict';\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\nmodule.exports = function autolink(state, silent) {\n  var url,\n      fullUrl,\n      token,\n      ch,\n      start,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n    return false;\n  }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n    ch = state.src.charCodeAt(pos);\n    if (ch === 0x3C\n    /* < */\n    ) return false;\n    if (ch === 0x3E\n    /* > */\n    ) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/markdown-it/lib/rules_inline/autolink.js"],"names":["EMAIL_RE","AUTOLINK_RE","module","exports","autolink","state","silent","url","fullUrl","token","ch","start","max","pos","src","charCodeAt","posMax","slice","test","md","normalizeLink","validateLink","push","attrs","markup","info","content","normalizeLinkText","length"],"mappings":"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","sourcesContent":["// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n"]},"metadata":{},"sourceType":"script"}