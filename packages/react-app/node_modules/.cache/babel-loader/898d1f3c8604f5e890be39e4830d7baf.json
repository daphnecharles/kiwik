{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nvar _nextId = 1;\n\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  var fetcher = \"Web3LegacyFetcher\";\n  return function (method, params) {\n    var _this = this;\n\n    // Metamask complains about eth_sign (and on some versions hangs)\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    var request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise(function (resolve, reject) {\n      _this.emit(\"debug\", {\n        action: \"request\",\n        fetcher: fetcher,\n        request: deepCopy(request),\n        provider: _this\n      });\n\n      sendFunc(request, function (error, response) {\n        if (error) {\n          _this.emit(\"debug\", {\n            action: \"response\",\n            fetcher: fetcher,\n            error: error,\n            request: request,\n            provider: _this\n          });\n\n          return reject(error);\n        }\n\n        _this.emit(\"debug\", {\n          action: \"response\",\n          fetcher: fetcher,\n          request: request,\n          response: response,\n          provider: _this\n        });\n\n        if (response.error) {\n          var _error = new Error(response.error.message);\n\n          _error.code = response.error.code;\n          _error.data = response.error.data;\n          return reject(_error);\n        }\n\n        resolve(response.result);\n      });\n    });\n  };\n}\n\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    var _this2 = this;\n\n    if (params == null) {\n      params = [];\n    } // Metamask complains about eth_sign (and on some versions hangs)\n\n\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    var request = {\n      method: method,\n      params: params\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      fetcher: \"Eip1193Fetcher\",\n      request: deepCopy(request),\n      provider: this\n    });\n    return provider.request(request).then(function (response) {\n      _this2.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request: request,\n        response: response,\n        provider: _this2\n      });\n\n      return response;\n    }, function (error) {\n      _this2.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request: request,\n        error: error,\n        provider: _this2\n      });\n\n      throw error;\n    });\n  };\n}\n\nexport var Web3Provider = /*#__PURE__*/function (_JsonRpcProvider) {\n  _inherits(Web3Provider, _JsonRpcProvider);\n\n  var _super = _createSuper(Web3Provider);\n\n  function Web3Provider(provider, network) {\n    var _this3;\n\n    _classCallCheck(this, Web3Provider);\n\n    logger.checkNew(this instanceof Web3Provider ? this.constructor : void 0, Web3Provider);\n\n    if (provider == null) {\n      logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n\n    var path = null;\n    var jsonRpcFetchFunc = null;\n    var subprovider = null;\n\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n\n      subprovider = provider;\n\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n\n    _this3 = _super.call(this, path, network);\n    defineReadOnly(_assertThisInitialized(_this3), \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(_assertThisInitialized(_this3), \"provider\", subprovider);\n    return _this3;\n  }\n\n  _createClass(Web3Provider, [{\n    key: \"send\",\n    value: function send(method, params) {\n      return this.jsonRpcFetchFunc(method, params);\n    }\n  }]);\n\n  return Web3Provider;\n}(JsonRpcProvider);","map":{"version":3,"sources":["../src.ts/web3-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map"]},"metadata":{},"sourceType":"module"}