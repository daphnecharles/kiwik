{"ast":null,"code":"import _createClass from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * Electronic Codebook block mode.\n */\nimport { BlockCipherMode } from './cipher-core.js';\nexport var ECB = /*#__PURE__*/function (_BlockCipherMode) {\n  _inherits(ECB, _BlockCipherMode);\n\n  var _super = _createSuper(ECB);\n\n  function ECB() {\n    _classCallCheck(this, ECB);\n\n    return _super.apply(this, arguments);\n  }\n\n  return ECB;\n}(BlockCipherMode);\n\nECB.Encryptor = /*#__PURE__*/function (_ECB) {\n  _inherits(_class, _ECB);\n\n  var _super2 = _createSuper(_class);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(_class, [{\n    key: \"processBlock\",\n    value: function processBlock(words, offset) {\n      this._cipher.encryptBlock(words, offset);\n    }\n  }]);\n\n  return _class;\n}(ECB);\n\nECB.Decryptor = /*#__PURE__*/function (_ECB2) {\n  _inherits(_class2, _ECB2);\n\n  var _super3 = _createSuper(_class2);\n\n  function _class2() {\n    _classCallCheck(this, _class2);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(_class2, [{\n    key: \"processBlock\",\n    value: function processBlock(words, offset) {\n      this._cipher.decryptBlock(words, offset);\n    }\n  }]);\n\n  return _class2;\n}(ECB);","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/crypto-es/lib/mode-ecb.js"],"names":["BlockCipherMode","ECB","Encryptor","words","offset","_cipher","encryptBlock","Decryptor","decryptBlock"],"mappings":";;;;;AAAA;AACA;AACA;AACA,SACEA,eADF,QAEO,kBAFP;AAIA,WAAaC,GAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAyBD,eAAzB;;AAEAC,GAAG,CAACC,SAAJ;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,sBAAaC,KAAb,EAAoBC,MAApB,EAA4B;AAC1B,WAAKC,OAAL,CAAaC,YAAb,CAA0BH,KAA1B,EAAiCC,MAAjC;AACD;AAHH;;AAAA;AAAA,EAA8BH,GAA9B;;AAKAA,GAAG,CAACM,SAAJ;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,sBAAaJ,KAAb,EAAoBC,MAApB,EAA4B;AAC1B,WAAKC,OAAL,CAAaG,YAAb,CAA0BL,KAA1B,EAAiCC,MAAjC;AACD;AAHH;;AAAA;AAAA,EAA8BH,GAA9B","sourcesContent":["/**\n * Electronic Codebook block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class ECB extends BlockCipherMode {\n}\nECB.Encryptor = class extends ECB {\n  processBlock(words, offset) {\n    this._cipher.encryptBlock(words, offset);\n  }\n};\nECB.Decryptor = class extends ECB {\n  processBlock(words, offset) {\n    this._cipher.decryptBlock(words, offset);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}