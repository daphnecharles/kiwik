{"ast":null,"code":"import _objectSpread from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _excluded = [\"onChange\", \"chainId\", \"nativeToken\", \"localProvider\"];\n\nvar _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/TokenSelect.jsx\",\n    _s = $RefreshSig$();\n\nimport { Select } from \"antd\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport searchico from \"searchico\"; // helpers to load token name and symbol for unlisted tokens\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ERC20ABI = [\"function symbol() view returns (string)\", \"function name() view returns (string)\"];\n\nvar loadERC20 = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address, p) {\n    var _r$name, _r$symbol, r, name, symbol;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            // load token information here\n            r = new ethers.Contract(address, ERC20ABI, p);\n            _context.next = 4;\n            return (_r$name = r.name) === null || _r$name === void 0 ? void 0 : _r$name.call(r);\n\n          case 4:\n            name = _context.sent;\n            _context.next = 7;\n            return (_r$symbol = r.symbol) === null || _r$symbol === void 0 ? void 0 : _r$symbol.call(r);\n\n          case 7:\n            symbol = _context.sent;\n            return _context.abrupt(\"return\", {\n              name: name,\n              symbol: symbol\n            });\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {});\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function loadERC20(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/*\n  <TokenSelect\n    chainId={1}\n    onChange={setToAddress}\n    localProvider={localProvider}\n    nativeToken={{ name: 'Native token', symbol: 'ETH' }}\n  />\n*/\n\n\nexport default function TokenSelect(_ref2) {\n  _s();\n\n  var _this = this;\n\n  var onChange = _ref2.onChange,\n      _ref2$chainId = _ref2.chainId,\n      chainId = _ref2$chainId === void 0 ? 1 : _ref2$chainId,\n      _ref2$nativeToken = _ref2.nativeToken,\n      nativeToken = _ref2$nativeToken === void 0 ? {} : _ref2$nativeToken,\n      localProvider = _ref2.localProvider,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      list = _useState4[0],\n      setList = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchResults = _useState6[0],\n      setSearchResults = _useState6[1];\n\n  var listCollection = useMemo(function () {\n    return searchico(list, {\n      keys: [\"address\", \"name\", \"symbol\"]\n    });\n  }, [list.length]);\n  var children = useMemo(function () {\n    if (searchResults.length < 1) {\n      return [];\n    } // use search result to format children\n\n\n    return searchResults.map(function (i) {\n      var _i$address, _i$address2;\n\n      return /*#__PURE__*/_jsxDEV(Select.Option, {\n        style: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\"\n        },\n        value: i.address,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [i.logoURI && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: \"5px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: i.logoURI,\n              alt: \"\".concat(i.name, \" (\").concat(i.symbol, \")\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this), i.name, \" - \", i.symbol, \" \", ((_i$address = i.address) === null || _i$address === void 0 ? void 0 : _i$address.substr(0, 5)) + \"...\" + ((_i$address2 = i.address) === null || _i$address2 === void 0 ? void 0 : _i$address2.substr(-4)), \" \", i.unlisted && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontStyle: \"italic\",\n              fontSize: \"12px\",\n              marginLeft: \"3px\"\n            },\n            children: \" (unlisted) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 26\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, _this)\n      }, i.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, _this);\n    });\n  }, [JSON.stringify(searchResults)]);\n\n  var handleSearch = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(val) {\n      var collectionResult, nativeTokenObj, checksumAddress, tokenInfo;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              collectionResult = [];\n\n              if (!(val.length > 0)) {\n                _context2.next = 22;\n                break;\n              }\n\n              // TODO : Do all search & filtering here\n              collectionResult = ((listCollection === null || listCollection === void 0 ? void 0 : listCollection.find(val)) || []).filter(function (i) {\n                return i.chainId === chainId;\n              });\n\n              if (!(collectionResult.length < 1)) {\n                _context2.next = 22;\n                break;\n              }\n\n              nativeTokenObj = _objectSpread({\n                chainId: chainId,\n                decimals: 18,\n                name: \"Native Token\",\n                symbol: \"ETH\",\n                address: \"0x0000000000000000000000000000000000000000\",\n                logoURI: \"https://assets.coingecko.com/coins/images/279/thumb/ethereum.png?1595348880\"\n              }, nativeToken);\n              collectionResult.push(nativeTokenObj);\n              _context2.prev = 6;\n              checksumAddress = ethers.utils.getAddress(val); // load contract and try to get name and symbol if there's a provider given\n\n              if (!localProvider) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 11;\n              return loadERC20(checksumAddress, localProvider);\n\n            case 11:\n              _context2.t0 = _context2.sent;\n              _context2.next = 15;\n              break;\n\n            case 14:\n              _context2.t0 = {};\n\n            case 15:\n              tokenInfo = _context2.t0;\n              collectionResult = [_objectSpread({\n                chainId: chainId,\n                name: null,\n                unlisted: true,\n                symbol: null,\n                address: checksumAddress,\n                logoURI: \"\"\n              }, tokenInfo)];\n              _context2.next = 22;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t1 = _context2[\"catch\"](6);\n              console.log(\"Could not identify this token\");\n\n            case 22:\n              setSearchResults(collectionResult);\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[6, 19]]);\n    }));\n\n    return function handleSearch(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleOnChange = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setSearchResults([]); // TODO : check if it's an address that's not on list & Add as unlisted\n\n              setValue(e);\n\n              if (typeof onChange === \"function\") {\n                onChange(e.value);\n              }\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleOnChange(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var loadList = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res, tokens;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.get(\"https://tokens.coingecko.com/uniswap/all.json\");\n\n            case 2:\n              res = _context4.sent;\n              tokens = res.data.tokens;\n              setList(tokens);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function loadList() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      showSearch: true,\n      size: \"large\",\n      showArrow: false,\n      defaultActiveFirstOption: false,\n      onSearch: handleSearch,\n      filterOption: false,\n      labelInValue: true,\n      id: \"0xERC20TokenSelect\" // name it something other than address for auto fill doxxing\n      ,\n      name: \"0xERC20TokenSelect\" // name it something other than address for auto fill doxxing\n      ,\n      placeholder: props.placeholder ? props.placeholder : \"Token search... Eg: GTC\",\n      value: value,\n      onChange: handleOnChange,\n      notFoundContent: null,\n      style: {\n        width: \"100%\"\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TokenSelect, \"Q5STnDu7EjFYZ+jiJCH02pwazsw=\");\n\n_c = TokenSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenSelect\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/TokenSelect.jsx"],"names":["Select","useState","useMemo","useEffect","ethers","axios","searchico","ERC20ABI","loadERC20","address","p","r","Contract","name","symbol","TokenSelect","onChange","chainId","nativeToken","localProvider","props","value","setValue","list","setList","searchResults","setSearchResults","listCollection","keys","length","children","map","i","paddingTop","paddingBottom","display","alignItems","logoURI","marginRight","substr","unlisted","fontStyle","fontSize","marginLeft","JSON","stringify","handleSearch","val","collectionResult","find","filter","nativeTokenObj","decimals","push","checksumAddress","utils","getAddress","tokenInfo","console","log","handleOnChange","e","loadList","get","res","tokens","data","placeholder","width"],"mappings":"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","sourcesContent":["import { Select } from \"antd\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport searchico from \"searchico\";\n\n// helpers to load token name and symbol for unlisted tokens\nconst ERC20ABI = [\"function symbol() view returns (string)\", \"function name() view returns (string)\"];\n\nconst loadERC20 = async (address, p) => {\n  try {\n    // load token information here\n    const r = new ethers.Contract(address, ERC20ABI, p);\n    const name = await r.name?.();\n    const symbol = await r.symbol?.();\n\n    return { name, symbol };\n  } catch (error) {\n    return {};\n  }\n};\n\n/*\n  <TokenSelect\n    chainId={1}\n    onChange={setToAddress}\n    localProvider={localProvider}\n    nativeToken={{ name: 'Native token', symbol: 'ETH' }}\n  />\n*/\nexport default function TokenSelect({ onChange, chainId = 1, nativeToken = {}, localProvider, ...props }) {\n  const [value, setValue] = useState(null);\n  const [list, setList] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const listCollection = useMemo(() => {\n    return searchico(list, { keys: [\"address\", \"name\", \"symbol\"] });\n  }, [list.length]);\n\n  const children = useMemo(() => {\n    if (searchResults.length < 1) {\n      return [];\n    }\n\n    // use search result to format children\n    return searchResults.map(i => (\n      <Select.Option key={i.address} style={{ paddingTop: \"5px\", paddingBottom: \"5px\" }} value={i.address}>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {i.logoURI && (\n            <div style={{ marginRight: \"5px\" }}>\n              <img src={i.logoURI} alt={`${i.name} (${i.symbol})`} />\n            </div>\n          )}\n          {i.name} - {i.symbol} {i.address?.substr(0, 5) + \"...\" + i.address?.substr(-4)}{\" \"}\n          {i.unlisted && <span style={{ fontStyle: \"italic\", fontSize: \"12px\", marginLeft: \"3px\" }}> (unlisted) </span>}\n        </div>\n      </Select.Option>\n    ));\n  }, [JSON.stringify(searchResults)]);\n\n  const handleSearch = async val => {\n    let collectionResult = [];\n\n    if (val.length > 0) {\n      // TODO : Do all search & filtering here\n      collectionResult = (listCollection?.find(val) || []).filter(i => i.chainId === chainId);\n\n      if (collectionResult.length < 1) {\n        const nativeTokenObj = {\n          chainId: chainId,\n          decimals: 18,\n          name: \"Native Token\",\n          symbol: \"ETH\",\n          address: \"0x0000000000000000000000000000000000000000\",\n          logoURI: \"https://assets.coingecko.com/coins/images/279/thumb/ethereum.png?1595348880\",\n          ...nativeToken,\n        };\n\n        collectionResult.push(nativeTokenObj);\n\n        try {\n          const checksumAddress = ethers.utils.getAddress(val);\n          // load contract and try to get name and symbol if there's a provider given\n          const tokenInfo = localProvider ? await loadERC20(checksumAddress, localProvider) : {};\n          collectionResult = [\n            {\n              chainId: chainId,\n              name: null,\n              unlisted: true,\n              symbol: null,\n              address: checksumAddress,\n              logoURI: \"\",\n              ...tokenInfo,\n            },\n          ];\n        } catch (error) {\n          console.log(`Could not identify this token`);\n        }\n      }\n    }\n\n    setSearchResults(collectionResult);\n  };\n\n  const handleOnChange = async e => {\n    setSearchResults([]);\n\n    // TODO : check if it's an address that's not on list & Add as unlisted\n\n    setValue(e);\n\n    if (typeof onChange === \"function\") {\n      onChange(e.value);\n    }\n  };\n\n  const loadList = async () => {\n    // https://tokens.coingecko.com/uniswap/all.json\n    const res = await axios.get(\"https://tokens.coingecko.com/uniswap/all.json\");\n    const { tokens } = res.data;\n\n    setList(tokens);\n  };\n\n  useEffect(() => {\n    loadList();\n  }, []);\n\n  return (\n    <div>\n      <Select\n        showSearch\n        size=\"large\"\n        showArrow={false}\n        defaultActiveFirstOption={false}\n        onSearch={handleSearch}\n        filterOption={false}\n        labelInValue={true}\n        id=\"0xERC20TokenSelect\" // name it something other than address for auto fill doxxing\n        name=\"0xERC20TokenSelect\" // name it something other than address for auto fill doxxing\n        placeholder={props.placeholder ? props.placeholder : \"Token search... Eg: GTC\"}\n        value={value}\n        onChange={handleOnChange}\n        notFoundContent={null}\n        style={{ width: \"100%\" }}\n      >\n        {children}\n      </Select>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}