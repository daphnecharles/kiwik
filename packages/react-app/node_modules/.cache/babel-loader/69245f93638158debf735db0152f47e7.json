{"ast":null,"code":"var _toConsumableArray = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar normalizeHex = require('normalize-hex');\n\nfunction toHex(value) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  opts = _objectSpread({\n    size: 0,\n    addPrefix: false,\n    evenLength: false,\n    default: ''\n  }, opts);\n  var result = '';\n\n  if (opts.default !== '') {\n    result = opts.default;\n  }\n\n  if (value === '' || value === undefined || value === null) {\n    value = result;\n  }\n\n  if (value === '0') {\n    value = 0;\n  }\n\n  if (value === undefined || value === null) {// noop\n  } else if (typeof value === 'number') {\n    result = value.toString(16);\n  } else if (typeof value === 'string') {\n    value = value.trim();\n\n    if (value.startsWith('0x')) {\n      result = normalizeHex(value);\n    } else if (value !== '' && Number.isFinite(+value)) {\n      result = Number(value).toString(16);\n    }\n\n    if (result === opts.default) {\n      result = Buffer.from(value, 'utf8').toString('hex');\n    }\n  } else if (typeof value === 'boolean') {\n    result = value ? '1' : '0';\n  } else if (typeof value === 'object' && value !== null) {\n    if (Buffer.isBuffer(value)) {\n      result = value.toString('hex');\n    } else if (/(BN|BigNumber|Big|Decimal)/.test(value.constructor.name)) {\n      result = value.toString(16);\n    } else if (value instanceof Uint8Array) {\n      result = Buffer.from(_toConsumableArray(value)).toString('hex');\n    } else if (value.toString && typeof value.toString === 'function') {\n      try {\n        var h = value.toString(16);\n\n        if (/^[a-fA-F0-9]+$/.test(h)) {\n          result = h;\n        }\n      } catch (err) {// noop\n      }\n    }\n  }\n\n  if (typeof result === 'string') {\n    result = result.toLowerCase();\n\n    if (opts.size > result.length) {\n      result = \"\".concat('0'.repeat(opts.size - result.length)).concat(result);\n    }\n\n    if (opts.evenLength && result.length % 2) {\n      result = \"0\".concat(result);\n    }\n\n    if (opts.addPrefix) {\n      result = \"0x\".concat(result);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = toHex;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/to-hex/index.js"],"names":["normalizeHex","require","toHex","value","opts","size","addPrefix","evenLength","default","result","undefined","toString","trim","startsWith","Number","isFinite","Buffer","from","isBuffer","test","constructor","name","Uint8Array","h","err","toLowerCase","length","repeat","module","exports"],"mappings":"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","sourcesContent":["const normalizeHex = require('normalize-hex')\n\nfunction toHex (value, opts = {}) {\n  opts = {\n    size: 0,\n    addPrefix: false,\n    evenLength: false,\n    default: '',\n    ...opts\n  }\n\n  var result = ''\n\n  if (opts.default !== '') {\n    result = opts.default\n  }\n\n  if (value === '' || value === undefined || value === null) {\n    value = result\n  }\n\n  if (value === '0') {\n    value = 0\n  }\n\n  if (value === undefined || value === null) {\n      // noop\n  } else if (typeof value === 'number') {\n    result = value.toString(16)\n  } else if (typeof value === 'string') {\n    value = value.trim()\n    if (value.startsWith('0x')) {\n      result = normalizeHex(value)\n    } else if (value !== '' && Number.isFinite(+value)) {\n      result = Number(value).toString(16)\n    }\n\n    if (result === opts.default) {\n      result = Buffer.from(value, 'utf8').toString('hex')\n    }\n  } else if (typeof value === 'boolean') {\n    result = value ? '1' : '0'\n  } else if (typeof value === 'object' && value !== null) {\n    if (Buffer.isBuffer(value)) {\n      result = value.toString('hex')\n    } else if (/(BN|BigNumber|Big|Decimal)/.test(value.constructor.name)) {\n      result = value.toString(16)\n    } else if (value instanceof Uint8Array) {\n      result = Buffer.from([\n        ...value\n      ]).toString('hex')\n    } else if (value.toString && typeof value.toString === 'function') {\n      try {\n        const h = value.toString(16)\n        if (/^[a-fA-F0-9]+$/.test(h)) {\n          result = h\n        }\n      } catch (err) {\n        // noop\n      }\n    }\n  }\n\n  if (typeof result === 'string') {\n    result = result.toLowerCase()\n\n    if (opts.size > result.length) {\n      result = `${'0'.repeat(opts.size - result.length)}${result}`\n    }\n\n    if (opts.evenLength && result.length % 2) {\n      result = `0${result}`\n    }\n\n    if (opts.addPrefix) {\n      result = `0x${result}`\n    }\n  }\n\n  return result\n}\n\nmodule.exports = toHex\n"]},"metadata":{},"sourceType":"script"}