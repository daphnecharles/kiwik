{"ast":null,"code":"import * as encoding from \"@walletconnect/encoding\";\nimport * as jsonRpcUtils from \"@walletconnect/jsonrpc-utils\";\nimport { infuraNetworks } from \"./constants\";\nexport function sanitizeHex(hex) {\n  return encoding.sanitizeHex(hex);\n}\nexport function addHexPrefix(hex) {\n  return encoding.addHexPrefix(hex);\n}\nexport function removeHexPrefix(hex) {\n  return encoding.removeHexPrefix(hex);\n}\nexport function removeHexLeadingZeros(hex) {\n  return encoding.removeHexLeadingZeros(encoding.addHexPrefix(hex));\n}\nexport var payloadId = jsonRpcUtils.payloadId;\nexport function uuid() {\n  var result = function (a, b) {\n    for (b = a = \"\"; a++ < 36; b += a * 51 & 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : \"-\") {}\n\n    return b;\n  }();\n\n  return result;\n}\nexport function logDeprecationWarning() {\n  console.warn(\"DEPRECATION WARNING: This WalletConnect client library will be deprecated in favor of @walletconnect/client. Please check docs.walletconnect.org to learn more about this migration!\");\n}\nexport function getInfuraRpcUrl(chainId, infuraId) {\n  var rpcUrl;\n  var network = infuraNetworks[chainId];\n\n  if (network) {\n    rpcUrl = \"https://\".concat(network, \".infura.io/v3/\").concat(infuraId);\n  }\n\n  return rpcUrl;\n}\nexport function getRpcUrl(chainId, rpc) {\n  var rpcUrl;\n  var infuraUrl = getInfuraRpcUrl(chainId, rpc.infuraId);\n\n  if (rpc.custom && rpc.custom[chainId]) {\n    rpcUrl = rpc.custom[chainId];\n  } else if (infuraUrl) {\n    rpcUrl = infuraUrl;\n  }\n\n  return rpcUrl;\n}","map":{"version":3,"sources":["../../src/misc.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,QAAZ,MAA0B,yBAA1B;AACA,OAAO,KAAK,YAAZ,MAA8B,8BAA9B;AAEA,SAAS,cAAT,QAA+B,aAA/B;AAIA,OAAM,SAAU,WAAV,CAAsB,GAAtB,EAAiC;AACrC,SAAO,QAAQ,CAAC,WAAT,CAAqB,GAArB,CAAP;AACD;AAED,OAAM,SAAU,YAAV,CAAuB,GAAvB,EAAkC;AACtC,SAAO,QAAQ,CAAC,YAAT,CAAsB,GAAtB,CAAP;AACD;AAED,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAAqC;AACzC,SAAO,QAAQ,CAAC,eAAT,CAAyB,GAAzB,CAAP;AACD;AAED,OAAM,SAAU,qBAAV,CAAgC,GAAhC,EAA2C;AAC/C,SAAO,QAAQ,CAAC,qBAAT,CAA+B,QAAQ,CAAC,YAAT,CAAsB,GAAtB,CAA/B,CAAP;AACD;AAID,OAAO,IAAM,SAAS,GAAG,YAAY,CAAC,SAA/B;AAEP,OAAM,SAAU,IAAV,GAAc;AAClB,MAAM,MAAM,GAAY,UAAC,CAAD,EAAU,CAAV,EAAqB;AAC3C,SACE,CAAC,GAAG,CAAC,GAAG,EADV,EAEE,CAAC,KAAK,EAFR,EAGE,CAAC,IAAK,CAAC,GAAG,EAAL,GAAW,EAAX,GAAgB,CAAC,CAAC,GAAG,EAAJ,GAAS,IAAK,IAAI,CAAC,MAAL,MAAiB,CAAC,GAAG,EAAJ,GAAS,EAAT,GAAc,CAA/B,CAAd,GAAmD,CAApD,EAAuD,QAAvD,CAAgE,EAAhE,CAAhB,GAAsF,GAH7F,EAIE,CAED;;AACD,WAAO,CAAP;AACD,GATsB,EAAvB;;AAUA,SAAO,MAAP;AACD;AAID,OAAM,SAAU,qBAAV,GAA+B;AAEnC,EAAA,OAAO,CAAC,IAAR,CACE,sLADF;AAGD;AAID,OAAM,SAAU,eAAV,CAA0B,OAA1B,EAA2C,QAA3C,EAA4D;AAChE,MAAI,MAAJ;AACA,MAAM,OAAO,GAAG,cAAc,CAAC,OAAD,CAA9B;;AACA,MAAI,OAAJ,EAAa;AACX,IAAA,MAAM,qBAAc,OAAd,2BAAsC,QAAtC,CAAN;AACD;;AACD,SAAO,MAAP;AACD;AAED,OAAM,SAAU,SAAV,CAAoB,OAApB,EAAqC,GAArC,EAAoD;AACxD,MAAI,MAAJ;AACA,MAAM,SAAS,GAAG,eAAe,CAAC,OAAD,EAAU,GAAG,CAAC,QAAd,CAAjC;;AACA,MAAI,GAAG,CAAC,MAAJ,IAAc,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAlB,EAAuC;AACrC,IAAA,MAAM,GAAG,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAT;AACD,GAFD,MAEO,IAAI,SAAJ,EAAe;AACpB,IAAA,MAAM,GAAG,SAAT;AACD;;AACD,SAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["import * as encoding from \"@walletconnect/encoding\";\nimport * as jsonRpcUtils from \"@walletconnect/jsonrpc-utils\";\nimport { infuraNetworks } from \"./constants\";\nexport function sanitizeHex(hex) {\n    return encoding.sanitizeHex(hex);\n}\nexport function addHexPrefix(hex) {\n    return encoding.addHexPrefix(hex);\n}\nexport function removeHexPrefix(hex) {\n    return encoding.removeHexPrefix(hex);\n}\nexport function removeHexLeadingZeros(hex) {\n    return encoding.removeHexLeadingZeros(encoding.addHexPrefix(hex));\n}\nexport const payloadId = jsonRpcUtils.payloadId;\nexport function uuid() {\n    const result = ((a, b) => {\n        for (b = a = \"\"; a++ < 36; b += (a * 51) & 52 ? (a ^ 15 ? 8 ^ (Math.random() * (a ^ 20 ? 16 : 4)) : 4).toString(16) : \"-\") {\n        }\n        return b;\n    })();\n    return result;\n}\nexport function logDeprecationWarning() {\n    console.warn(\"DEPRECATION WARNING: This WalletConnect client library will be deprecated in favor of @walletconnect/client. Please check docs.walletconnect.org to learn more about this migration!\");\n}\nexport function getInfuraRpcUrl(chainId, infuraId) {\n    let rpcUrl;\n    const network = infuraNetworks[chainId];\n    if (network) {\n        rpcUrl = `https://${network}.infura.io/v3/${infuraId}`;\n    }\n    return rpcUrl;\n}\nexport function getRpcUrl(chainId, rpc) {\n    let rpcUrl;\n    const infuraUrl = getInfuraRpcUrl(chainId, rpc.infuraId);\n    if (rpc.custom && rpc.custom[chainId]) {\n        rpcUrl = rpc.custom[chainId];\n    }\n    else if (infuraUrl) {\n        rpcUrl = infuraUrl;\n    }\n    return rpcUrl;\n}\n//# sourceMappingURL=misc.js.map"]},"metadata":{},"sourceType":"module"}