{"ast":null,"code":"import { BigNumber } from \"@ethersproject/bignumber\";\nvar NegativeOne = /*#__PURE__*/BigNumber.from(-1);\nvar Zero = /*#__PURE__*/BigNumber.from(0);\nvar One = /*#__PURE__*/BigNumber.from(1);\nvar Two = /*#__PURE__*/BigNumber.from(2);\nvar WeiPerEther = /*#__PURE__*/BigNumber.from(\"1000000000000000000\");\nvar MaxUint256 = /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nvar MinInt256 = /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\");\nvar MaxInt256 = /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256 };","map":{"version":3,"sources":["../src.ts/bignumbers.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,0BAA1B;AAEA,IAAM,WAAW,GAAe,aAAa,SAAS,CAAC,IAAV,CAAe,CAAC,CAAhB,CAA7C;AACA,IAAM,IAAI,GAAe,aAAa,SAAS,CAAC,IAAV,CAAe,CAAf,CAAtC;AACA,IAAM,GAAG,GAAe,aAAa,SAAS,CAAC,IAAV,CAAe,CAAf,CAArC;AACA,IAAM,GAAG,GAAe,aAAa,SAAS,CAAC,IAAV,CAAe,CAAf,CAArC;AACA,IAAM,WAAW,GAAe,aAAa,SAAS,CAAC,IAAV,CAAe,qBAAf,CAA7C;AACA,IAAM,UAAU,GAAe,aAAa,SAAS,CAAC,IAAV,CAAe,oEAAf,CAA5C;AAEA,IAAM,SAAS,GAAe,aAAa,SAAS,CAAC,IAAV,CAAe,qEAAf,CAA3C;AACA,IAAM,SAAS,GAAe,aAAa,SAAS,CAAC,IAAV,CAAe,oEAAf,CAA3C;AAEA,SACI,WADJ,EAEI,IAFJ,EAGI,GAHJ,EAII,GAJJ,EAKI,WALJ,EAMI,UANJ,EAOI,SAPJ,EAQI,SARJ","sourceRoot":"","sourcesContent":["import { BigNumber } from \"@ethersproject/bignumber\";\nconst NegativeOne = ( /*#__PURE__*/BigNumber.from(-1));\nconst Zero = ( /*#__PURE__*/BigNumber.from(0));\nconst One = ( /*#__PURE__*/BigNumber.from(1));\nconst Two = ( /*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther = ( /*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256 = ( /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nconst MinInt256 = ( /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256 = ( /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256, };\n//# sourceMappingURL=bignumbers.js.map"]},"metadata":{},"sourceType":"module"}