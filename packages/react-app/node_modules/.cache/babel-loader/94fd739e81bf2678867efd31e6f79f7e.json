{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _get from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\"; // This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nvar defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport var AlchemyWebSocketProvider = /*#__PURE__*/function (_WebSocketProvider) {\n  _inherits(AlchemyWebSocketProvider, _WebSocketProvider);\n\n  var _super2 = _createSuper(AlchemyWebSocketProvider);\n\n  function AlchemyWebSocketProvider(network, apiKey) {\n    var _this;\n\n    _classCallCheck(this, AlchemyWebSocketProvider);\n\n    var provider = new AlchemyProvider(network, apiKey);\n    var url = provider.connection.url.replace(/^http/i, \"ws\").replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n    _this = _super2.call(this, url, provider.network);\n    defineReadOnly(_assertThisInitialized(_this), \"apiKey\", provider.apiKey);\n    return _this;\n  }\n\n  _createClass(AlchemyWebSocketProvider, [{\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return this.apiKey === defaultApiKey;\n    }\n  }]);\n\n  return AlchemyWebSocketProvider;\n}(WebSocketProvider);\nexport var AlchemyProvider = /*#__PURE__*/function (_UrlJsonRpcProvider) {\n  _inherits(AlchemyProvider, _UrlJsonRpcProvider);\n\n  var _super3 = _createSuper(AlchemyProvider);\n\n  function AlchemyProvider() {\n    _classCallCheck(this, AlchemyProvider);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(AlchemyProvider, [{\n    key: \"perform\",\n    value: function perform(method, params) {\n      var _this2 = this;\n\n      var _super = Object.create(null, {\n        perform: {\n          get: function get() {\n            return _get(_getPrototypeOf(AlchemyProvider.prototype), \"perform\", _this2);\n          }\n        }\n      });\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (method === \"estimateGas\" && params.transaction.type === 2 || method === \"sendTransaction\" && params.signedTransaction.substring(0, 4) === \"0x02\") {\n                  logger.throwError(\"AlchemyProvider does not currently support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: method,\n                    transaction: params.transaction\n                  });\n                }\n\n                return _context.abrupt(\"return\", _super.perform.call(this, method, params));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return this.apiKey === defaultApiKey;\n    }\n  }], [{\n    key: \"getWebSocketProvider\",\n    value: function getWebSocketProvider(network, apiKey) {\n      return new AlchemyWebSocketProvider(network, apiKey);\n    }\n  }, {\n    key: \"getApiKey\",\n    value: function getApiKey(apiKey) {\n      if (apiKey == null) {\n        return defaultApiKey;\n      }\n\n      if (apiKey && typeof apiKey !== \"string\") {\n        logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n      }\n\n      return apiKey;\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(network, apiKey) {\n      var host = null;\n\n      switch (network.name) {\n        case \"homestead\":\n          host = \"eth-mainnet.alchemyapi.io/v2/\";\n          break;\n\n        case \"ropsten\":\n          host = \"eth-ropsten.alchemyapi.io/v2/\";\n          break;\n\n        case \"rinkeby\":\n          host = \"eth-rinkeby.alchemyapi.io/v2/\";\n          break;\n\n        case \"goerli\":\n          host = \"eth-goerli.alchemyapi.io/v2/\";\n          break;\n\n        case \"kovan\":\n          host = \"eth-kovan.alchemyapi.io/v2/\";\n          break;\n\n        default:\n          logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n      }\n\n      return {\n        allowGzip: true,\n        url: \"https:/\" + \"/\" + host + apiKey,\n        throttleCallback: function throttleCallback(attempt, url) {\n          if (apiKey === defaultApiKey) {\n            showThrottleMessage();\n          }\n\n          return Promise.resolve(true);\n        }\n      };\n    }\n  }]);\n\n  return AlchemyProvider;\n}(UrlJsonRpcProvider);","map":{"version":3,"sources":["../src.ts/alchemy-provider.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,SAAS,cAAT,QAA+B,2BAA/B;AAGA,SAA+B,mBAA/B,QAA0D,aAA1D;AACA,SAAS,iBAAT,QAAkC,sBAAlC;AAEA,SAAS,MAAT,QAAuB,uBAAvB;AACA,SAAS,OAAT,QAAwB,YAAxB;AACA,IAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,OAAX,CAAf;AAEA,SAAS,kBAAT,QAAmC,yBAAnC,C,CAEA;AACA;AACA;AACA;;AAEA,IAAM,aAAa,GAAG,kCAAtB;AAEA,WAAa,wBAAb;AAAA;;AAAA;;AAGI,oCAAY,OAAZ,EAAkC,MAAlC,EAA8C;AAAA;;AAAA;;AAC1C,QAAM,QAAQ,GAAG,IAAI,eAAJ,CAAoB,OAApB,EAA6B,MAA7B,CAAjB;AAEA,QAAM,GAAG,GAAG,QAAQ,CAAC,UAAT,CAAoB,GAApB,CAAwB,OAAxB,CAAgC,QAAhC,EAA0C,IAA1C,EACwB,OADxB,CACgC,cADhC,EACgD,iBADhD,CAAZ;AAGA,+BAAM,GAAN,EAAW,QAAQ,CAAC,OAApB;AACA,IAAA,cAAc,gCAAO,QAAP,EAAiB,QAAQ,CAAC,MAA1B,CAAd;AAP0C;AAQ7C;;AAXL;AAAA;AAAA,WAaI,+BAAmB;AACf,aAAQ,KAAK,MAAL,KAAgB,aAAxB;AACH;AAfL;;AAAA;AAAA,EAA8C,iBAA9C;AAkBA,WAAa,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAgDU,iBAAQ,MAAR,EAAwB,MAAxB,EAAmC;AAAA;;;;;;;;;;;;;;;AACrC,oBAAK,MAAM,KAAK,aAAX,IAA4B,MAAM,CAAC,WAAP,CAAmB,IAAnB,KAA4B,CAAzD,IAAgE,MAAM,KAAK,iBAAX,IAAgC,MAAM,CAAC,iBAAP,CAAyB,SAAzB,CAAmC,CAAnC,EAAsC,CAAtC,MAA6C,MAAjJ,EAA0J;AACtJ,kBAAA,MAAM,CAAC,UAAP,CAAkB,qDAAlB,EAAyE,MAAM,CAAC,MAAP,CAAc,qBAAvF,EAA8G;AAC1G,oBAAA,SAAS,EAAE,MAD+F;AAE1G,oBAAA,WAAW,EAAE,MAAM,CAAC;AAFsF,mBAA9G;AAIH;;iDAEM,MAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,MAAd,EAAsB,MAAtB,C;;;;;;;;;AACV;AAzDL;AAAA;AAAA,WA2DI,+BAAmB;AACf,aAAQ,KAAK,MAAL,KAAgB,aAAxB;AACH;AA7DL;AAAA;AAAA,WAEI,8BAA4B,OAA5B,EAAkD,MAAlD,EAA8D;AAC1D,aAAO,IAAI,wBAAJ,CAA6B,OAA7B,EAAsC,MAAtC,CAAP;AACH;AAJL;AAAA;AAAA,WAMI,mBAAiB,MAAjB,EAA4B;AACxB,UAAI,MAAM,IAAI,IAAd,EAAoB;AAAE,eAAO,aAAP;AAAuB;;AAC7C,UAAI,MAAM,IAAI,OAAO,MAAP,KAAmB,QAAjC,EAA2C;AACvC,QAAA,MAAM,CAAC,kBAAP,CAA0B,gBAA1B,EAA4C,QAA5C,EAAsD,MAAtD;AACH;;AACD,aAAO,MAAP;AACH;AAZL;AAAA;AAAA,WAcI,gBAAc,OAAd,EAAgC,MAAhC,EAA8C;AAC1C,UAAI,IAAI,GAAG,IAAX;;AACA,cAAQ,OAAO,CAAC,IAAhB;AACI,aAAK,WAAL;AACI,UAAA,IAAI,GAAG,+BAAP;AACA;;AACJ,aAAK,SAAL;AACI,UAAA,IAAI,GAAG,+BAAP;AACA;;AACJ,aAAK,SAAL;AACI,UAAA,IAAI,GAAG,+BAAP;AACA;;AACJ,aAAK,QAAL;AACI,UAAA,IAAI,GAAG,8BAAP;AACA;;AACJ,aAAK,OAAL;AACI,UAAA,IAAI,GAAG,6BAAP;AACA;;AACJ;AACG,UAAA,MAAM,CAAC,kBAAP,CAA0B,qBAA1B,EAAiD,SAAjD,EAA4D,SAAS,CAAC,CAAD,CAArE;AAjBP;;AAoBA,aAAO;AACH,QAAA,SAAS,EAAE,IADR;AAEH,QAAA,GAAG,EAAG,YAAY,GAAZ,GAAkB,IAAlB,GAAyB,MAF5B;AAGH,QAAA,gBAAgB,EAAE,0BAAC,OAAD,EAAkB,GAAlB,EAAiC;AAC/C,cAAI,MAAM,KAAK,aAAf,EAA8B;AAC1B,YAAA,mBAAmB;AACtB;;AACD,iBAAO,OAAO,CAAC,OAAR,CAAgB,IAAhB,CAAP;AACH;AARE,OAAP;AAUH;AA9CL;;AAAA;AAAA,EAAqC,kBAArC","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((method === \"estimateGas\" && params.transaction.type === 2) || (method === \"sendTransaction\" && params.signedTransaction.substring(0, 4) === \"0x02\")) {\n                logger.throwError(\"AlchemyProvider does not currently support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: method,\n                    transaction: params.transaction\n                });\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map"]},"metadata":{},"sourceType":"module"}