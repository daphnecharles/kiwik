{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar errCode = require('err-code');\n\nvar fromString = require('uint8arrays/from-string');\n\nvar browserStreamToIt = require('browser-readablestream-to-it');\n\nvar blobToIt = require('blob-to-it');\n\nvar itPeekable = require('it-peekable');\n\nvar all = require('it-all');\n\nvar map = require('it-map');\n\nvar utils = require('./utils.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\n\nvar blobToIt__default = /*#__PURE__*/_interopDefaultLegacy(blobToIt);\n\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\n\nvar all__default = /*#__PURE__*/_interopDefaultLegacy(all);\n\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nfunction toAsyncIterable(_x) {\n  return _toAsyncIterable.apply(this, arguments);\n}\n\nfunction _toAsyncIterable() {\n  _toAsyncIterable = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(thing) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return thing;\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _toAsyncIterable.apply(this, arguments);\n}\n\nfunction normaliseContent(_x2) {\n  return _normaliseContent.apply(this, arguments);\n}\n\nfunction _normaliseContent() {\n  _normaliseContent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(input) {\n    var peekable, _yield$peekable$peek, value, done;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!utils.isBytes(input)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", toAsyncIterable(toBytes(input)));\n\n          case 2:\n            if (!(typeof input === 'string' || input instanceof String)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", toAsyncIterable(toBytes(input.toString())));\n\n          case 4:\n            if (!utils.isBlob(input)) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", blobToIt__default[\"default\"](input));\n\n          case 6:\n            if (utils.isReadableStream(input)) {\n              input = browserStreamToIt__default[\"default\"](input);\n            }\n\n            if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n              _context2.next = 27;\n              break;\n            }\n\n            peekable = itPeekable__default[\"default\"](input);\n            _context2.next = 11;\n            return peekable.peek();\n\n          case 11:\n            _yield$peekable$peek = _context2.sent;\n            value = _yield$peekable$peek.value;\n            done = _yield$peekable$peek.done;\n\n            if (!done) {\n              _context2.next = 16;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", toAsyncIterable(new Uint8Array(0)));\n\n          case 16:\n            peekable.push(value);\n\n            if (!Number.isInteger(value)) {\n              _context2.next = 25;\n              break;\n            }\n\n            _context2.t0 = toAsyncIterable;\n            _context2.t1 = Uint8Array;\n            _context2.next = 22;\n            return all__default[\"default\"](peekable);\n\n          case 22:\n            _context2.t2 = _context2.sent;\n            _context2.t3 = _context2.t1.from.call(_context2.t1, _context2.t2);\n            return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t3));\n\n          case 25:\n            if (!(utils.isBytes(value) || typeof value === 'string' || value instanceof String)) {\n              _context2.next = 27;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", map__default[\"default\"](peekable, toBytes));\n\n          case 27:\n            throw errCode__default[\"default\"](new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _normaliseContent.apply(this, arguments);\n}\n\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n\n  return fromString.fromString(chunk.toString());\n}\n\nexports.normaliseContent = normaliseContent;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-core-utils/cjs/src/files/normalise-content.js"],"names":["Object","defineProperty","exports","value","errCode","require","fromString","browserStreamToIt","blobToIt","itPeekable","all","map","utils","_interopDefaultLegacy","e","errCode__default","browserStreamToIt__default","blobToIt__default","itPeekable__default","all__default","map__default","toAsyncIterable","thing","normaliseContent","input","isBytes","toBytes","String","toString","isBlob","isReadableStream","Symbol","iterator","asyncIterator","peekable","peek","done","Uint8Array","push","Number","isInteger","from","Error","chunk","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errCode = require('err-code');\nvar fromString = require('uint8arrays/from-string');\nvar browserStreamToIt = require('browser-readablestream-to-it');\nvar blobToIt = require('blob-to-it');\nvar itPeekable = require('it-peekable');\nvar all = require('it-all');\nvar map = require('it-map');\nvar utils = require('./utils.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar browserStreamToIt__default = /*#__PURE__*/_interopDefaultLegacy(browserStreamToIt);\nvar blobToIt__default = /*#__PURE__*/_interopDefaultLegacy(blobToIt);\nvar itPeekable__default = /*#__PURE__*/_interopDefaultLegacy(itPeekable);\nvar all__default = /*#__PURE__*/_interopDefaultLegacy(all);\nvar map__default = /*#__PURE__*/_interopDefaultLegacy(map);\n\nasync function* toAsyncIterable(thing) {\n  yield thing;\n}\nasync function normaliseContent(input) {\n  if (utils.isBytes(input)) {\n    return toAsyncIterable(toBytes(input));\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()));\n  }\n  if (utils.isBlob(input)) {\n    return blobToIt__default[\"default\"](input);\n  }\n  if (utils.isReadableStream(input)) {\n    input = browserStreamToIt__default[\"default\"](input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable__default[\"default\"](input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return toAsyncIterable(new Uint8Array(0));\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all__default[\"default\"](peekable)));\n    }\n    if (utils.isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map__default[\"default\"](peekable, toBytes);\n    }\n  }\n  throw errCode__default[\"default\"](new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n  return fromString.fromString(chunk.toString());\n}\n\nexports.normaliseContent = normaliseContent;\n"]},"metadata":{},"sourceType":"script"}