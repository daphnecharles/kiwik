{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport function shimGetUserMedia(window, browserDetails) {\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function (constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia', 'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 && 'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function remap(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n\n    navigator.mediaDevices.getUserMedia = function (c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n\n      MediaStreamTrack.prototype.getSettings = function () {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n\n      MediaStreamTrack.prototype.applyConstraints = function (c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/webrtc-adapter/src/js/firefox/getusermedia.js"],"names":["utils","shimGetUserMedia","window","browserDetails","navigator","MediaStreamTrack","getUserMedia","constraints","onSuccess","onError","deprecated","mediaDevices","then","version","getSupportedConstraints","remap","obj","a","b","nativeGetUserMedia","bind","c","audio","JSON","parse","stringify","prototype","getSettings","nativeGetSettings","apply","arguments","applyConstraints","nativeApplyConstraints","kind"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}