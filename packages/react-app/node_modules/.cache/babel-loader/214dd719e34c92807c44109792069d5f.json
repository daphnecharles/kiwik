{"ast":null,"code":"'use strict';\n\nvar encode_1 = encode;\nvar MSB = 128,\n    REST = 127,\n    MSBALL = ~REST,\n    INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\n\nvar decode = read;\nvar MSB$1 = 128,\n    REST$1 = 127;\n\nfunction read(buf, offset) {\n  var res = 0,\n      offset = offset || 0,\n      shift = 0,\n      counter = offset,\n      b,\n      l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n\n  read.bytes = counter - offset;\n  return res;\n}\n\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function length(value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\n\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nvar varint$1 = _brrp_varint;\nmodule.exports = varint$1;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/multiformats/cjs/vendor/varint.js"],"names":["encode_1","encode","MSB","REST","MSBALL","INT","Math","pow","num","out","offset","oldOffset","bytes","decode","read","MSB$1","REST$1","buf","res","shift","counter","b","l","length","RangeError","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","varint","encodingLength","_brrp_varint","varint$1","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nvar varint$1 = _brrp_varint;\n\nmodule.exports = varint$1;\n"]},"metadata":{},"sourceType":"script"}