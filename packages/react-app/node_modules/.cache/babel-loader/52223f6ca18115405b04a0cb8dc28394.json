{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar objectToCamelWithMetadata = require('../lib/object-to-camel-with-metadata.js');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createLs = configure.configure(function (api) {\n  function ls(_x) {\n    return _ls.apply(this, arguments);\n  }\n\n  function _ls() {\n    _ls = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n      var options,\n          res,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          result,\n          _iterator2,\n          _step2,\n          entry,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              if (path) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error('ipfs.files.ls requires a path');\n\n            case 3:\n              _context.next = 5;\n              return _awaitAsyncGenerator(api.post('files/ls', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread(_objectSpread({\n                  arg: cid.CID.asCID(path) ? \"/ipfs/\".concat(path) : path,\n                  long: true\n                }, options), {}, {\n                  stream: true\n                })),\n                headers: options.headers\n              }));\n\n            case 5:\n              res = _context.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 8;\n              _iterator = _asyncIterator(res.ndjson());\n\n            case 10:\n              _context.next = 12;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 12:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 16;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 16:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 44;\n                break;\n              }\n\n              result = _value;\n\n              if (!('Entries' in result)) {\n                _context.next = 39;\n                break;\n              }\n\n              _iterator2 = _createForOfIteratorHelper(result.Entries || []);\n              _context.prev = 21;\n\n              _iterator2.s();\n\n            case 23:\n              if ((_step2 = _iterator2.n()).done) {\n                _context.next = 29;\n                break;\n              }\n\n              entry = _step2.value;\n              _context.next = 27;\n              return toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(entry));\n\n            case 27:\n              _context.next = 23;\n              break;\n\n            case 29:\n              _context.next = 34;\n              break;\n\n            case 31:\n              _context.prev = 31;\n              _context.t0 = _context[\"catch\"](21);\n\n              _iterator2.e(_context.t0);\n\n            case 34:\n              _context.prev = 34;\n\n              _iterator2.f();\n\n              return _context.finish(34);\n\n            case 37:\n              _context.next = 41;\n              break;\n\n            case 39:\n              _context.next = 41;\n              return toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(result));\n\n            case 41:\n              _iteratorNormalCompletion = true;\n              _context.next = 10;\n              break;\n\n            case 44:\n              _context.next = 50;\n              break;\n\n            case 46:\n              _context.prev = 46;\n              _context.t1 = _context[\"catch\"](8);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 50:\n              _context.prev = 50;\n              _context.prev = 51;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 55;\n                break;\n              }\n\n              _context.next = 55;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 55:\n              _context.prev = 55;\n\n              if (!_didIteratorError) {\n                _context.next = 58;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 58:\n              return _context.finish(55);\n\n            case 59:\n              return _context.finish(50);\n\n            case 60:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[8, 46, 50, 60], [21, 31, 34, 37], [51,, 55, 59]]);\n    }));\n    return _ls.apply(this, arguments);\n  }\n\n  return ls;\n});\n\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = cid.CID.parse(entry.hash);\n  }\n\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}\n\nexports.createLs = createLs;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/files/ls.js"],"names":["Object","defineProperty","exports","value","cid","require","objectToCamelWithMetadata","configure","toUrlSearchParams","createLs","api","ls","path","options","Error","post","signal","searchParams","arg","CID","asCID","long","stream","headers","res","ndjson","result","Entries","entry","toCoreInterface","hash","parse","type"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar objectToCamelWithMetadata = require('../lib/object-to-camel-with-metadata.js');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createLs = configure.configure(api => {\n  async function* ls(path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path');\n    }\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: cid.CID.asCID(path) ? `/ipfs/${ path }` : path,\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(entry));\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata.objectToCamelWithMetadata(result));\n      }\n    }\n  }\n  return ls;\n});\nfunction toCoreInterface(entry) {\n  if (entry.hash) {\n    entry.cid = cid.CID.parse(entry.hash);\n  }\n  delete entry.hash;\n  entry.type = entry.type === 1 ? 'directory' : 'file';\n  return entry;\n}\n\nexports.createLs = createLs;\n"]},"metadata":{},"sourceType":"script"}