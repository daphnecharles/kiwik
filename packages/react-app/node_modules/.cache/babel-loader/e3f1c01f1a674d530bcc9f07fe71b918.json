{"ast":null,"code":"var _classCallCheck = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Subprovider = require('./subprovider.js'); // wraps a json-rpc-engine middleware in a subprovider interface\n\n\nvar JsonRpcEngineMiddlewareSubprovider = /*#__PURE__*/function (_Subprovider) {\n  \"use strict\";\n\n  _inherits(JsonRpcEngineMiddlewareSubprovider, _Subprovider);\n\n  var _super = _createSuper(JsonRpcEngineMiddlewareSubprovider);\n\n  // take a constructorFn to call once we have a reference to the engine\n  function JsonRpcEngineMiddlewareSubprovider(constructorFn) {\n    var _this;\n\n    _classCallCheck(this, JsonRpcEngineMiddlewareSubprovider);\n\n    _this = _super.call(this);\n    if (!constructorFn) throw new Error('JsonRpcEngineMiddlewareSubprovider - no constructorFn specified');\n    _this._constructorFn = constructorFn;\n    return _this;\n  } // this is called once the subprovider has been added to the provider engine\n\n\n  _createClass(JsonRpcEngineMiddlewareSubprovider, [{\n    key: \"setEngine\",\n    value: function setEngine(engine) {\n      if (this.middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - subprovider added to engine twice');\n      var blockTracker = engine._blockTracker;\n\n      var middleware = this._constructorFn({\n        engine: engine,\n        provider: engine,\n        blockTracker: blockTracker\n      });\n\n      if (!middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - _constructorFn did not return middleware');\n      if (typeof middleware !== 'function') throw new Error('JsonRpcEngineMiddlewareSubprovider - specified middleware is not a function');\n      this.middleware = middleware;\n    }\n  }, {\n    key: \"handleRequest\",\n    value: function handleRequest(req, provEngNext, provEngEnd) {\n      var res = {\n        id: req.id\n      };\n      this.middleware(req, res, middlewareNext, middlewareEnd);\n\n      function middlewareNext(handler) {\n        provEngNext(function (err, result, cb) {\n          // update response object with result or error\n          if (err) {\n            delete res.result;\n            res.error = {\n              message: err.message || err\n            };\n          } else {\n            res.result = result;\n          } // call middleware's next handler (even if error)\n\n\n          if (handler) {\n            handler(cb);\n          } else {\n            cb();\n          }\n        });\n      }\n\n      function middlewareEnd(err) {\n        if (err) return provEngEnd(err);\n        provEngEnd(null, res.result);\n      }\n    }\n  }]);\n\n  return JsonRpcEngineMiddlewareSubprovider;\n}(Subprovider);\n\nmodule.exports = JsonRpcEngineMiddlewareSubprovider;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/authereum/node_modules/web3-provider-engine/subproviders/json-rpc-engine-middleware.js"],"names":["Subprovider","require","JsonRpcEngineMiddlewareSubprovider","constructorFn","Error","_constructorFn","engine","middleware","blockTracker","_blockTracker","provider","req","provEngNext","provEngEnd","res","id","middlewareNext","middlewareEnd","handler","err","result","cb","error","message","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,kBAAD,CAA3B,C,CAEA;;;IAEMC,kC;;;;;;;AAEJ;AACA,8CAAaC,aAAb,EAA4B;AAAA;;AAAA;;AAC1B;AACA,QAAI,CAACA,aAAL,EAAoB,MAAM,IAAIC,KAAJ,CAAU,iEAAV,CAAN;AACpB,UAAKC,cAAL,GAAsBF,aAAtB;AAH0B;AAI3B,G,CAED;;;;;WACA,mBAAWG,MAAX,EAAmB;AACjB,UAAI,KAAKC,UAAT,EAAqB,MAAM,IAAIH,KAAJ,CAAU,wEAAV,CAAN;AACrB,UAAMI,YAAY,GAAGF,MAAM,CAACG,aAA5B;;AACA,UAAMF,UAAU,GAAG,KAAKF,cAAL,CAAoB;AAAEC,QAAAA,MAAM,EAANA,MAAF;AAAUI,QAAAA,QAAQ,EAAEJ,MAApB;AAA4BE,QAAAA,YAAY,EAAZA;AAA5B,OAApB,CAAnB;;AACA,UAAI,CAACD,UAAL,EAAiB,MAAM,IAAIH,KAAJ,CAAU,+EAAV,CAAN;AACjB,UAAI,OAAOG,UAAP,KAAsB,UAA1B,EAAsC,MAAM,IAAIH,KAAJ,CAAU,6EAAV,CAAN;AACtC,WAAKG,UAAL,GAAkBA,UAAlB;AACD;;;WAED,uBAAeI,GAAf,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6C;AAC3C,UAAMC,GAAG,GAAG;AAAEC,QAAAA,EAAE,EAAEJ,GAAG,CAACI;AAAV,OAAZ;AACA,WAAKR,UAAL,CAAgBI,GAAhB,EAAqBG,GAArB,EAA0BE,cAA1B,EAA0CC,aAA1C;;AAEA,eAASD,cAAT,CAAyBE,OAAzB,EAAkC;AAChCN,QAAAA,WAAW,CAAC,UAACO,GAAD,EAAMC,MAAN,EAAcC,EAAd,EAAqB;AAC/B;AACA,cAAIF,GAAJ,EAAS;AACP,mBAAOL,GAAG,CAACM,MAAX;AACAN,YAAAA,GAAG,CAACQ,KAAJ,GAAY;AAAEC,cAAAA,OAAO,EAAEJ,GAAG,CAACI,OAAJ,IAAeJ;AAA1B,aAAZ;AACD,WAHD,MAGO;AACLL,YAAAA,GAAG,CAACM,MAAJ,GAAaA,MAAb;AACD,WAP8B,CAQ/B;;;AACA,cAAIF,OAAJ,EAAa;AACXA,YAAAA,OAAO,CAACG,EAAD,CAAP;AACD,WAFD,MAEO;AACLA,YAAAA,EAAE;AACH;AACF,SAdU,CAAX;AAeD;;AAED,eAASJ,aAAT,CAAwBE,GAAxB,EAA6B;AAC3B,YAAIA,GAAJ,EAAS,OAAON,UAAU,CAACM,GAAD,CAAjB;AACTN,QAAAA,UAAU,CAAC,IAAD,EAAOC,GAAG,CAACM,MAAX,CAAV;AACD;AACF;;;;EA7C8CpB,W;;AAiDjDwB,MAAM,CAACC,OAAP,GAAiBvB,kCAAjB","sourcesContent":["const Subprovider = require('./subprovider.js')\n\n// wraps a json-rpc-engine middleware in a subprovider interface\n\nclass JsonRpcEngineMiddlewareSubprovider extends Subprovider {\n\n  // take a constructorFn to call once we have a reference to the engine\n  constructor (constructorFn) {\n    super()\n    if (!constructorFn) throw new Error('JsonRpcEngineMiddlewareSubprovider - no constructorFn specified')\n    this._constructorFn = constructorFn\n  }\n\n  // this is called once the subprovider has been added to the provider engine\n  setEngine (engine) {\n    if (this.middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - subprovider added to engine twice')\n    const blockTracker = engine._blockTracker\n    const middleware = this._constructorFn({ engine, provider: engine, blockTracker })\n    if (!middleware) throw new Error('JsonRpcEngineMiddlewareSubprovider - _constructorFn did not return middleware')\n    if (typeof middleware !== 'function') throw new Error('JsonRpcEngineMiddlewareSubprovider - specified middleware is not a function')\n    this.middleware = middleware\n  }\n\n  handleRequest (req, provEngNext, provEngEnd) {\n    const res = { id: req.id }\n    this.middleware(req, res, middlewareNext, middlewareEnd)\n\n    function middlewareNext (handler) {\n      provEngNext((err, result, cb) => {\n        // update response object with result or error\n        if (err) {\n          delete res.result\n          res.error = { message: err.message || err }\n        } else {\n          res.result = result\n        }\n        // call middleware's next handler (even if error)\n        if (handler) {\n          handler(cb)\n        } else {\n          cb()\n        }\n      })\n    }\n\n    function middlewareEnd (err) {\n      if (err) return provEngEnd(err)\n      provEngEnd(null, res.result)\n    }\n  }\n\n}\n\nmodule.exports = JsonRpcEngineMiddlewareSubprovider\n"]},"metadata":{},"sourceType":"script"}