{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar createConnect = configure.configure(function (api) {\n  function connect(_x) {\n    return _connect.apply(this, arguments);\n  }\n\n  function _connect() {\n    _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(addr) {\n      var options,\n          res,\n          _yield$res$json,\n          Strings,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 3;\n              return api.post('swarm/connect', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: addr\n                }, options)),\n                headers: options.headers\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              Strings = _yield$res$json.Strings;\n              return _context.abrupt(\"return\", Strings || []);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _connect.apply(this, arguments);\n  }\n\n  return connect;\n});\nexports.createConnect = createConnect;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/swarm/connect.js"],"names":["Object","defineProperty","exports","value","configure","require","toUrlSearchParams","createConnect","api","connect","addr","options","post","signal","searchParams","arg","headers","res","json","Strings"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AAEA,IAAME,aAAa,GAAGH,SAAS,CAACA,SAAV,CAAoB,UAAAI,GAAG,EAAI;AAAA,WAChCC,OADgC;AAAA;AAAA;;AAAA;AAAA,wEAC/C,iBAAuBC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA6BC,cAAAA,OAA7B,2DAAuC,EAAvC;AAAA;AAAA,qBACoBH,GAAG,CAACI,IAAJ,CAAS,eAAT,EAA0B;AAC1CC,gBAAAA,MAAM,EAAEF,OAAO,CAACE,MAD0B;AAE1CC,gBAAAA,YAAY,EAAER,iBAAiB,CAACA,iBAAlB;AACZS,kBAAAA,GAAG,EAAEL;AADO,mBAETC,OAFS,EAF4B;AAM1CK,gBAAAA,OAAO,EAAEL,OAAO,CAACK;AANyB,eAA1B,CADpB;;AAAA;AACQC,cAAAA,GADR;AAAA;AAAA,qBAS0BA,GAAG,CAACC,IAAJ,EAT1B;;AAAA;AAAA;AASSC,cAAAA,OATT,mBASSA,OATT;AAAA,+CAUSA,OAAO,IAAI,EAVpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD+C;AAAA;AAAA;;AAa/C,SAAOV,OAAP;AACD,CAdqB,CAAtB;AAgBAP,OAAO,CAACK,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nconst createConnect = configure.configure(api => {\n  async function connect(addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {Strings} = await res.json();\n    return Strings || [];\n  }\n  return connect;\n});\n\nexports.createConnect = createConnect;\n"]},"metadata":{},"sourceType":"script"}