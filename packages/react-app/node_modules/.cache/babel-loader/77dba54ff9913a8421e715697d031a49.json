{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/views/ExampleUI.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, DatePicker, Divider, Input, Progress, Slider, Spin, Switch } from \"antd\";\nimport React, { useState } from \"react\";\nimport { utils } from \"ethers\";\nimport { SyncOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, Events } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExampleUI(_ref) {\n  _s();\n\n  var purpose = _ref.purpose,\n      address = _ref.address,\n      mainnetProvider = _ref.mainnetProvider,\n      localProvider = _ref.localProvider,\n      yourLocalBalance = _ref.yourLocalBalance,\n      price = _ref.price,\n      tx = _ref.tx,\n      readContracts = _ref.readContracts,\n      writeContracts = _ref.writeContracts,\n      blockExplorer = _ref.blockExplorer;\n\n  var _useState = useState(\"loading...\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newPurpose = _useState2[0],\n      setNewPurpose = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userHandle = _useState4[0],\n      setUserHandle = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      profileURI = _useState6[0],\n      setProfileURI = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      profileID = _useState8[0],\n      setProfileID = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      txHash = _useState10[0],\n      setTxHash = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      txStatus = _useState12[0],\n      setTxStatus = _useState12[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 400,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lens Example UI:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: [\"Handle:\", /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter unique handle\",\n          onChange: function onChange(e) {\n            setUserHandle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), \"Profile Image URI:\", /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter IPFS URI\",\n          onChange: function onChange(e) {\n            setProfileURI(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 8\n          },\n          onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var inputStruct, result;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    /* look how you call setPurpose on your contract: */\n\n                    /* notice how you pass a call back for tx updates too */\n                    inputStruct = {\n                      to: address,\n                      handle: userHandle,\n                      imageURI: profileURI,\n                      followModule: \"0x0000000000000000000000000000000000000000\",\n                      followModuleData: [],\n                      followNFTURI: ''\n                    };\n                    result = tx(writeContracts.ProfileCreationProxy.proxyCreateProfile(inputStruct), function (update) {\n                      console.log(\"üì° Transaction Update:\", update);\n                      setTxHash(update.hash);\n\n                      if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                        console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n                        setTxStatus(\"Successfull\");\n                      }\n                    });\n                    console.log(\"awaiting metamask/web3 confirm result...\", result);\n                    _context.t0 = console;\n                    _context.next = 6;\n                    return result;\n\n                  case 6:\n                    _context.t1 = _context.sent;\n\n                    _context.t0.log.call(_context.t0, _context.t1);\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          })),\n          children: \" Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Follow Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \"User Profile ID:\", /*#__PURE__*/_jsxDEV(Input, {\n        onChange: function onChange(e) {\n          setProfileID(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: 8\n        },\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var result;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  /* look how you call setPurpose on your contract: */\n\n                  /* notice how you pass a call back for tx updates too */\n                  result = tx(writeContracts.LensHubProxy.follow([profileID], [[]]), function (update) {\n                    console.log(\"üì° Transaction Update:\", update);\n                    setTxHash(update.hash);\n\n                    if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                      console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n                      setTxStatus(\"Successfull\");\n                    }\n                  });\n                  console.log(\"awaiting metamask/web3 confirm result...\", result);\n                  _context2.t0 = console;\n                  _context2.next = 5;\n                  return result;\n\n                case 5:\n                  _context2.t1 = _context2.sent;\n\n                  _context2.t0.log.call(_context2.t0, _context2.t1);\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        })),\n        children: \" Follow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Txn Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: [txHash ? /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: \"https://mumbai.polygonscan.com/tx/\" + txHash,\n          children: \"Txn Hash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 20\n        }, this) : \"Txn Hash\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), \"Txn Status: \", txStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 400,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Other Example UI:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"purpose: \", purpose]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: function onChange(e) {\n            setNewPurpose(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 8\n          },\n          onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n            var result;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    /* look how you call setPurpose on your contract: */\n\n                    /* notice how you pass a call back for tx updates too */\n                    result = tx(writeContracts.YourContract.setPurpose(newPurpose), function (update) {\n                      console.log(\"üì° Transaction Update:\", update);\n\n                      if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                        console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n                        console.log(\" ‚õΩÔ∏è \" + update.gasUsed + \"/\" + (update.gasLimit || update.gas) + \" @ \" + parseFloat(update.gasPrice) / 1000000000 + \" gwei\");\n                      }\n                    });\n                    console.log(\"awaiting metamask/web3 confirm result...\", result);\n                    _context3.t0 = console;\n                    _context3.next = 5;\n                    return result;\n\n                  case 5:\n                    _context3.t1 = _context3.sent;\n\n                    _context3.t0.log.call(_context3.t0, _context3.t1);\n\n                  case 7:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          })),\n          children: \"Set Purpose!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), \"Your Address:\", /*#__PURE__*/_jsxDEV(Address, {\n        address: address,\n        ensProvider: mainnetProvider,\n        fontSize: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), \"ENS Address Example:\", /*#__PURE__*/_jsxDEV(Address, {\n        address: \"0x34aA3F359A9D614239015126635CE7732c18fDF3\"\n        /* this will show as austingriffith.eth */\n        ,\n        ensProvider: mainnetProvider,\n        fontSize: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Balance: \", yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        address: address,\n        provider: localProvider,\n        price: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uD83D\\uDC33 Example Whale Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        balance: utils.parseEther(\"1000\"),\n        provider: localProvider,\n        price: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Balance: \", yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), \"Your Contract Address:\", /*#__PURE__*/_jsxDEV(Address, {\n        address: readContracts && readContracts.YourContract ? readContracts.YourContract.address : null,\n        ensProvider: mainnetProvider,\n        fontSize: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            /* look how you call setPurpose on your contract: */\n            tx(writeContracts.YourContract.setPurpose(\"üçª Cheers\"));\n          },\n          children: \"Set Purpose to \\\"\\uD83C\\uDF7B Cheers\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            /*\n            you can also just craft a transaction and send it to the tx() transactor\n            here we are sending value straight to the contract's address:\n            */\n            tx({\n              to: writeContracts.YourContract.address,\n              value: utils.parseEther(\"0.001\")\n            });\n            /* this should throw an error about \"no fallback nor receive function\" until you add it */\n          },\n          children: \"Send Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            /* look how we call setPurpose AND send some value along */\n            tx(writeContracts.YourContract.setPurpose(\"üíµ Paying for this one!\", {\n              value: utils.parseEther(\"0.001\")\n            }));\n            /* this will fail until you make the setPurpose function payable */\n          },\n          children: \"Set Purpose With Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: function onClick() {\n            /* you can also just craft a transaction and send it to the tx() transactor */\n            tx({\n              to: writeContracts.YourContract.address,\n              value: utils.parseEther(\"0.001\"),\n              data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\", [\"ü§ì Whoa so 1337!\"])\n            });\n            /* this should throw an error about \"no fallback nor receive function\" until you add it */\n          },\n          children: \"Another Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Events, {\n      contracts: readContracts,\n      contractName: \"YourContract\",\n      eventName: \"SetPurpose\",\n      localProvider: localProvider,\n      mainnetProvider: mainnetProvider,\n      startBlock: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 600,\n        margin: \"auto\",\n        marginTop: 32,\n        paddingBottom: 256\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [\"Check out all the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"\\uD83D\\uDCE6 components\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"There are tons of generic components included from\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://ant.design/components/overview/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"\\uD83D\\uDC1C ant.design\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), \" \", \"too!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Buttons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(SyncOutlined, {\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), \" Icons\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8\n          },\n          children: [\"Date Pickers?\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              onChange: function onChange() {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            range: true,\n            defaultValue: [20, 50],\n            onChange: function onChange() {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            defaultChecked: true,\n            onChange: function onChange() {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Progress, {\n            percent: 50,\n            status: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExampleUI, \"NX2M8XwAXY7s3LtNxqdgDZep0FA=\");\n\n_c = ExampleUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExampleUI\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/views/ExampleUI.jsx"],"names":["Button","Card","DatePicker","Divider","Input","Progress","Slider","Spin","Switch","React","useState","utils","SyncOutlined","Address","Balance","Events","ExampleUI","purpose","address","mainnetProvider","localProvider","yourLocalBalance","price","tx","readContracts","writeContracts","blockExplorer","newPurpose","setNewPurpose","userHandle","setUserHandle","profileURI","setProfileURI","profileID","setProfileID","txHash","setTxHash","txStatus","setTxStatus","border","padding","width","margin","marginTop","e","target","value","inputStruct","to","handle","imageURI","followModule","followModuleData","followNFTURI","result","ProfileCreationProxy","proxyCreateProfile","update","console","log","hash","status","LensHubProxy","follow","YourContract","setPurpose","gasUsed","gasLimit","gas","parseFloat","gasPrice","formatEther","parseEther","data","interface","encodeFunctionData","paddingBottom"],"mappings":"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","sourcesContent":["import { Button, Card, DatePicker, Divider, Input, Progress, Slider, Spin, Switch } from \"antd\";\nimport React, { useState } from \"react\";\nimport { utils } from \"ethers\";\nimport { SyncOutlined } from \"@ant-design/icons\";\n\nimport { Address, Balance, Events } from \"../components\";\n\nexport default function ExampleUI({\n  purpose,\n  address,\n  mainnetProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  readContracts,\n  writeContracts,\n  blockExplorer,\n}) {\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n  const [userHandle, setUserHandle] = useState(null);\n  const [profileURI, setProfileURI] = useState(null);\n  const [profileID, setProfileID] = useState(null);\n  const [txHash, setTxHash] = useState(null);\n  const [txStatus, setTxStatus] = useState(null);\n\n  return (\n    <div>\n      {/*\n        ‚öôÔ∏è Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 400, margin: \"auto\", marginTop: 64 }}>\n        <h2>Lens Example UI:</h2>\n        <Divider />\n        <h3>Create Profile</h3>\n        <div style={{ margin: 8 }}>\n        Handle: \n        <Input \n          placeholder=\"Enter unique handle\"\n          onChange={e => {\n              setUserHandle(e.target.value);\n            }}\n          />\n        Profile Image URI: \n        <Input \n          placeholder=\"Enter IPFS URI\" \n          onChange={e => {\n              setProfileURI(e.target.value);\n            }}\n          /> \n        <Button\n            style={{ marginTop: 8 }}\n            onClick={async () => {\n              /* look how you call setPurpose on your contract: */\n              /* notice how you pass a call back for tx updates too */\n              const inputStruct = {\n                to: address,\n                handle: userHandle,\n                imageURI: profileURI,\n                followModule: \"0x0000000000000000000000000000000000000000\",\n                followModuleData: [],\n                followNFTURI:'',\n              };\n              const result = tx(writeContracts.ProfileCreationProxy.proxyCreateProfile(inputStruct), update => {\n                console.log(\"üì° Transaction Update:\", update);\n                setTxHash(update.hash);\n                if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                  console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n                  setTxStatus(\"Successfull\");\n                }\n              });\n              console.log(\"awaiting metamask/web3 confirm result...\", result);\n              console.log(await result);\n            }}\n        > Submit\n        </Button>  \n        </div>\n        <Divider />\n        <h3>Follow Profile</h3>\n        User Profile ID: \n        <Input \n        onChange={e => {\n              setProfileID(e.target.value);\n          }}\n        /> \n        <Button\n            style={{ marginTop: 8 }}\n            onClick={async () => {\n              /* look how you call setPurpose on your contract: */\n              /* notice how you pass a call back for tx updates too */\n              const result = tx(writeContracts.LensHubProxy.follow([profileID],[[]]), update => {\n                console.log(\"üì° Transaction Update:\", update);\n                setTxHash(update.hash);\n                if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                  console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n                  setTxStatus(\"Successfull\");\n                }\n              });\n              console.log(\"awaiting metamask/web3 confirm result...\", result);\n              console.log(await result);\n            }}\n        > Follow\n        </Button> \n\n        <Divider />\n        <h3>Txn Details</h3>\n        <div style={{ margin: 8 }}>\n        {txHash ? (<a target=\"_blank\" href={\"https://mumbai.polygonscan.com/tx/\" + txHash}>Txn Hash</a>) : \"Txn Hash\"}\n        <br></br>\n        Txn Status: {txStatus}\n        </div>\n      </div>\n\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 400, margin: \"auto\", marginTop: 64 }}>\n        <h2>Other Example UI:</h2>\n        <h4>purpose: {purpose}</h4>\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            style={{ marginTop: 8 }}\n            onClick={async () => {\n              /* look how you call setPurpose on your contract: */\n              /* notice how you pass a call back for tx updates too */\n              const result = tx(writeContracts.YourContract.setPurpose(newPurpose), update => {\n                console.log(\"üì° Transaction Update:\", update);\n                if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                  console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n                  console.log(\n                    \" ‚õΩÔ∏è \" +\n                      update.gasUsed +\n                      \"/\" +\n                      (update.gasLimit || update.gas) +\n                      \" @ \" +\n                      parseFloat(update.gasPrice) / 1000000000 +\n                      \" gwei\",\n                  );\n                }\n              });\n              console.log(\"awaiting metamask/web3 confirm result...\", result);\n              console.log(await result);\n            }}\n          >\n            Set Purpose!\n          </Button>\n        </div>\n        <Divider />\n        Your Address:\n        <Address address={address} ensProvider={mainnetProvider} fontSize={16} />\n        <Divider />\n        ENS Address Example:\n        <Address\n          address=\"0x34aA3F359A9D614239015126635CE7732c18fDF3\" /* this will show as austingriffith.eth */\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <div>OR</div>\n        <Balance address={address} provider={localProvider} price={price} />\n        <Divider />\n        <div>üê≥ Example Whale Balance:</div>\n        <Balance balance={utils.parseEther(\"1000\")} provider={localProvider} price={price} />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <Divider />\n        Your Contract Address:\n        <Address\n          address={readContracts && readContracts.YourContract ? readContracts.YourContract.address : null}\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how you call setPurpose on your contract: */\n              tx(writeContracts.YourContract.setPurpose(\"üçª Cheers\"));\n            }}\n          >\n            Set Purpose to &quot;üçª Cheers&quot;\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /*\n              you can also just craft a transaction and send it to the tx() transactor\n              here we are sending value straight to the contract's address:\n            */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Send Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how we call setPurpose AND send some value along */\n              tx(\n                writeContracts.YourContract.setPurpose(\"üíµ Paying for this one!\", {\n                  value: utils.parseEther(\"0.001\"),\n                }),\n              );\n              /* this will fail until you make the setPurpose function payable */\n            }}\n          >\n            Set Purpose With Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* you can also just craft a transaction and send it to the tx() transactor */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n                data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\", [\n                  \"ü§ì Whoa so 1337!\",\n                ]),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Another Example\n          </Button>\n        </div>\n      </div>\n\n      {/*\n        üìë Maybe display a list of events?\n          (uncomment the event and emit line in YourContract.sol! )\n      */}\n      <Events\n        contracts={readContracts}\n        contractName=\"YourContract\"\n        eventName=\"SetPurpose\"\n        localProvider={localProvider}\n        mainnetProvider={mainnetProvider}\n        startBlock={1}\n      />\n\n      <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 256 }}>\n        <Card>\n          Check out all the{\" \"}\n          <a\n            href=\"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            üì¶ components\n          </a>\n        </Card>\n\n        <Card style={{ marginTop: 32 }}>\n          <div>\n            There are tons of generic components included from{\" \"}\n            <a href=\"https://ant.design/components/overview/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              üêú ant.design\n            </a>{\" \"}\n            too!\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <Button type=\"primary\">Buttons</Button>\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <SyncOutlined spin /> Icons\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            Date Pickers?\n            <div style={{ marginTop: 2 }}>\n              <DatePicker onChange={() => {}} />\n            </div>\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Slider range defaultValue={[20, 50]} onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Switch defaultChecked onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Progress percent={50} status=\"active\" />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Spin />\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}