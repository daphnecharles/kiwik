{"ast":null,"code":"// Parse link title\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (pos >= max) {\n    return result;\n  }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n    return result;\n  }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28\n    /* ( */\n    && marker === 0x29\n    /* ) */\n    ) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos++;\n\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/markdown-it/lib/helpers/parse_link_title.js"],"names":["unescapeAll","require","module","exports","parseLinkTitle","str","pos","max","code","marker","lines","start","result","ok","charCodeAt","slice"],"mappings":"AAAA;AACA;AACA;;AAGA,IAAIA,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,WAA7C;;AAGAE,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuC;AACtD,MAAIC,IAAJ;AAAA,MACIC,MADJ;AAAA,MAEIC,KAAK,GAAG,CAFZ;AAAA,MAGIC,KAAK,GAAGL,GAHZ;AAAA,MAIIM,MAAM,GAAG;AACPC,IAAAA,EAAE,EAAE,KADG;AAEPP,IAAAA,GAAG,EAAE,CAFE;AAGPI,IAAAA,KAAK,EAAE,CAHA;AAIPL,IAAAA,GAAG,EAAE;AAJE,GAJb;;AAWA,MAAIC,GAAG,IAAIC,GAAX,EAAgB;AAAE,WAAOK,MAAP;AAAgB;;AAElCH,EAAAA,MAAM,GAAGJ,GAAG,CAACS,UAAJ,CAAeR,GAAf,CAAT;;AAEA,MAAIG,MAAM,KAAK;AAAK;AAAhB,KAA2BA,MAAM,KAAK;AAAK;AAA3C,KAAsDA,MAAM,KAAK;AAAK;AAA1E,IAAmF;AAAE,WAAOG,MAAP;AAAgB;;AAErGN,EAAAA,GAAG,GAlBmD,CAoBtD;;AACA,MAAIG,MAAM,KAAK,IAAf,EAAqB;AAAEA,IAAAA,MAAM,GAAG,IAAT;AAAgB;;AAEvC,SAAOH,GAAG,GAAGC,GAAb,EAAkB;AAChBC,IAAAA,IAAI,GAAGH,GAAG,CAACS,UAAJ,CAAeR,GAAf,CAAP;;AACA,QAAIE,IAAI,KAAKC,MAAb,EAAqB;AACnBG,MAAAA,MAAM,CAACN,GAAP,GAAaA,GAAG,GAAG,CAAnB;AACAM,MAAAA,MAAM,CAACF,KAAP,GAAeA,KAAf;AACAE,MAAAA,MAAM,CAACP,GAAP,GAAaL,WAAW,CAACK,GAAG,CAACU,KAAJ,CAAUJ,KAAK,GAAG,CAAlB,EAAqBL,GAArB,CAAD,CAAxB;AACAM,MAAAA,MAAM,CAACC,EAAP,GAAY,IAAZ;AACA,aAAOD,MAAP;AACD,KAND,MAMO,IAAIJ,IAAI,KAAK;AAAK;AAAd,OAAyBC,MAAM,KAAK;AAAK;AAA7C,MAAsD;AAC3D,aAAOG,MAAP;AACD,KAFM,MAEA,IAAIJ,IAAI,KAAK,IAAb,EAAmB;AACxBE,MAAAA,KAAK;AACN,KAFM,MAEA,IAAIF,IAAI,KAAK;AAAK;AAAd,OAAyBF,GAAG,GAAG,CAAN,GAAUC,GAAvC,EAA4C;AACjDD,MAAAA,GAAG;;AACH,UAAID,GAAG,CAACS,UAAJ,CAAeR,GAAf,MAAwB,IAA5B,EAAkC;AAChCI,QAAAA,KAAK;AACN;AACF;;AAEDJ,IAAAA,GAAG;AACJ;;AAED,SAAOM,MAAP;AACD,CA9CD","sourcesContent":["// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n"]},"metadata":{},"sourceType":"script"}