{"ast":null,"code":"import _objectSpread from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sam/Desktop/kiwik/packages/react-app/src/components/L2Bridge.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Input, Form, Select, InputNumber, Table, Radio } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { utils, ethers } from \"ethers\";\nimport { useContractLoader, useOnBlock } from \"eth-hooks\";\nimport { NETWORKS } from \"../constants\";\nimport { Transactor } from \"../helpers\";\n/** \nThis is a component for bridging between L1 & L2\nCurrently it supports Testnet deposits for Arbitrum & Optimism\n\n __          _______ _____\n \\ \\        / /_   _|  __ \\\n  \\ \\  /\\  / /  | | | |__) |\n   \\ \\/  \\/ /   | | |  ___/\n    \\  /\\  /   _| |_| |\n     \\/  \\/   |_____|_|\n\n\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function L2ArbitrumBridge(_ref) {\n  _s();\n\n  var address = _ref.address,\n      userSigner = _ref.userSigner;\n\n  var _useState = useState(\"...\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      L1EthBalance = _useState2[0],\n      setL1EthBalance = _useState2[1];\n\n  var _useState3 = useState(\"...\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      L2EthBalance = _useState4[0],\n      setL2EthBalance = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      L1Provider = _useState6[0],\n      setL1Provider = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      L2Provider = _useState8[0],\n      setL2Provider = _useState8[1];\n\n  var _useState9 = useState(\"arbitrum\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rollup = _useState10[0],\n      setRollup = _useState10[1];\n\n  var _useState11 = useState(\"test\"),\n      _useState12 = _slicedToArray(_useState11, 1),\n      environment = _useState12[0];\n\n  var rollupConfig = {\n    arbitrum: {\n      test: {\n        L1: NETWORKS.rinkeby,\n        L2: NETWORKS.rinkebyArbitrum\n      },\n      main: {\n        L1: NETWORKS.mainnet,\n        L2: NETWORKS.arbitrum\n      },\n      local: {\n        L1: NETWORKS.localArbitrumL1,\n        L2: NETWORKS.localArbitrum\n      }\n    },\n    optimism: {\n      test: {\n        L1: NETWORKS.kovan,\n        L2: NETWORKS.kovanOptimism\n      },\n      local: {\n        L1: NETWORKS.localOptimismL1,\n        L2: NETWORKS.localOptimism\n      }\n    }\n  };\n  var activeConfig = rollupConfig[rollup][environment];\n  var selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n  var tx = Transactor(userSigner);\n  useEffect(function () {\n    function setProviders() {\n      return _setProviders.apply(this, arguments);\n    }\n\n    function _setProviders() {\n      _setProviders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var L1, L2;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                L1 = activeConfig.L1;\n                L2 = activeConfig.L2;\n                setL1Provider(new ethers.providers.StaticJsonRpcProvider(L1.rpcUrl));\n                setL2Provider(new ethers.providers.StaticJsonRpcProvider(L2.rpcUrl));\n                setL1EthBalance(\"...\");\n                setL2EthBalance(\"...\");\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _setProviders.apply(this, arguments);\n    }\n\n    setProviders();\n  }, [rollup, activeConfig.L1, activeConfig.L2]);\n  var contracts = useContractLoader(userSigner, {\n    externalContracts: L1BridgeMetadata,\n    hardhatContracts: {}\n  });\n  useOnBlock(L1Provider, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var yourL1Balance, yourL2Balance;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"\\u26D3 A new mainnet block is here: \".concat(L1Provider._lastBlockNumber));\n            _context2.next = 3;\n            return L1Provider.getBalance(address);\n\n          case 3:\n            yourL1Balance = _context2.sent;\n            setL1EthBalance(yourL1Balance ? ethers.utils.formatEther(yourL1Balance) : \"...\");\n            _context2.next = 7;\n            return L2Provider.getBalance(address);\n\n          case 7:\n            yourL2Balance = _context2.sent;\n            setL2EthBalance(yourL2Balance ? ethers.utils.formatEther(yourL2Balance) : \"...\");\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })));\n  var Option = Select.Option;\n  var formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 8\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 12\n      }\n    }\n  };\n  var tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0\n      },\n      sm: {\n        span: 12,\n        offset: 8\n      }\n    }\n  };\n  var columns = [{\n    title: \"\",\n    dataIndex: \"token\",\n    key: \"token\",\n    align: \"center\"\n  }, {\n    title: \"\".concat(activeConfig.L1.name, \" L1 Balance\"),\n    dataIndex: \"l1\",\n    key: \"l1\",\n    align: \"center\"\n  }, {\n    title: \"\".concat(activeConfig.L1.name, \" \").concat(rollup, \" Balance\"),\n    dataIndex: \"l2\",\n    key: \"l2\",\n    align: \"center\"\n  }];\n  var data = [{\n    key: \"1\",\n    token: \"ETH\",\n    l1: \"Ξ\" + L1EthBalance,\n    l2: \"Ξ\" + L2EthBalance\n  }];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var onAssetChange = function onAssetChange(value) {\n    console.log(value);\n  };\n\n  function onFinish(_x) {\n    return _onFinish.apply(this, arguments);\n  }\n\n  function _onFinish() {\n    _onFinish = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n      var newTx;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(contracts);\n              console.log(values.amount.toString());\n              console.log(rollup);\n              _context3.prev = 3;\n\n              if (!(rollup === \"arbitrum\")) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 7;\n              return tx(contracts.Inbox.depositEth(1300000, {\n                value: utils.parseEther(values.amount.toString()),\n                gasLimit: 300000\n              }));\n\n            case 7:\n              newTx = _context3.sent;\n              _context3.next = 14;\n              break;\n\n            case 10:\n              if (!(rollup === \"optimism\")) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 13;\n              return tx(contracts.OVM_L1StandardBridge.depositETH(1300000, \"0x\", {\n                value: utils.parseEther(values.amount.toString())\n              }));\n\n            case 13:\n              newTx = _context3.sent;\n\n            case 14:\n              _context3.next = 16;\n              return newTx.wait();\n\n            case 16:\n              console.log(\"woop!\");\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](3);\n              console.log(_context3.t0);\n              console.log(\"something went wrong!\");\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 19]]);\n    }));\n    return _onFinish.apply(this, arguments);\n  }\n\n  var wrongNetwork = selectedChainId !== activeConfig.L1.chainId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16,\n      width: 800,\n      margin: \"auto\",\n      marginBottom: 128\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 800,\n        margin: \"auto\",\n        marginBottom: 128\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to the L2 Deposit Bridge!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Radio.Group, {\n        value: rollup,\n        onChange: function onChange(e) {\n          setRollup(e.target.value);\n        },\n        style: {\n          marginBottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"arbitrum\",\n          children: \"Arbitrum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: \"optimism\",\n          children: \"Optimism\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data,\n        pagination: false,\n        style: {\n          marginBottom: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({}, formItemLayout), {}, {\n        form: form,\n        name: \"control-hooks\",\n        onFinish: onFinish,\n        initialValues: {\n          assetType: \"eth\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"assetType\",\n          label: \"Select Asset Type\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select an asset type\",\n            onChange: onAssetChange,\n            allowClear: true,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"eth\",\n              children: \"ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              disabled: true,\n              value: \"erc20\",\n              children: \"ERC-20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"address\",\n          label: \"Address\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            disabled: true,\n            placeholder: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"amount\",\n          label: \"Amount to bridge\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, _objectSpread(_objectSpread({}, tailFormItemLayout), {}, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            disabled: wrongNetwork,\n            children: wrongNetwork ? \"Switch wallet to \".concat(activeConfig.L1.name) : \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n} // Arbitrum Inbox https://rinkeby.etherscan.io/address/0xa157dc79ca26d69c3b1282d03ec42bdee2790a8f#code\n\n_s(L2ArbitrumBridge, \"zayiOTrdGU3aglenmK+yS/ouSPY=\", false, function () {\n  return [useContractLoader, useOnBlock, Form.useForm];\n});\n\n_c = L2ArbitrumBridge;\nvar ArbitrumInboxABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"messageNum\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"InboxMessageDelivered\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"messageNum\",\n    type: \"uint256\"\n  }],\n  name: \"InboxMessageDeliveredFromOrigin\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"address\",\n    name: \"newSource\",\n    type: \"address\"\n  }],\n  name: \"WhitelistSourceUpdated\",\n  type: \"event\"\n}, {\n  inputs: [],\n  name: \"bridge\",\n  outputs: [{\n    internalType: \"contract IBridge\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"destAddr\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"l2CallValue\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"maxSubmissionCost\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"excessFeeRefundAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"callValueRefundAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"maxGas\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"gasPriceBid\",\n    type: \"uint256\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"createRetryableTicket\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"maxSubmissionCost\",\n    type: \"uint256\"\n  }],\n  name: \"depositEth\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"contract IBridge\",\n    name: \"_bridge\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"_whitelist\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"isMaster\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"maxGas\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"gasPriceBid\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"destAddr\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"sendContractTransaction\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"maxGas\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"gasPriceBid\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"destAddr\",\n    type: \"address\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"sendL1FundedContractTransaction\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"maxGas\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"gasPriceBid\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"nonce\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"destAddr\",\n    type: \"address\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"sendL1FundedUnsignedTransaction\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"messageData\",\n    type: \"bytes\"\n  }],\n  name: \"sendL2Message\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"messageData\",\n    type: \"bytes\"\n  }],\n  name: \"sendL2MessageFromOrigin\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"maxGas\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"gasPriceBid\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"nonce\",\n    type: \"uint256\"\n  }, {\n    internalType: \"address\",\n    name: \"destAddr\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"sendUnsignedTransaction\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"newSource\",\n    type: \"address\"\n  }],\n  name: \"updateWhitelistSource\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"whitelist\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}]; // https://github.com/ethereum-optimism/optimism/blob/2bd49730fa8d2c10953873f0ccc792198a49d5c9/packages/contracts/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1StandardBridge.sol\n\nvar OVM_L1StandardBridgeABI = [\"function depositETH(uint32 _l2Gas,bytes calldata _data) external payable\", \"function depositETHTo(address _to,uint32 _l2Gas,bytes calldata _data) external payable\", \"function finalizeETHWithdrawal (address _from,address _to,uint _amount,bytes calldata _data) external\"];\nvar L1BridgeMetadata = {\n  // Arbitrium Contract's\n  44010: {\n    contracts: {\n      Inbox: {\n        address: \"0xA4d796Ad4e79aFB703340a596AEd88f8a5924183\",\n        abi: ArbitrumInboxABI\n      }\n    }\n  },\n  4: {\n    contracts: {\n      Inbox: {\n        address: \"0x578bade599406a8fe3d24fd7f7211c0911f5b29e\",\n        abi: ArbitrumInboxABI\n      }\n    }\n  },\n  // Optimism Contract's\n  31337: {\n    contracts: {\n      OVM_L1StandardBridge: {\n        address: \"0x998abeb3E57409262aE5b751f60747921B33613E\",\n        abi: OVM_L1StandardBridgeABI\n      }\n    }\n  },\n  42: {\n    contracts: {\n      OVM_L1StandardBridge: {\n        address: \"0x22F24361D548e5FaAfb36d1437839f080363982B\",\n        abi: OVM_L1StandardBridgeABI\n      }\n    }\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"L2ArbitrumBridge\");","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/packages/react-app/src/components/L2Bridge.jsx"],"names":["Button","Input","Form","Select","InputNumber","Table","Radio","React","useState","useEffect","utils","ethers","useContractLoader","useOnBlock","NETWORKS","Transactor","L2ArbitrumBridge","address","userSigner","L1EthBalance","setL1EthBalance","L2EthBalance","setL2EthBalance","L1Provider","setL1Provider","L2Provider","setL2Provider","rollup","setRollup","environment","rollupConfig","arbitrum","test","L1","rinkeby","L2","rinkebyArbitrum","main","mainnet","local","localArbitrumL1","localArbitrum","optimism","kovan","kovanOptimism","localOptimismL1","localOptimism","activeConfig","selectedChainId","provider","_network","chainId","tx","setProviders","providers","StaticJsonRpcProvider","rpcUrl","contracts","externalContracts","L1BridgeMetadata","hardhatContracts","console","log","_lastBlockNumber","getBalance","yourL1Balance","formatEther","yourL2Balance","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","columns","title","dataIndex","key","align","name","data","token","l1","l2","useForm","form","onAssetChange","value","onFinish","values","amount","toString","Inbox","depositEth","parseEther","gasLimit","newTx","OVM_L1StandardBridge","depositETH","wait","wrongNetwork","padding","width","margin","marginBottom","border","e","target","assetType","required","ArbitrumInboxABI","anonymous","inputs","indexed","internalType","type","outputs","stateMutability","OVM_L1StandardBridgeABI","abi"],"mappings":"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","sourcesContent":["import { Button, Input, Form, Select, InputNumber, Table, Radio } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { utils, ethers } from \"ethers\";\nimport { useContractLoader, useOnBlock } from \"eth-hooks\";\n\nimport { NETWORKS } from \"../constants\";\nimport { Transactor } from \"../helpers\";\n\n/** \nThis is a component for bridging between L1 & L2\nCurrently it supports Testnet deposits for Arbitrum & Optimism\n\n __          _______ _____\n \\ \\        / /_   _|  __ \\\n  \\ \\  /\\  / /  | | | |__) |\n   \\ \\/  \\/ /   | | |  ___/\n    \\  /\\  /   _| |_| |\n     \\/  \\/   |_____|_|\n\n\n**/\n\nexport default function L2ArbitrumBridge({ address, userSigner }) {\n  const [L1EthBalance, setL1EthBalance] = useState(\"...\");\n  const [L2EthBalance, setL2EthBalance] = useState(\"...\");\n  const [L1Provider, setL1Provider] = useState(\"\");\n  const [L2Provider, setL2Provider] = useState(\"\");\n  const [rollup, setRollup] = useState(\"arbitrum\");\n  const [environment] = useState(\"test\");\n\n  const rollupConfig = {\n    arbitrum: {\n      test: { L1: NETWORKS.rinkeby, L2: NETWORKS.rinkebyArbitrum },\n      main: { L1: NETWORKS.mainnet, L2: NETWORKS.arbitrum },\n      local: { L1: NETWORKS.localArbitrumL1, L2: NETWORKS.localArbitrum },\n    },\n    optimism: {\n      test: { L1: NETWORKS.kovan, L2: NETWORKS.kovanOptimism },\n      local: { L1: NETWORKS.localOptimismL1, L2: NETWORKS.localOptimism },\n    },\n  };\n\n  const activeConfig = rollupConfig[rollup][environment];\n\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  const tx = Transactor(userSigner);\n\n  useEffect(() => {\n    async function setProviders() {\n      const L1 = activeConfig.L1;\n      const L2 = activeConfig.L2;\n      setL1Provider(new ethers.providers.StaticJsonRpcProvider(L1.rpcUrl));\n      setL2Provider(new ethers.providers.StaticJsonRpcProvider(L2.rpcUrl));\n      setL1EthBalance(\"...\");\n      setL2EthBalance(\"...\");\n    }\n    setProviders();\n  }, [rollup, activeConfig.L1, activeConfig.L2]);\n\n  const contracts = useContractLoader(userSigner, { externalContracts: L1BridgeMetadata, hardhatContracts: {} });\n\n  useOnBlock(L1Provider, async () => {\n    console.log(`⛓ A new mainnet block is here: ${L1Provider._lastBlockNumber}`);\n    const yourL1Balance = await L1Provider.getBalance(address);\n    setL1EthBalance(yourL1Balance ? ethers.utils.formatEther(yourL1Balance) : \"...\");\n    const yourL2Balance = await L2Provider.getBalance(address);\n    setL2EthBalance(yourL2Balance ? ethers.utils.formatEther(yourL2Balance) : \"...\");\n  });\n\n  const { Option } = Select;\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 12 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 12,\n        offset: 8,\n      },\n    },\n  };\n\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"token\",\n      key: \"token\",\n      align: \"center\",\n    },\n    {\n      title: `${activeConfig.L1.name} L1 Balance`,\n      dataIndex: \"l1\",\n      key: \"l1\",\n      align: \"center\",\n    },\n    {\n      title: `${activeConfig.L1.name} ${rollup} Balance`,\n      dataIndex: \"l2\",\n      key: \"l2\",\n      align: \"center\",\n    },\n  ];\n\n  const data = [\n    {\n      key: \"1\",\n      token: \"ETH\",\n      l1: \"Ξ\" + L1EthBalance,\n      l2: \"Ξ\" + L2EthBalance,\n    },\n  ];\n\n  const [form] = Form.useForm();\n\n  const onAssetChange = value => {\n    console.log(value);\n  };\n\n  async function onFinish(values) {\n    console.log(contracts);\n    console.log(values.amount.toString());\n    console.log(rollup);\n    let newTx;\n    try {\n      if (rollup === \"arbitrum\") {\n        newTx = await tx(\n          contracts.Inbox.depositEth(1_300_000, {\n            value: utils.parseEther(values.amount.toString()),\n            gasLimit: 300000,\n          }),\n        );\n      } else if (rollup === \"optimism\") {\n        newTx = await tx(\n          contracts.OVM_L1StandardBridge.depositETH(1_300_000, \"0x\", {\n            value: utils.parseEther(values.amount.toString()),\n          }),\n        );\n      }\n      await newTx.wait();\n      console.log(\"woop!\");\n    } catch (e) {\n      console.log(e);\n      console.log(\"something went wrong!\");\n    }\n  }\n\n  const wrongNetwork = selectedChainId !== activeConfig.L1.chainId;\n\n  return (\n    <div style={{ padding: 16, width: 800, margin: \"auto\", marginBottom: 128 }}>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginBottom: 128 }}>\n        <h2>Welcome to the L2 Deposit Bridge!</h2>\n        <Radio.Group\n          value={rollup}\n          onChange={e => {\n            setRollup(e.target.value);\n          }}\n          style={{ marginBottom: 10 }}\n        >\n          <Radio.Button value=\"arbitrum\">Arbitrum</Radio.Button>\n          <Radio.Button value=\"optimism\">Optimism</Radio.Button>\n        </Radio.Group>\n\n        <Table columns={columns} dataSource={data} pagination={false} style={{ marginBottom: 20 }} />\n\n        <Form\n          {...formItemLayout}\n          form={form}\n          name=\"control-hooks\"\n          onFinish={onFinish}\n          initialValues={{ assetType: \"eth\" }}\n        >\n          <Form.Item\n            name=\"assetType\"\n            label=\"Select Asset Type\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select placeholder=\"Select an asset type\" onChange={onAssetChange} allowClear>\n              <Option value=\"eth\">ETH</Option>\n              <Option disabled value=\"erc20\">\n                ERC-20\n              </Option>\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"address\" label=\"Address\">\n            <Input disabled placeholder={address} />\n          </Form.Item>\n          <Form.Item\n            name=\"amount\"\n            label=\"Amount to bridge\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <InputNumber />\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" disabled={wrongNetwork}>\n              {wrongNetwork ? `Switch wallet to ${activeConfig.L1.name}` : \"Deposit\"}\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\n// Arbitrum Inbox https://rinkeby.etherscan.io/address/0xa157dc79ca26d69c3b1282d03ec42bdee2790a8f#code\nconst ArbitrumInboxABI = [\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"uint256\", name: \"messageNum\", type: \"uint256\" },\n      { indexed: false, internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"InboxMessageDelivered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: true, internalType: \"uint256\", name: \"messageNum\", type: \"uint256\" }],\n    name: \"InboxMessageDeliveredFromOrigin\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: \"address\", name: \"newSource\", type: \"address\" }],\n    name: \"WhitelistSourceUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"bridge\",\n    outputs: [{ internalType: \"contract IBridge\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"l2CallValue\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"maxSubmissionCost\", type: \"uint256\" },\n      { internalType: \"address\", name: \"excessFeeRefundAddress\", type: \"address\" },\n      { internalType: \"address\", name: \"callValueRefundAddress\", type: \"address\" },\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"createRetryableTicket\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"maxSubmissionCost\", type: \"uint256\" }],\n    name: \"depositEth\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"contract IBridge\", name: \"_bridge\", type: \"address\" },\n      { internalType: \"address\", name: \"_whitelist\", type: \"address\" },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isMaster\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendContractTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendL1FundedContractTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendL1FundedUnsignedTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"messageData\", type: \"bytes\" }],\n    name: \"sendL2Message\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"messageData\", type: \"bytes\" }],\n    name: \"sendL2MessageFromOrigin\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendUnsignedTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newSource\", type: \"address\" }],\n    name: \"updateWhitelistSource\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"whitelist\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\n// https://github.com/ethereum-optimism/optimism/blob/2bd49730fa8d2c10953873f0ccc792198a49d5c9/packages/contracts/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1StandardBridge.sol\nconst OVM_L1StandardBridgeABI = [\n  \"function depositETH(uint32 _l2Gas,bytes calldata _data) external payable\",\n  \"function depositETHTo(address _to,uint32 _l2Gas,bytes calldata _data) external payable\",\n  \"function finalizeETHWithdrawal (address _from,address _to,uint _amount,bytes calldata _data) external\",\n];\n\nconst L1BridgeMetadata = {\n  // Arbitrium Contract's\n  44010: {\n    contracts: {\n      Inbox: {\n        address: \"0xA4d796Ad4e79aFB703340a596AEd88f8a5924183\",\n        abi: ArbitrumInboxABI,\n      },\n    },\n  },\n  4: {\n    contracts: {\n      Inbox: {\n        address: \"0x578bade599406a8fe3d24fd7f7211c0911f5b29e\",\n        abi: ArbitrumInboxABI,\n      },\n    },\n  },\n  // Optimism Contract's\n  31337: {\n    contracts: {\n      OVM_L1StandardBridge: {\n        address: \"0x998abeb3E57409262aE5b751f60747921B33613E\",\n        abi: OVM_L1StandardBridgeABI,\n      },\n    },\n  },\n  42: {\n    contracts: {\n      OVM_L1StandardBridge: {\n        address: \"0x22F24361D548e5FaAfb36d1437839f080363982B\",\n        abi: OVM_L1StandardBridgeABI,\n      },\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}