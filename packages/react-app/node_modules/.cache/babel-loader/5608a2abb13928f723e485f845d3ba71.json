{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar codemirror_1 = __importDefault(require(\"codemirror\"));\n\nvar getTypeInfo_1 = __importDefault(require(\"./utils/getTypeInfo\"));\n\nvar SchemaReference_1 = require(\"./utils/SchemaReference\");\n\nrequire(\"./utils/jump-addon\");\n\ncodemirror_1.default.registerHelper('jump', 'graphql', function (token, options) {\n  if (!options.schema || !options.onClick || !token.state) {\n    return;\n  }\n\n  var state = token.state;\n  var kind = state.kind;\n  var step = state.step;\n  var typeInfo = getTypeInfo_1.default(options.schema, state);\n\n  if (kind === 'Field' && step === 0 && typeInfo.fieldDef || kind === 'AliasedField' && step === 2 && typeInfo.fieldDef) {\n    return SchemaReference_1.getFieldReference(typeInfo);\n  } else if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n    return SchemaReference_1.getDirectiveReference(typeInfo);\n  } else if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n    return SchemaReference_1.getArgumentReference(typeInfo);\n  } else if (kind === 'EnumValue' && typeInfo.enumValue) {\n    return SchemaReference_1.getEnumValueReference(typeInfo);\n  } else if (kind === 'NamedType' && typeInfo.type) {\n    return SchemaReference_1.getTypeReference(typeInfo);\n  }\n});","map":{"version":3,"sources":["src/jump.ts"],"names":[],"mappings":";;;;;;;;;;;;AAYA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAOA,OAAA,CAAA,oBAAA,CAAA;;AAsBA,YAAA,CAAA,OAAA,CAAW,cAAX,CACE,MADF,EAEE,SAFF,EAGE,UAAC,KAAD,EAA0B,OAA1B,EAAqD;AACnD,MAAI,CAAC,OAAO,CAAC,MAAT,IAAmB,CAAC,OAAO,CAAC,OAA5B,IAAuC,CAAC,KAAK,CAAC,KAAlD,EAAyD;AACvD;AACD;;AAKD,MAAM,KAAK,GAAG,KAAK,CAAC,KAApB;AACA,MAAM,IAAI,GAAG,KAAK,CAAC,IAAnB;AACA,MAAM,IAAI,GAAG,KAAK,CAAC,IAAnB;AACA,MAAM,QAAQ,GAAG,aAAA,CAAA,OAAA,CAAY,OAAO,CAAC,MAApB,EAA4B,KAA5B,CAAjB;;AAEA,MACG,IAAI,KAAK,OAAT,IAAoB,IAAI,KAAK,CAA7B,IAAkC,QAAQ,CAAC,QAA5C,IACC,IAAI,KAAK,cAAT,IAA2B,IAAI,KAAK,CAApC,IAAyC,QAAQ,CAAC,QAFrD,EAGE;AACA,WAAO,iBAAA,CAAA,iBAAA,CAAkB,QAAlB,CAAP;AACD,GALD,MAKO,IAAI,IAAI,KAAK,WAAT,IAAwB,IAAI,KAAK,CAAjC,IAAsC,QAAQ,CAAC,YAAnD,EAAiE;AACtE,WAAO,iBAAA,CAAA,qBAAA,CAAsB,QAAtB,CAAP;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,UAAT,IAAuB,IAAI,KAAK,CAAhC,IAAqC,QAAQ,CAAC,MAAlD,EAA0D;AAC/D,WAAO,iBAAA,CAAA,oBAAA,CAAqB,QAArB,CAAP;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,WAAT,IAAwB,QAAQ,CAAC,SAArC,EAAgD;AACrD,WAAO,iBAAA,CAAA,qBAAA,CAAsB,QAAtB,CAAP;AACD,GAFM,MAEA,IAAI,IAAI,KAAK,WAAT,IAAwB,QAAQ,CAAC,IAArC,EAA2C;AAChD,WAAO,iBAAA,CAAA,gBAAA,CAAiB,QAAjB,CAAP;AACD;AACF,CA9BH","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar codemirror_1 = __importDefault(require(\"codemirror\"));\nvar getTypeInfo_1 = __importDefault(require(\"./utils/getTypeInfo\"));\nvar SchemaReference_1 = require(\"./utils/SchemaReference\");\nrequire(\"./utils/jump-addon\");\ncodemirror_1.default.registerHelper('jump', 'graphql', function (token, options) {\n    if (!options.schema || !options.onClick || !token.state) {\n        return;\n    }\n    var state = token.state;\n    var kind = state.kind;\n    var step = state.step;\n    var typeInfo = getTypeInfo_1.default(options.schema, state);\n    if ((kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n        (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef)) {\n        return SchemaReference_1.getFieldReference(typeInfo);\n    }\n    else if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n        return SchemaReference_1.getDirectiveReference(typeInfo);\n    }\n    else if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n        return SchemaReference_1.getArgumentReference(typeInfo);\n    }\n    else if (kind === 'EnumValue' && typeInfo.enumValue) {\n        return SchemaReference_1.getEnumValueReference(typeInfo);\n    }\n    else if (kind === 'NamedType' && typeInfo.type) {\n        return SchemaReference_1.getTypeReference(typeInfo);\n    }\n});\n//# sourceMappingURL=jump.js.map"]},"metadata":{},"sourceType":"script"}