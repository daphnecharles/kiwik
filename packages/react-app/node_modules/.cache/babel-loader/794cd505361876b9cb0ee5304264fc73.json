{"ast":null,"code":"var _require = require('./src/classes'),\n    JsonRpcError = _require.JsonRpcError,\n    EthJsonRpcError = _require.EthJsonRpcError;\n\nvar _require2 = require('./src/utils'),\n    serializeError = _require2.serializeError,\n    getMessageFromCode = _require2.getMessageFromCode;\n\nvar errors = require('./src/errors');\n\nvar ERROR_CODES = require('./src/errorCodes.json');\n\nmodule.exports = {\n  errors: errors,\n  JsonRpcError: JsonRpcError,\n  EthJsonRpcError: EthJsonRpcError,\n  serializeError: serializeError,\n  getMessageFromCode: getMessageFromCode,\n\n  /** @type ErrorCodes */\n  ERROR_CODES: ERROR_CODES\n}; // Types\n\n/**\n * @typedef {Object} EthJsonRpcErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} JsonRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n */\n\n/**\n * @typedef ErrorCodes\n * @property {JsonRpcErrorCodes} jsonRpc\n * @property {EthJsonRpcErrorCodes} eth\n */","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/eth-json-rpc-errors/index.js"],"names":["require","JsonRpcError","EthJsonRpcError","serializeError","getMessageFromCode","errors","ERROR_CODES","module","exports"],"mappings":"AACA,eAA0CA,OAAO,CAAC,eAAD,CAAjD;AAAA,IAAQC,YAAR,YAAQA,YAAR;AAAA,IAAsBC,eAAtB,YAAsBA,eAAtB;;AACA,gBAEIF,OAAO,CAAC,aAAD,CAFX;AAAA,IACEG,cADF,aACEA,cADF;AAAA,IACkBC,kBADlB,aACkBA,kBADlB;;AAGA,IAAMC,MAAM,GAAGL,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,uBAAD,CAA3B;;AAEAO,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,MAAM,EAANA,MADe;AAEfJ,EAAAA,YAAY,EAAZA,YAFe;AAGfC,EAAAA,eAAe,EAAfA,eAHe;AAIfC,EAAAA,cAAc,EAAdA,cAJe;AAKfC,EAAAA,kBAAkB,EAAlBA,kBALe;;AAMf;AACAE,EAAAA,WAAW,EAAXA;AAPe,CAAjB,C,CAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["\nconst { JsonRpcError, EthJsonRpcError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst errors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  errors,\n  JsonRpcError,\n  EthJsonRpcError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthJsonRpcErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} JsonRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n */\n\n/**\n * @typedef ErrorCodes\n * @property {JsonRpcErrorCodes} jsonRpc\n * @property {EthJsonRpcErrorCodes} eth\n */\n"]},"metadata":{},"sourceType":"script"}