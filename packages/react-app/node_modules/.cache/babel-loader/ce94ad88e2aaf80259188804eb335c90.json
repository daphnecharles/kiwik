{"ast":null,"code":"import React from 'react';\nimport Argument from './Argument';\nimport Directive from './Directive';\nimport MarkdownContent from './MarkdownContent';\nimport TypeLink from './TypeLink';\nexport default function FieldDoc(_a) {\n  var field = _a.field,\n      onClickType = _a.onClickType;\n  var argsDef;\n\n  if (field && 'args' in field && field.args.length > 0) {\n    argsDef = React.createElement(\"div\", {\n      className: \"doc-category\"\n    }, React.createElement(\"div\", {\n      className: \"doc-category-title\"\n    }, 'arguments'), field.args.map(function (arg) {\n      return React.createElement(\"div\", {\n        key: arg.name,\n        className: \"doc-category-item\"\n      }, React.createElement(\"div\", null, React.createElement(Argument, {\n        arg: arg,\n        onClickType: onClickType\n      })), React.createElement(MarkdownContent, {\n        className: \"doc-value-description\",\n        markdown: arg.description\n      }));\n    }));\n  }\n\n  var directivesDef;\n\n  if (field && field.astNode && field.astNode.directives && field.astNode.directives.length > 0) {\n    directivesDef = React.createElement(\"div\", {\n      className: \"doc-category\"\n    }, React.createElement(\"div\", {\n      className: \"doc-category-title\"\n    }, 'directives'), field.astNode.directives.map(function (directive) {\n      return React.createElement(\"div\", {\n        key: directive.name.value,\n        className: \"doc-category-item\"\n      }, React.createElement(\"div\", null, React.createElement(Directive, {\n        directive: directive\n      })));\n    }));\n  }\n\n  return React.createElement(\"div\", null, React.createElement(MarkdownContent, {\n    className: \"doc-type-description\",\n    markdown: (field === null || field === void 0 ? void 0 : field.description) || 'No Description'\n  }), field && 'deprecationReason' in field && React.createElement(MarkdownContent, {\n    className: \"doc-deprecation\",\n    markdown: field === null || field === void 0 ? void 0 : field.deprecationReason\n  }), React.createElement(\"div\", {\n    className: \"doc-category\"\n  }, React.createElement(\"div\", {\n    className: \"doc-category-title\"\n  }, 'type'), React.createElement(TypeLink, {\n    type: field === null || field === void 0 ? void 0 : field.type,\n    onClick: onClickType\n  })), argsDef, directivesDef);\n}","map":{"version":3,"sources":["../../../src/components/DocExplorer/FieldDoc.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport Argument from './Argument';\nimport Directive from './Directive';\nimport MarkdownContent from './MarkdownContent';\nimport TypeLink from './TypeLink';\nexport default function FieldDoc(_a) {\n    var field = _a.field, onClickType = _a.onClickType;\n    var argsDef;\n    if (field && 'args' in field && field.args.length > 0) {\n        argsDef = (React.createElement(\"div\", { className: \"doc-category\" },\n            React.createElement(\"div\", { className: \"doc-category-title\" }, 'arguments'),\n            field.args.map(function (arg) { return (React.createElement(\"div\", { key: arg.name, className: \"doc-category-item\" },\n                React.createElement(\"div\", null,\n                    React.createElement(Argument, { arg: arg, onClickType: onClickType })),\n                React.createElement(MarkdownContent, { className: \"doc-value-description\", markdown: arg.description }))); })));\n    }\n    var directivesDef;\n    if (field &&\n        field.astNode &&\n        field.astNode.directives &&\n        field.astNode.directives.length > 0) {\n        directivesDef = (React.createElement(\"div\", { className: \"doc-category\" },\n            React.createElement(\"div\", { className: \"doc-category-title\" }, 'directives'),\n            field.astNode.directives.map(function (directive) { return (React.createElement(\"div\", { key: directive.name.value, className: \"doc-category-item\" },\n                React.createElement(\"div\", null,\n                    React.createElement(Directive, { directive: directive })))); })));\n    }\n    return (React.createElement(\"div\", null,\n        React.createElement(MarkdownContent, { className: \"doc-type-description\", markdown: (field === null || field === void 0 ? void 0 : field.description) || 'No Description' }),\n        field && 'deprecationReason' in field && (React.createElement(MarkdownContent, { className: \"doc-deprecation\", markdown: field === null || field === void 0 ? void 0 : field.deprecationReason })),\n        React.createElement(\"div\", { className: \"doc-category\" },\n            React.createElement(\"div\", { className: \"doc-category-title\" }, 'type'),\n            React.createElement(TypeLink, { type: field === null || field === void 0 ? void 0 : field.type, onClick: onClickType })),\n        argsDef,\n        directivesDef));\n}\n//# sourceMappingURL=FieldDoc.js.map"]},"metadata":{},"sourceType":"module"}