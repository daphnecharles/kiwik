{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegExpString = exports.IntNumber = exports.BigIntString = exports.AddressString = exports.HexString = exports.OpaqueType = void 0;\n\nfunction OpaqueType() {\n  return function (value) {\n    return value;\n  };\n}\n\nexports.OpaqueType = OpaqueType;\nexports.HexString = OpaqueType();\nexports.AddressString = OpaqueType();\nexports.BigIntString = OpaqueType();\n\nfunction IntNumber(num) {\n  return Math.floor(num);\n}\n\nexports.IntNumber = IntNumber;\nexports.RegExpString = OpaqueType();","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/walletlink/dist/types.js"],"names":["Object","defineProperty","exports","value","RegExpString","IntNumber","BigIntString","AddressString","HexString","OpaqueType","num","Math","floor"],"mappings":"AAAA,a,CACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,aAAR,GAAwBL,OAAO,CAACM,SAAR,GAAoBN,OAAO,CAACO,UAAR,GAAqB,KAAK,CAAxI;;AACA,SAASA,UAAT,GAAsB;AAClB,SAAO,UAACN,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAP;AACH;;AACDD,OAAO,CAACO,UAAR,GAAqBA,UAArB;AACAP,OAAO,CAACM,SAAR,GAAoBC,UAAU,EAA9B;AACAP,OAAO,CAACK,aAAR,GAAwBE,UAAU,EAAlC;AACAP,OAAO,CAACI,YAAR,GAAuBG,UAAU,EAAjC;;AACA,SAASJ,SAAT,CAAmBK,GAAnB,EAAwB;AACpB,SAAOC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAP;AACH;;AACDR,OAAO,CAACG,SAAR,GAAoBA,SAApB;AACAH,OAAO,CAACE,YAAR,GAAuBK,UAAU,EAAjC","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegExpString = exports.IntNumber = exports.BigIntString = exports.AddressString = exports.HexString = exports.OpaqueType = void 0;\nfunction OpaqueType() {\n    return (value) => value;\n}\nexports.OpaqueType = OpaqueType;\nexports.HexString = OpaqueType();\nexports.AddressString = OpaqueType();\nexports.BigIntString = OpaqueType();\nfunction IntNumber(num) {\n    return Math.floor(num);\n}\nexports.IntNumber = IntNumber;\nexports.RegExpString = OpaqueType();\n"]},"metadata":{},"sourceType":"script"}