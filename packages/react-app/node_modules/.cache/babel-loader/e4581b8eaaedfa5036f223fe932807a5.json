{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar decodeErrPrefix = 'CBOR decode error:';\nvar encodeErrPrefix = 'CBOR encode error:';\nvar uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\n\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(\"\".concat(decodeErrPrefix, \" not enough data for type\"));\n  }\n}\n\nexports.assertEnoughData = assertEnoughData;\nexports.decodeErrPrefix = decodeErrPrefix;\nexports.encodeErrPrefix = encodeErrPrefix;\nexports.uintMinorPrefixBytes = uintMinorPrefixBytes;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/cborg/cjs/lib/common.js"],"names":["Object","defineProperty","exports","value","decodeErrPrefix","encodeErrPrefix","uintMinorPrefixBytes","assertEnoughData","data","pos","need","length","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AAEA,IAAMC,eAAe,GAAG,oBAAxB;AACA,IAAMC,eAAe,GAAG,oBAAxB;AACA,IAAMC,oBAAoB,GAAG,EAA7B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;AACAA,oBAAoB,CAAC,EAAD,CAApB,GAA2B,CAA3B;;AACA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2C;AACzC,MAAIF,IAAI,CAACG,MAAL,GAAcF,GAAd,GAAoBC,IAAxB,EAA8B;AAC5B,UAAM,IAAIE,KAAJ,WAAcR,eAAd,+BAAN;AACD;AACF;;AAEDF,OAAO,CAACK,gBAAR,GAA2BA,gBAA3B;AACAL,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACAF,OAAO,CAACG,eAAR,GAA0BA,eAA1B;AACAH,OAAO,CAACI,oBAAR,GAA+BA,oBAA/B","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\n\nexports.assertEnoughData = assertEnoughData;\nexports.decodeErrPrefix = decodeErrPrefix;\nexports.encodeErrPrefix = encodeErrPrefix;\nexports.uintMinorPrefixBytes = uintMinorPrefixBytes;\n"]},"metadata":{},"sourceType":"script"}