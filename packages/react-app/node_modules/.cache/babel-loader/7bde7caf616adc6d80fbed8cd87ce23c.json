{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cid = require('multiformats/cid');\n\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\n\nvar decodePin = function decodePin(_ref) {\n  var name = _ref.Name,\n      status = _ref.Status,\n      cid$1 = _ref.Cid;\n  return {\n    cid: cid.CID.parse(cid$1),\n    name: name,\n    status: status\n  };\n};\n\nvar encodeService = function encodeService(service) {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\n\nvar encodeCID = function encodeCID(cid$1) {\n  if (cid.CID.asCID(cid$1)) {\n    return cid$1.toString();\n  } else {\n    throw new TypeError(\"CID instance expected instead of \".concat(typeof cid$1));\n  }\n};\n\nvar encodeQuery = function encodeQuery(_ref2) {\n  var service = _ref2.service,\n      cid = _ref2.cid,\n      name = _ref2.name,\n      status = _ref2.status,\n      all = _ref2.all;\n  var query = toUrlSearchParams.toUrlSearchParams({\n    service: encodeService(service),\n    name: name,\n    force: all ? true : undefined\n  });\n\n  if (cid) {\n    var _iterator = _createForOfIteratorHelper(cid),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        query.append('cid', encodeCID(value));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  if (status) {\n    var _iterator2 = _createForOfIteratorHelper(status),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n        query.append('status', _value);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return query;\n};\n\nvar encodeAddParams = function encodeAddParams(_ref3) {\n  var cid = _ref3.cid,\n      service = _ref3.service,\n      background = _ref3.background,\n      name = _ref3.name,\n      origins = _ref3.origins;\n  var params = toUrlSearchParams.toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name: name,\n    background: background ? true : undefined\n  });\n\n  if (origins) {\n    var _iterator3 = _createForOfIteratorHelper(origins),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var origin = _step3.value;\n        params.append('origin', origin.toString());\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return params;\n};\n\nexports.decodePin = decodePin;\nexports.encodeAddParams = encodeAddParams;\nexports.encodeCID = encodeCID;\nexports.encodeQuery = encodeQuery;\nexports.encodeService = encodeService;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/pin/remote/utils.js"],"names":["Object","defineProperty","exports","value","cid","require","toUrlSearchParams","decodePin","name","Name","status","Status","cid$1","Cid","CID","parse","encodeService","service","TypeError","encodeCID","asCID","toString","encodeQuery","all","query","force","undefined","append","encodeAddParams","background","origins","params","arg","origin"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('multiformats/cid');\nvar toUrlSearchParams = require('../../lib/to-url-search-params.js');\n\nconst decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid$1\n}) => {\n  return {\n    cid: cid.CID.parse(cid$1),\n    name,\n    status\n  };\n};\nconst encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nconst encodeCID = cid$1 => {\n  if (cid.CID.asCID(cid$1)) {\n    return cid$1.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${ typeof cid$1 }`);\n  }\n};\nconst encodeQuery = ({service, cid, name, status, all}) => {\n  const query = toUrlSearchParams.toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  });\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nconst encodeAddParams = ({cid, service, background, name, origins}) => {\n  const params = toUrlSearchParams.toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  });\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};\n\nexports.decodePin = decodePin;\nexports.encodeAddParams = encodeAddParams;\nexports.encodeCID = encodeCID;\nexports.encodeQuery = encodeQuery;\nexports.encodeService = encodeService;\n"]},"metadata":{},"sourceType":"script"}