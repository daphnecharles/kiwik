{"ast":null,"code":"/* eslint-disable no-undef */\n'use strict';\n\nvar _defineProperty = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _awaitAsyncGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _require = require('./http/fetch'),\n    _fetch = _require.fetch,\n    Request = _require.Request,\n    Headers = _require.Headers;\n\nvar _require2 = require('./http/error'),\n    TimeoutError = _require2.TimeoutError,\n    HTTPError = _require2.HTTPError;\n\nvar merge = require('merge-options').bind({\n  ignoreUndefined: true\n});\n\nvar _require3 = require('iso-url'),\n    URL = _require3.URL,\n    URLSearchParams = _require3.URLSearchParams;\n\nvar anySignal = require('any-signal');\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\n\n\nvar timeout = function timeout(promise, ms, abortController) {\n  if (ms === undefined) {\n    return promise;\n  }\n\n  var start = Date.now();\n\n  var timedOut = function timedOut() {\n    var time = Date.now() - start;\n    return time >= ms;\n  };\n\n  return new Promise(function (resolve, reject) {\n    var timeoutID = setTimeout(function () {\n      if (timedOut()) {\n        reject(new TimeoutError());\n        abortController.abort();\n      }\n    }, ms);\n    /**\n     * @param {(value: any) => void } next\n     */\n\n    var after = function after(next) {\n      /**\n       * @param {any} res\n       */\n      var fn = function fn(res) {\n        clearTimeout(timeoutID);\n\n        if (timedOut()) {\n          reject(new TimeoutError());\n          return;\n        }\n\n        next(res);\n      };\n\n      return fn;\n    };\n\n    promise.then(after(resolve), after(reject));\n  });\n};\n\nvar defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n};\n\nvar HTTP = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  function HTTP() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, HTTP);\n\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options);\n  }\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n\n\n  _createClass(HTTP, [{\n    key: \"fetch\",\n    value: function () {\n      var _fetch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resource) {\n        var options,\n            opts,\n            headers,\n            url,\n            searchParams,\n            transformSearchParams,\n            json,\n            abortController,\n            signal,\n            response,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n\n                /** @type {HTTPOptions} */\n                opts = merge(this.opts, options);\n                headers = new Headers(opts.headers); // validate resource type\n\n                if (!(typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request))) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new TypeError('`resource` must be a string, URL, or Request');\n\n              case 5:\n                url = new URL(resource.toString(), opts.base);\n                searchParams = opts.searchParams, transformSearchParams = opts.transformSearchParams, json = opts.json;\n\n                if (searchParams) {\n                  if (typeof transformSearchParams === 'function') {\n                    // @ts-ignore\n                    url.search = transformSearchParams(new URLSearchParams(opts.searchParams));\n                  } else {\n                    // @ts-ignore\n                    url.search = new URLSearchParams(opts.searchParams);\n                  }\n                }\n\n                if (json) {\n                  opts.body = JSON.stringify(opts.json);\n                  headers.set('content-type', 'application/json');\n                }\n\n                abortController = new AbortController(); // @ts-ignore\n\n                signal = anySignal([abortController.signal, opts.signal]);\n                _context2.next = 13;\n                return timeout(_fetch(url.toString(), _objectSpread(_objectSpread({}, opts), {}, {\n                  signal: signal,\n                  timeout: undefined,\n                  headers: headers\n                })), opts.timeout, abortController);\n\n              case 13:\n                response = _context2.sent;\n\n                if (!(!response.ok && opts.throwHttpErrors)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                if (!opts.handleError) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                _context2.next = 18;\n                return opts.handleError(response);\n\n              case 18:\n                throw new HTTPError(response);\n\n              case 19:\n                response.iterator = function () {\n                  return fromStream(response.body);\n                };\n\n                response.ndjson = /*#__PURE__*/_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _iteratorNormalCompletion = true;\n                          _didIteratorError = false;\n                          _context.prev = 2;\n                          _iterator = _asyncIterator(ndjson(response.iterator()));\n\n                        case 4:\n                          _context.next = 6;\n                          return _awaitAsyncGenerator(_iterator.next());\n\n                        case 6:\n                          _step = _context.sent;\n                          _iteratorNormalCompletion = _step.done;\n                          _context.next = 10;\n                          return _awaitAsyncGenerator(_step.value);\n\n                        case 10:\n                          _value = _context.sent;\n\n                          if (_iteratorNormalCompletion) {\n                            _context.next = 23;\n                            break;\n                          }\n\n                          chunk = _value;\n\n                          if (!options.transform) {\n                            _context.next = 18;\n                            break;\n                          }\n\n                          _context.next = 16;\n                          return options.transform(chunk);\n\n                        case 16:\n                          _context.next = 20;\n                          break;\n\n                        case 18:\n                          _context.next = 20;\n                          return chunk;\n\n                        case 20:\n                          _iteratorNormalCompletion = true;\n                          _context.next = 4;\n                          break;\n\n                        case 23:\n                          _context.next = 29;\n                          break;\n\n                        case 25:\n                          _context.prev = 25;\n                          _context.t0 = _context[\"catch\"](2);\n                          _didIteratorError = true;\n                          _iteratorError = _context.t0;\n\n                        case 29:\n                          _context.prev = 29;\n                          _context.prev = 30;\n\n                          if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                            _context.next = 34;\n                            break;\n                          }\n\n                          _context.next = 34;\n                          return _awaitAsyncGenerator(_iterator.return());\n\n                        case 34:\n                          _context.prev = 34;\n\n                          if (!_didIteratorError) {\n                            _context.next = 37;\n                            break;\n                          }\n\n                          throw _iteratorError;\n\n                        case 37:\n                          return _context.finish(34);\n\n                        case 38:\n                          return _context.finish(29);\n\n                        case 39:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[2, 25, 29, 39], [30,, 34, 38]]);\n                }));\n                return _context2.abrupt(\"return\", response);\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetch(_x2) {\n        return _fetch2.apply(this, arguments);\n      }\n\n      return fetch;\n    }()\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"post\",\n    value: function post(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'POST'\n      }));\n    }\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'GET'\n      }));\n    }\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"put\",\n    value: function put(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'PUT'\n      }));\n    }\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.fetch(resource, _objectSpread(_objectSpread({}, options), {}, {\n        method: 'DELETE'\n      }));\n    }\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n\n  }, {\n    key: \"options\",\n    value: function options(resource) {\n      var _options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return this.fetch(resource, _objectSpread(_objectSpread({}, _options), {}, {\n        method: 'OPTIONS'\n      }));\n    }\n  }]);\n\n  return HTTP;\n}();\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\n\n\nvar ndjson = /*#__PURE__*/function () {\n  var _ref2 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(source) {\n    var decoder, buf, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, chunk, lines, i, l;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            decoder = new TextDecoder();\n            buf = '';\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context3.prev = 4;\n            _iterator2 = _asyncIterator(source);\n\n          case 6:\n            _context3.next = 8;\n            return _awaitAsyncGenerator(_iterator2.next());\n\n          case 8:\n            _step2 = _context3.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context3.next = 12;\n            return _awaitAsyncGenerator(_step2.value);\n\n          case 12:\n            _value2 = _context3.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context3.next = 30;\n              break;\n            }\n\n            chunk = _value2;\n            buf += decoder.decode(chunk, {\n              stream: true\n            });\n            lines = buf.split(/\\r?\\n/);\n            i = 0;\n\n          case 18:\n            if (!(i < lines.length - 1)) {\n              _context3.next = 26;\n              break;\n            }\n\n            l = lines[i].trim();\n\n            if (!(l.length > 0)) {\n              _context3.next = 23;\n              break;\n            }\n\n            _context3.next = 23;\n            return JSON.parse(l);\n\n          case 23:\n            i++;\n            _context3.next = 18;\n            break;\n\n          case 26:\n            buf = lines[lines.length - 1];\n\n          case 27:\n            _iteratorNormalCompletion2 = true;\n            _context3.next = 6;\n            break;\n\n          case 30:\n            _context3.next = 36;\n            break;\n\n          case 32:\n            _context3.prev = 32;\n            _context3.t0 = _context3[\"catch\"](4);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context3.t0;\n\n          case 36:\n            _context3.prev = 36;\n            _context3.prev = 37;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n              _context3.next = 41;\n              break;\n            }\n\n            _context3.next = 41;\n            return _awaitAsyncGenerator(_iterator2.return());\n\n          case 41:\n            _context3.prev = 41;\n\n            if (!_didIteratorError2) {\n              _context3.next = 44;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 44:\n            return _context3.finish(41);\n\n          case 45:\n            return _context3.finish(36);\n\n          case 46:\n            buf += decoder.decode();\n            buf = buf.trim();\n\n            if (!(buf.length !== 0)) {\n              _context3.next = 51;\n              break;\n            }\n\n            _context3.next = 51;\n            return JSON.parse(buf);\n\n          case 51:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 32, 36, 46], [37,, 41, 45]]);\n  }));\n\n  return function ndjson(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\n\n\nvar fromStream = function fromStream(source) {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    var iter = source[Symbol.asyncIterator]();\n    return _defineProperty({}, Symbol.asyncIterator, function () {\n      return {\n        next: iter.next.bind(iter),\n        return: function _return(value) {\n          source.destroy();\n\n          if (typeof iter.return === 'function') {\n            return iter.return();\n          }\n\n          return Promise.resolve({\n            done: true,\n            value: value\n          });\n        }\n      };\n    });\n  }\n\n  if (isWebReadableStream(source)) {\n    var reader = source.getReader();\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$_awaitAsyncGen, done, value;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n\n            case 1:\n              if (!true) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 4;\n              return _awaitAsyncGenerator(reader.read());\n\n            case 4:\n              _yield$_awaitAsyncGen = _context4.sent;\n              done = _yield$_awaitAsyncGen.done;\n              value = _yield$_awaitAsyncGen.value;\n\n              if (!done) {\n                _context4.next = 9;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 9:\n              if (!value) {\n                _context4.next = 12;\n                break;\n              }\n\n              _context4.next = 12;\n              return value;\n\n            case 12:\n              _context4.next = 1;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              reader.releaseLock();\n              return _context4.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0,, 14, 17]]);\n    }))();\n  }\n\n  if (isAsyncIterable(source)) {\n    return source;\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable');\n};\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\n\n\nvar isAsyncIterable = function isAsyncIterable(value) {\n  return typeof value === 'object' && value !== null && typeof\n  /** @type {any} */\n  value[Symbol.asyncIterator] === 'function';\n};\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\n\n\nvar isWebReadableStream = function isWebReadableStream(value) {\n  return value && typeof\n  /** @type {any} */\n  value.getReader === 'function';\n};\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\n\n\nvar isNodeReadableStream = function isNodeReadableStream(value) {\n  return Object.prototype.hasOwnProperty.call(value, 'readable') && Object.prototype.hasOwnProperty.call(value, 'writable');\n};\n\nHTTP.HTTPError = HTTPError;\nHTTP.TimeoutError = TimeoutError;\nHTTP.streamToAsyncIterator = fromStream;\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\nHTTP.post = function (resource, options) {\n  return new HTTP(options).post(resource, options);\n};\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\n\nHTTP.get = function (resource, options) {\n  return new HTTP(options).get(resource, options);\n};\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\n\nHTTP.put = function (resource, options) {\n  return new HTTP(options).put(resource, options);\n};\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\n\nHTTP.delete = function (resource, options) {\n  return new HTTP(options).delete(resource, options);\n};\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\n\n\nHTTP.options = function (resource, options) {\n  return new HTTP(options).options(resource, options);\n};\n\nmodule.exports = HTTP;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-utils/src/http.js"],"names":["require","fetch","Request","Headers","TimeoutError","HTTPError","merge","bind","ignoreUndefined","URL","URLSearchParams","anySignal","timeout","promise","ms","abortController","undefined","start","Date","now","timedOut","time","Promise","resolve","reject","timeoutID","setTimeout","abort","after","next","fn","res","clearTimeout","then","defaults","throwHttpErrors","credentials","HTTP","options","opts","resource","headers","TypeError","url","toString","base","searchParams","transformSearchParams","json","search","body","JSON","stringify","set","AbortController","signal","response","ok","handleError","iterator","fromStream","ndjson","chunk","transform","method","source","decoder","TextDecoder","buf","decode","stream","lines","split","i","length","l","trim","parse","isNodeReadableStream","iter","Symbol","asyncIterator","return","value","destroy","done","isWebReadableStream","reader","getReader","read","releaseLock","isAsyncIterable","Object","prototype","hasOwnProperty","call","streamToAsyncIterator","post","get","put","delete","module","exports"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;;;;AAEA,eAAoCA,OAAO,CAAC,cAAD,CAA3C;AAAA,IAAQC,MAAR,YAAQA,KAAR;AAAA,IAAeC,OAAf,YAAeA,OAAf;AAAA,IAAwBC,OAAxB,YAAwBA,OAAxB;;AACA,gBAAoCH,OAAO,CAAC,cAAD,CAA3C;AAAA,IAAQI,YAAR,aAAQA,YAAR;AAAA,IAAsBC,SAAtB,aAAsBA,SAAtB;;AACA,IAAMC,KAAK,GAAGN,OAAO,CAAC,eAAD,CAAP,CAAyBO,IAAzB,CAA8B;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAA9B,CAAd;;AACA,gBAAiCR,OAAO,CAAC,SAAD,CAAxC;AAAA,IAAQS,GAAR,aAAQA,GAAR;AAAA,IAAaC,eAAb,aAAaA,eAAb;;AACA,IAAMC,SAAS,GAAGX,OAAO,CAAC,YAAD,CAAzB;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMY,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAUC,EAAV,EAAcC,eAAd,EAAkC;AAChD,MAAID,EAAE,KAAKE,SAAX,EAAsB;AACpB,WAAOH,OAAP;AACD;;AAED,MAAMI,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAd;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMC,IAAI,GAAGH,IAAI,CAACC,GAAL,KAAaF,KAA1B;AAEA,WAAOI,IAAI,IAAIP,EAAf;AACD,GAJD;;AAMA,SAAO,IAAIQ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,SAAS,GAAGC,UAAU,CAAC,YAAM;AACjC,UAAIN,QAAQ,EAAZ,EAAgB;AACdI,QAAAA,MAAM,CAAC,IAAIpB,YAAJ,EAAD,CAAN;AACAW,QAAAA,eAAe,CAACY,KAAhB;AACD;AACF,KAL2B,EAKzBb,EALyB,CAA5B;AAOA;AACJ;AACA;;AACI,QAAMc,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AACtB;AACN;AACA;AACM,UAAMC,EAAE,GAAG,SAALA,EAAK,CAACC,GAAD,EAAS;AAClBC,QAAAA,YAAY,CAACP,SAAD,CAAZ;;AAEA,YAAIL,QAAQ,EAAZ,EAAgB;AACdI,UAAAA,MAAM,CAAC,IAAIpB,YAAJ,EAAD,CAAN;AACA;AACD;;AAEDyB,QAAAA,IAAI,CAACE,GAAD,CAAJ;AACD,OATD;;AAUA,aAAOD,EAAP;AACD,KAfD;;AAiBAjB,IAAAA,OAAO,CACJoB,IADH,CACQL,KAAK,CAACL,OAAD,CADb,EACwBK,KAAK,CAACJ,MAAD,CAD7B;AAED,GA9BM,CAAP;AA+BD,CA5CD;;AA8CA,IAAMU,QAAQ,GAAG;AACfC,EAAAA,eAAe,EAAE,IADF;AAEfC,EAAAA,WAAW,EAAE;AAFE,CAAjB;;IAKMC,I;AACJ;AACF;AACA;AACA;AACE,kBAA2B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACzB;AACA,SAAKC,IAAL,GAAYjC,KAAK,CAAC4B,QAAD,EAAWI,OAAX,CAAjB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;;;6EACE,kBAAaE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBF,gBAAAA,OAAvB,8DAAiC,EAAjC;;AACE;AACMC,gBAAAA,IAFR,GAEejC,KAAK,CAAC,KAAKiC,IAAN,EAAYD,OAAZ,CAFpB;AAGQG,gBAAAA,OAHR,GAGkB,IAAItC,OAAJ,CAAYoC,IAAI,CAACE,OAAjB,CAHlB,EAKE;;AALF,sBAMM,OAAOD,QAAP,KAAoB,QAApB,IAAgC,EAAEA,QAAQ,YAAY/B,GAApB,IAA2B+B,QAAQ,YAAYtC,OAAjD,CANtC;AAAA;AAAA;AAAA;;AAAA,sBAOU,IAAIwC,SAAJ,CAAc,8CAAd,CAPV;;AAAA;AAUQC,gBAAAA,GAVR,GAUc,IAAIlC,GAAJ,CAAQ+B,QAAQ,CAACI,QAAT,EAAR,EAA6BL,IAAI,CAACM,IAAlC,CAVd;AAaIC,gBAAAA,YAbJ,GAgBMP,IAhBN,CAaIO,YAbJ,EAcIC,qBAdJ,GAgBMR,IAhBN,CAcIQ,qBAdJ,EAeIC,IAfJ,GAgBMT,IAhBN,CAeIS,IAfJ;;AAkBE,oBAAIF,YAAJ,EAAkB;AAChB,sBAAI,OAAOC,qBAAP,KAAiC,UAArC,EAAiD;AAC/C;AACAJ,oBAAAA,GAAG,CAACM,MAAJ,GAAaF,qBAAqB,CAAC,IAAIrC,eAAJ,CAAoB6B,IAAI,CAACO,YAAzB,CAAD,CAAlC;AACD,mBAHD,MAGO;AACL;AACAH,oBAAAA,GAAG,CAACM,MAAJ,GAAa,IAAIvC,eAAJ,CAAoB6B,IAAI,CAACO,YAAzB,CAAb;AACD;AACF;;AAED,oBAAIE,IAAJ,EAAU;AACRT,kBAAAA,IAAI,CAACW,IAAL,GAAYC,IAAI,CAACC,SAAL,CAAeb,IAAI,CAACS,IAApB,CAAZ;AACAP,kBAAAA,OAAO,CAACY,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;AACD;;AAEKtC,gBAAAA,eAjCR,GAiC0B,IAAIuC,eAAJ,EAjC1B,EAkCE;;AACMC,gBAAAA,MAnCR,GAmCiB5C,SAAS,CAAC,CAACI,eAAe,CAACwC,MAAjB,EAAyBhB,IAAI,CAACgB,MAA9B,CAAD,CAnC1B;AAAA;AAAA,uBAqCyB3C,OAAO,CAC5BX,MAAK,CACH0C,GAAG,CAACC,QAAJ,EADG,kCAGEL,IAHF;AAIDgB,kBAAAA,MAAM,EAANA,MAJC;AAKD3C,kBAAAA,OAAO,EAAEI,SALR;AAMDyB,kBAAAA,OAAO,EAAPA;AANC,mBADuB,EAU5BF,IAAI,CAAC3B,OAVuB,EAW5BG,eAX4B,CArChC;;AAAA;AAqCQyC,gBAAAA,QArCR;;AAAA,sBAmDM,CAACA,QAAQ,CAACC,EAAV,IAAgBlB,IAAI,CAACJ,eAnD3B;AAAA;AAAA;AAAA;;AAAA,qBAoDQI,IAAI,CAACmB,WApDb;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAqDYnB,IAAI,CAACmB,WAAL,CAAiBF,QAAjB,CArDZ;;AAAA;AAAA,sBAuDU,IAAInD,SAAJ,CAAcmD,QAAd,CAvDV;;AAAA;AA0DEA,gBAAAA,QAAQ,CAACG,QAAT,GAAoB,YAAY;AAC9B,yBAAOC,UAAU,CAACJ,QAAQ,CAACN,IAAV,CAAjB;AACD,iBAFD;;AAIAM,gBAAAA,QAAQ,CAACK,MAAT,2EAAkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDACUA,MAAM,CAACL,QAAQ,CAACG,QAAT,EAAD,CADhB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACCG,0BAAAA,KADD;;AAAA,+BAEVxB,OAAO,CAACyB,SAFE;AAAA;AAAA;AAAA;;AAAA;AAGZ,iCAAMzB,OAAO,CAACyB,SAAR,CAAkBD,KAAlB,CAAN;;AAHY;AAAA;AAAA;;AAAA;AAAA;AAKZ,iCAAMA,KAAN;;AALY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlB;AA9DF,kDAwESN,QAxET;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA2EA;AACF;AACA;AACA;;;;WACE,cAAMhB,QAAN,EAA8B;AAAA,UAAdF,OAAc,uEAAJ,EAAI;AAC5B,aAAO,KAAKrC,KAAL,CAAWuC,QAAX,kCAA0BF,OAA1B;AAAmC0B,QAAAA,MAAM,EAAE;AAA3C,SAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,aAAKxB,QAAL,EAA6B;AAAA,UAAdF,OAAc,uEAAJ,EAAI;AAC3B,aAAO,KAAKrC,KAAL,CAAWuC,QAAX,kCAA0BF,OAA1B;AAAmC0B,QAAAA,MAAM,EAAE;AAA3C,SAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,aAAKxB,QAAL,EAA6B;AAAA,UAAdF,OAAc,uEAAJ,EAAI;AAC3B,aAAO,KAAKrC,KAAL,CAAWuC,QAAX,kCAA0BF,OAA1B;AAAmC0B,QAAAA,MAAM,EAAE;AAA3C,SAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,iBAAQxB,QAAR,EAAgC;AAAA,UAAdF,OAAc,uEAAJ,EAAI;AAC9B,aAAO,KAAKrC,KAAL,CAAWuC,QAAX,kCAA0BF,OAA1B;AAAmC0B,QAAAA,MAAM,EAAE;AAA3C,SAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,iBAASxB,QAAT,EAAiC;AAAA,UAAdF,QAAc,uEAAJ,EAAI;;AAC/B,aAAO,KAAKrC,KAAL,CAAWuC,QAAX,kCAA0BF,QAA1B;AAAmC0B,QAAAA,MAAM,EAAE;AAA3C,SAAP;AACD;;;;;AAGH;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMH,MAAM;AAAA,yEAAG,kBAAkBI,MAAlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,OADO,GACG,IAAIC,WAAJ,EADH;AAETC,YAAAA,GAFS,GAEH,EAFG;AAAA;AAAA;AAAA;AAAA,wCAIaH,MAJb;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAIIH,YAAAA,KAJJ;AAKXM,YAAAA,GAAG,IAAIF,OAAO,CAACG,MAAR,CAAeP,KAAf,EAAsB;AAAEQ,cAAAA,MAAM,EAAE;AAAV,aAAtB,CAAP;AACMC,YAAAA,KANK,GAMGH,GAAG,CAACI,KAAJ,CAAU,OAAV,CANH;AAQFC,YAAAA,CARE,GAQE,CARF;;AAAA;AAAA,kBAQKA,CAAC,GAAGF,KAAK,CAACG,MAAN,GAAe,CARxB;AAAA;AAAA;AAAA;;AASHC,YAAAA,CATG,GASCJ,KAAK,CAACE,CAAD,CAAL,CAASG,IAAT,EATD;;AAAA,kBAULD,CAAC,CAACD,MAAF,GAAW,CAVN;AAAA;AAAA;AAAA;;AAAA;AAWP,mBAAMvB,IAAI,CAAC0B,KAAL,CAAWF,CAAX,CAAN;;AAXO;AAQ2BF,YAAAA,CAAC,EAR5B;AAAA;AAAA;;AAAA;AAcXL,YAAAA,GAAG,GAAGG,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAX;;AAdW;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAgBbN,YAAAA,GAAG,IAAIF,OAAO,CAACG,MAAR,EAAP;AACAD,YAAAA,GAAG,GAAGA,GAAG,CAACQ,IAAJ,EAAN;;AAjBa,kBAkBTR,GAAG,CAACM,MAAJ,KAAe,CAlBN;AAAA;AAAA;AAAA;;AAAA;AAmBX,mBAAMvB,IAAI,CAAC0B,KAAL,CAAWT,GAAX,CAAN;;AAnBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANP,MAAM;AAAA;AAAA;AAAA,GAAZ;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMD,UAAU,GAAG,SAAbA,UAAa,CAACK,MAAD,EAAY;AAC7B;AACA,MAAIa,oBAAoB,CAACb,MAAD,CAAxB,EAAkC;AAChC,QAAMc,IAAI,GAAGd,MAAM,CAACe,MAAM,CAACC,aAAR,CAAN,EAAb;AACA,+BACGD,MAAM,CAACC,aADV,cAC4B;AACxB,aAAO;AACLpD,QAAAA,IAAI,EAAEkD,IAAI,CAAClD,IAAL,CAAUtB,IAAV,CAAewE,IAAf,CADD;AAELG,QAAAA,MAFK,mBAEGC,KAFH,EAEU;AACblB,UAAAA,MAAM,CAACmB,OAAP;;AACA,cAAI,OAAOL,IAAI,CAACG,MAAZ,KAAuB,UAA3B,EAAuC;AACrC,mBAAOH,IAAI,CAACG,MAAL,EAAP;AACD;;AACD,iBAAO5D,OAAO,CAACC,OAAR,CAAgB;AAAE8D,YAAAA,IAAI,EAAE,IAAR;AAAcF,YAAAA,KAAK,EAALA;AAAd,WAAhB,CAAP;AACD;AARI,OAAP;AAUD,KAZH;AAcD;;AAED,MAAIG,mBAAmB,CAACrB,MAAD,CAAvB,EAAiC;AAC/B,QAAMsB,MAAM,GAAGtB,MAAM,CAACuB,SAAP,EAAf;AACA,WAAO,2DAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEG,IAFH;AAAA;AAAA;AAAA;;AAAA;AAAA,0CAI4BD,MAAM,CAACE,IAAP,EAJ5B;;AAAA;AAAA;AAIMJ,cAAAA,IAJN,yBAIMA,IAJN;AAIYF,cAAAA,KAJZ,yBAIYA,KAJZ;;AAAA,mBAMEE,IANF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,mBAQEF,KARF;AAAA;AAAA;AAAA;;AAAA;AASA,qBAAMA,KAAN;;AATA;AAAA;AAAA;;AAAA;AAAA;AAaJI,cAAAA,MAAM,CAACG,WAAP;AAbI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAAP;AAgBD;;AAED,MAAIC,eAAe,CAAC1B,MAAD,CAAnB,EAA6B;AAC3B,WAAOA,MAAP;AACD;;AAED,QAAM,IAAIvB,SAAJ,CAAc,2CAAd,CAAN;AACD,CA7CD;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMiD,eAAe,GAAG,SAAlBA,eAAkB,CAACR,KAAD,EAAW;AACjC,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IACPA,KAAK,KAAK,IADH,IAEP;AAAO;AAAmBA,EAAAA,KAAD,CAAQH,MAAM,CAACC,aAAf,CAAzB,KAA2D,UAF3D;AAGD,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACH,KAAD,EAAW;AACrC,SAAOA,KAAK,IAAI;AAAO;AAAmBA,EAAAA,KAAD,CAAQK,SAAjC,KAA+C,UAA/D;AACD,CAFD;AAIA;AACA;AACA;AACA;;;AACA,IAAMV,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACK,KAAD;AAAA,SAC3BS,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCZ,KAArC,EAA4C,UAA5C,KACAS,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCZ,KAArC,EAA4C,UAA5C,CAF2B;AAAA,CAA7B;;AAIA9C,IAAI,CAAChC,SAAL,GAAiBA,SAAjB;AACAgC,IAAI,CAACjC,YAAL,GAAoBA,YAApB;AACAiC,IAAI,CAAC2D,qBAAL,GAA6BpC,UAA7B;AAEA;AACA;AACA;AACA;;AACAvB,IAAI,CAAC4D,IAAL,GAAY,UAACzD,QAAD,EAAWF,OAAX;AAAA,SAAuB,IAAID,IAAJ,CAASC,OAAT,EAAkB2D,IAAlB,CAAuBzD,QAAvB,EAAiCF,OAAjC,CAAvB;AAAA,CAAZ;AAEA;AACA;AACA;AACA;;;AACAD,IAAI,CAAC6D,GAAL,GAAW,UAAC1D,QAAD,EAAWF,OAAX;AAAA,SAAuB,IAAID,IAAJ,CAASC,OAAT,EAAkB4D,GAAlB,CAAsB1D,QAAtB,EAAgCF,OAAhC,CAAvB;AAAA,CAAX;AAEA;AACA;AACA;AACA;;;AACAD,IAAI,CAAC8D,GAAL,GAAW,UAAC3D,QAAD,EAAWF,OAAX;AAAA,SAAuB,IAAID,IAAJ,CAASC,OAAT,EAAkB6D,GAAlB,CAAsB3D,QAAtB,EAAgCF,OAAhC,CAAvB;AAAA,CAAX;AAEA;AACA;AACA;AACA;;;AACAD,IAAI,CAAC+D,MAAL,GAAc,UAAC5D,QAAD,EAAWF,OAAX;AAAA,SAAuB,IAAID,IAAJ,CAASC,OAAT,EAAkB8D,MAAlB,CAAyB5D,QAAzB,EAAmCF,OAAnC,CAAvB;AAAA,CAAd;AAEA;AACA;AACA;AACA;;;AACAD,IAAI,CAACC,OAAL,GAAe,UAACE,QAAD,EAAWF,OAAX;AAAA,SAAuB,IAAID,IAAJ,CAASC,OAAT,EAAkBA,OAAlB,CAA0BE,QAA1B,EAAoCF,OAApC,CAAvB;AAAA,CAAf;;AAEA+D,MAAM,CAACC,OAAP,GAAiBjE,IAAjB","sourcesContent":["/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = function () {\n      return fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n"]},"metadata":{},"sourceType":"script"}