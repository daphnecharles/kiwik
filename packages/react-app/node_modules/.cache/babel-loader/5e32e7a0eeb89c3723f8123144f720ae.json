{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar byteUtils = require('./byte-utils.js');\n\nvar defaultChunkSize = 256;\n\nvar Bl = /*#__PURE__*/function () {\n  function Bl() {\n    var chunkSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultChunkSize;\n\n    _classCallCheck(this, Bl);\n\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n\n  _createClass(Bl, [{\n    key: \"reset\",\n    value: function reset() {\n      this.chunks = [];\n      this.cursor = 0;\n      this.maxCursor = -1;\n\n      if (this._initReuseChunk !== null) {\n        this.chunks.push(this._initReuseChunk);\n        this.maxCursor = this._initReuseChunk.length - 1;\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(bytes) {\n      var topChunk = this.chunks[this.chunks.length - 1];\n      var newMax = this.cursor + bytes.length;\n\n      if (newMax <= this.maxCursor + 1) {\n        var chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        topChunk.set(bytes, chunkPos);\n      } else {\n        if (topChunk) {\n          var _chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n\n          if (_chunkPos < topChunk.length) {\n            this.chunks[this.chunks.length - 1] = topChunk.subarray(0, _chunkPos);\n            this.maxCursor = this.cursor - 1;\n          }\n        }\n\n        if (bytes.length < 64 && bytes.length < this.chunkSize) {\n          topChunk = byteUtils.alloc(this.chunkSize);\n          this.chunks.push(topChunk);\n          this.maxCursor += topChunk.length;\n\n          if (this._initReuseChunk === null) {\n            this._initReuseChunk = topChunk;\n          }\n\n          topChunk.set(bytes, 0);\n        } else {\n          this.chunks.push(bytes);\n          this.maxCursor += bytes.length;\n        }\n      }\n\n      this.cursor += bytes.length;\n    }\n  }, {\n    key: \"toBytes\",\n    value: function toBytes() {\n      var reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var byts;\n\n      if (this.chunks.length === 1) {\n        var chunk = this.chunks[0];\n\n        if (reset && this.cursor > chunk.length / 2) {\n          byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n          this._initReuseChunk = null;\n          this.chunks = [];\n        } else {\n          byts = byteUtils.slice(chunk, 0, this.cursor);\n        }\n      } else {\n        byts = byteUtils.concat(this.chunks, this.cursor);\n      }\n\n      if (reset) {\n        this.reset();\n      }\n\n      return byts;\n    }\n  }]);\n\n  return Bl;\n}();\n\nexports.Bl = Bl;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/cborg/cjs/lib/bl.js"],"names":["Object","defineProperty","exports","value","byteUtils","require","defaultChunkSize","Bl","chunkSize","cursor","maxCursor","chunks","_initReuseChunk","push","length","bytes","topChunk","newMax","chunkPos","set","subarray","alloc","reset","byts","chunk","slice","concat"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar byteUtils = require('./byte-utils.js');\n\nconst defaultChunkSize = 256;\nclass Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.chunks = [];\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = byteUtils.alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = byteUtils.slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = byteUtils.concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}\n\nexports.Bl = Bl;\n"]},"metadata":{},"sourceType":"script"}