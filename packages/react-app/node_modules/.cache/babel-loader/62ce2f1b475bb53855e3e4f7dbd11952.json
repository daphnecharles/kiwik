{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/sam/Desktop/kiwik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar modeToString = require('../lib/mode-to-string.js');\n\nvar parseMtime = require('../lib/parse-mtime.js');\n\nvar configure = require('../lib/configure.js');\n\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nvar abortSignal = require('../lib/abort-signal.js');\n\nvar nativeAbortController = require('native-abort-controller');\n\nvar createWrite = configure.configure(function (api) {\n  function write(_x, _x2) {\n    return _write.apply(this, arguments);\n  }\n\n  function _write() {\n    _write = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, input) {\n      var options,\n          controller,\n          signal,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              controller = new nativeAbortController.AbortController();\n              signal = abortSignal.abortSignal(controller.signal, options.signal);\n              _context.t0 = api;\n              _context.t1 = _objectSpread;\n              _context.t2 = {\n                signal: signal,\n                searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                  arg: path,\n                  streamChannels: true,\n                  count: options.length\n                }, options))\n              };\n              _context.next = 8;\n              return multipartRequest.multipartRequest([{\n                content: input,\n                path: 'arg',\n                mode: modeToString.modeToString(options.mode),\n                mtime: parseMtime.parseMtime(options.mtime)\n              }], controller, options.headers);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n              _context.next = 12;\n              return _context.t0.post.call(_context.t0, 'files/write', _context.t4);\n\n            case 12:\n              res = _context.sent;\n              _context.next = 15;\n              return res.text();\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _write.apply(this, arguments);\n  }\n\n  return write;\n});\nexports.createWrite = createWrite;","map":{"version":3,"sources":["/Users/sam/Desktop/kiwik/node_modules/ipfs-http-client/cjs/src/files/write.js"],"names":["Object","defineProperty","exports","value","modeToString","require","parseMtime","configure","multipartRequest","toUrlSearchParams","abortSignal","nativeAbortController","createWrite","api","write","path","input","options","controller","AbortController","signal","searchParams","arg","streamChannels","count","length","content","mode","mtime","headers","post","res","text"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,uBAAD,CAAxB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,mCAAD,CAA9B;;AACA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,gCAAD,CAA/B;;AACA,IAAIK,WAAW,GAAGL,OAAO,CAAC,wBAAD,CAAzB;;AACA,IAAIM,qBAAqB,GAAGN,OAAO,CAAC,yBAAD,CAAnC;;AAEA,IAAMO,WAAW,GAAGL,SAAS,CAACA,SAAV,CAAoB,UAAAM,GAAG,EAAI;AAAA,WAC9BC,KAD8B;AAAA;AAAA;;AAAA;AAAA,sEAC7C,iBAAqBC,IAArB,EAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkCC,cAAAA,OAAlC,2DAA4C,EAA5C;AACQC,cAAAA,UADR,GACqB,IAAIP,qBAAqB,CAACQ,eAA1B,EADrB;AAEQC,cAAAA,MAFR,GAEiBV,WAAW,CAACA,WAAZ,CAAwBQ,UAAU,CAACE,MAAnC,EAA2CH,OAAO,CAACG,MAAnD,CAFjB;AAAA,4BAGoBP,GAHpB;AAAA;AAAA;AAIIO,gBAAAA,MAAM,EAANA,MAJJ;AAKIC,gBAAAA,YAAY,EAAEZ,iBAAiB,CAACA,iBAAlB;AACZa,kBAAAA,GAAG,EAAEP,IADO;AAEZQ,kBAAAA,cAAc,EAAE,IAFJ;AAGZC,kBAAAA,KAAK,EAAEP,OAAO,CAACQ;AAHH,mBAITR,OAJS;AALlB;AAAA;AAAA,qBAWaT,gBAAgB,CAACA,gBAAjB,CAAkC,CAAC;AACxCkB,gBAAAA,OAAO,EAAEV,KAD+B;AAExCD,gBAAAA,IAAI,EAAE,KAFkC;AAGxCY,gBAAAA,IAAI,EAAEvB,YAAY,CAACA,YAAb,CAA0Ba,OAAO,CAACU,IAAlC,CAHkC;AAIxCC,gBAAAA,KAAK,EAAEtB,UAAU,CAACA,UAAX,CAAsBW,OAAO,CAACW,KAA9B;AAJiC,eAAD,CAAlC,EAKHV,UALG,EAKSD,OAAO,CAACY,OALjB,CAXb;;AAAA;AAAA;AAAA;AAAA;AAAA,iCAGwBC,IAHxB,mBAG6B,aAH7B;;AAAA;AAGQC,cAAAA,GAHR;AAAA;AAAA,qBAkBQA,GAAG,CAACC,IAAJ,EAlBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD6C;AAAA;AAAA;;AAqB7C,SAAOlB,KAAP;AACD,CAtBmB,CAApB;AAwBAZ,OAAO,CAACU,WAAR,GAAsBA,WAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar modeToString = require('../lib/mode-to-string.js');\nvar parseMtime = require('../lib/parse-mtime.js');\nvar configure = require('../lib/configure.js');\nvar multipartRequest = require('ipfs-core-utils/multipart-request');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\nvar abortSignal = require('../lib/abort-signal.js');\nvar nativeAbortController = require('native-abort-controller');\n\nconst createWrite = configure.configure(api => {\n  async function write(path, input, options = {}) {\n    const controller = new nativeAbortController.AbortController();\n    const signal = abortSignal.abortSignal(controller.signal, options.signal);\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams.toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...await multipartRequest.multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString.modeToString(options.mode),\n          mtime: parseMtime.parseMtime(options.mtime)\n        }], controller, options.headers)\n    });\n    await res.text();\n  }\n  return write;\n});\n\nexports.createWrite = createWrite;\n"]},"metadata":{},"sourceType":"script"}