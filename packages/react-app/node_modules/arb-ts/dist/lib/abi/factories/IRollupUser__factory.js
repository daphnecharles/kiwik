"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IRollupUser__factory = void 0;
const ethers_1 = require("ethers");
class IRollupUser__factory {
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IRollupUser__factory = IRollupUser__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'winningStaker',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'losingStaker',
                type: 'address',
            },
        ],
        name: 'completeChallenge',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract INode',
                name: 'node',
                type: 'address',
            },
        ],
        name: 'countStakedZombies',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_stakeToken',
                type: 'address',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'nodeNum',
                type: 'uint256',
            },
        ],
        name: 'requireUnresolved',
        outputs: [],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'requireUnresolvedExists',
        outputs: [],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'stakerAddress',
                type: 'address',
            },
        ],
        name: 'returnOldDeposit',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
