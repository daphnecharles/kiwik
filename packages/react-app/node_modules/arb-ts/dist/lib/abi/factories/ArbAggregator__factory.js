"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArbAggregator__factory = void 0;
const ethers_1 = require("ethers");
class ArbAggregator__factory {
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ArbAggregator__factory = ArbAggregator__factory;
const _abi = [
    {
        inputs: [],
        name: 'getDefaultAggregator',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'aggregator',
                type: 'address',
            },
        ],
        name: 'getFeeCollector',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'addr',
                type: 'address',
            },
        ],
        name: 'getPreferredAggregator',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newDefault',
                type: 'address',
            },
        ],
        name: 'setDefaultAggregator',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'aggregator',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'newFeeCollector',
                type: 'address',
            },
        ],
        name: 'setFeeCollector',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'prefAgg',
                type: 'address',
            },
        ],
        name: 'setPreferredAggregator',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
